<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>vue规范</title>
      <link href="/2020/01/14/vue-gui-fan/"/>
      <url>/2020/01/14/vue-gui-fan/</url>
      
        <content type="html"><![CDATA[<h2 id="1-组件选项顺序"><a href="#1-组件选项顺序" class="headerlink" title="1.组件选项顺序"></a>1.组件选项顺序</h2><pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span><span class="token operator">!</span>-- component name --<span class="token operator">></span><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>div<span class="token operator">></span><span class="token operator">&lt;</span>/div<span class="token operator">></span><span class="token operator">&lt;</span>/template<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token function">export</span> default <span class="token punctuation">{</span>  name: <span class="token string">""</span>,  components: <span class="token punctuation">{</span><span class="token punctuation">}</span>,  props: <span class="token punctuation">{</span><span class="token punctuation">}</span>,  data<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>,  watch: <span class="token punctuation">{</span><span class="token punctuation">}</span>,  computed: <span class="token punctuation">{</span><span class="token punctuation">}</span>,  mounted<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>,  methods: <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token operator">&lt;</span>/script<span class="token operator">></span><span class="token operator">&lt;</span>style lang<span class="token operator">=</span><span class="token string">"less"</span> scoped<span class="token operator">></span><span class="token operator">&lt;</span>/style<span class="token operator">></span></code></pre><h2 id="2-命名"><a href="#2-命名" class="headerlink" title="2.命名"></a>2.命名</h2><p>1.类名、构造函数，使用名词，大写字母开头。</p><pre class=" language-bash"><code class="language-bash">new Point<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>2.函数名，使用动宾短语。</p><pre class=" language-bash"><code class="language-bash">getAssetInfo<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span></code></pre><p>3.boolean 类型的变量使用 is 或 has 开头。</p><pre class=" language-bash"><code class="language-bash">isLoading <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>hasChildren <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></code></pre><p>5.id 采用驼峰式命名，class 采用横线连接(kebab-case)命名，保证语义化，禁止采用缩写。</p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#mapContainer</span>.grid-box</code></pre><p>6.文件夹命名、css、less、js 文件采用小驼峰式命名。</p><pre class=" language-bash"><code class="language-bash">reset.csscommon.lessuserPermission.jsElTableColumnPro.vue</code></pre><p>7.vue 组件命名，组件名为多个单词，采用大驼峰式命名，尽量是名词。</p><h2 id="3-注释"><a href="#3-注释" class="headerlink" title="3.注释"></a>3.注释</h2><ul><li>单行注释</li></ul><pre class=" language-bash"><code class="language-bash">// 函数描述</code></pre><ul><li>多行注释</li></ul><pre class=" language-bash"><code class="language-bash">/** * 函数描述 * @param <span class="token punctuation">{</span>参数类型<span class="token punctuation">}</span> 参数名 参数描述<span class="token punctuation">(</span>可选<span class="token punctuation">)</span> * @return <span class="token punctuation">{</span>返回类型<span class="token punctuation">}</span> 返回描述 */</code></pre><h2 id="4-书写规范"><a href="#4-书写规范" class="headerlink" title="4.书写规范"></a>4.书写规范</h2><h3 id="html-templete"><a href="#html-templete" class="headerlink" title="html(templete)"></a>html(templete)</h3><h3 id="js"><a href="#js" class="headerlink" title="js"></a>js</h3><ul><li>1.Prop 定义尽量详细，必须指定参数类型，必要时设置默认值。</li></ul><pre class=" language-bash"><code class="language-bash">props: <span class="token punctuation">{</span>  status: <span class="token punctuation">{</span>    type: String,    required: true,    validator: <span class="token keyword">function</span> <span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span> <span class="token punctuation">[</span>        <span class="token string">'syncing'</span>,        <span class="token string">'synced'</span>,        <span class="token string">'version-conflict'</span>,        <span class="token string">'error'</span>      <span class="token punctuation">]</span>.indexOf<span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">!=</span><span class="token operator">=</span> -1    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><ul><li><p>2.console.log、debugger使用完及时删除。</p></li><li><p>3.私有方法使用下划线开头</p></li></ul><pre class=" language-bash"><code class="language-bash">_getPromoteAmount: function<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></code></pre><ul><li><p>4.采用 ES6 关键字const、let定义变量，优先级顺序 const&gt;let，避免使用var。</p></li><li><p>5.循环语句添加key</p></li></ul><pre class=" language-base"><code class="language-base"><switch  v-for="item in items"  :key="item.id"</switch></code></pre><ul><li><p>6.不同功能 data 变量用注释分割。</p></li><li><p>7.函数参数，如有布尔值参数需对象方式传参。</p></li></ul><pre class=" language-bash"><code class="language-bash">getList<span class="token punctuation">(</span><span class="token punctuation">{</span>isByTreeSelect:true<span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><ul><li><p>8.函数尽量遵循单一原则。</p></li><li><p>9.始终使用 <code>===</code> 和 <code>!==</code> 而不是 <code>==</code> 和 <code>!=</code>。</p></li><li><p>10.js语句以分号<code>;</code>结尾，禁止省略。</p></li><li><p>11.用JavaScript高级函数代替for-in、 for-of。 Why? 这强调了我们不可变的规则。 处理返回值的纯函数比副作用更容易。用数组的这些迭代方法： map() / every() / filter() / find() / findIndex() / reduce() / some() / … , 用对象的这些方法 Object.keys() / Object.values() / Object.entries() 去产生一个数组， 这样你就能去遍历对象了。</p></li><li><p>12.不要保存引用this， 用箭头函数或函数绑定<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind" target="_blank" rel="noopener">Function#bind</a></p></li><li><p>13.不要用前置或后置下划线。</p></li></ul><h3 id="css"><a href="#css" class="headerlink" title="css"></a>css</h3><ul><li>1.尽量减少组件内部scoped样式<ul><li>尽量减少单文件组件内部样式，提高公共样式的复用。常量类样式如颜色、统一边距、多处复用的样式，封装为less变量使用，统一存放到<code>variable.less</code>样式文件内引用。</li><li>尽量不要改变元素默认行为，保持默认的文本流。</li><li>避免嵌套层级过多（嵌套深度限制在2-3级）。</li></ul></li></ul><pre class=" language-bash"><code class="language-bash">@labelColor:<span class="token comment" spellcheck="true">#C0C4D6;</span>@textColor:<span class="token comment" spellcheck="true">#333333;</span>.scrollbar <span class="token punctuation">{</span>  <span class="token operator">&amp;</span>::-webkit-scrollbar <span class="token punctuation">{</span>    /*滚动条整体样式*/    width: 4px<span class="token punctuation">;</span>    height: 14px<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token operator">&amp;</span>::-webkit-scrollbar-thumb <span class="token punctuation">{</span>    /*滚动条里面小方块*/    border-radius: 10px<span class="token punctuation">;</span>    box-shadow: inset 0 0 0 rgba<span class="token punctuation">(</span>255, 255, 255, 0<span class="token punctuation">)</span><span class="token punctuation">;</span>    background: rgba<span class="token punctuation">(</span>11, 141, 233, 1<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token operator">&amp;</span>::-webkit-scrollbar-track <span class="token punctuation">{</span>    /*滚动条里面轨道*/    border-radius: 10px<span class="token punctuation">;</span>    background: rgba<span class="token punctuation">(</span>11, 141, 233, 0.3<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="5-vscode统一拓展插件使用"><a href="#5-vscode统一拓展插件使用" class="headerlink" title="5.vscode统一拓展插件使用"></a>5.vscode统一拓展插件使用</h2><ul><li><p><a href="https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode" target="_blank" rel="noopener">prettier</a></p></li><li><p><a href="https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer" target="_blank" rel="noopener">Live Server</a></p></li><li><p><a href="https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint" target="_blank" rel="noopener">ESLint</a></p></li><li><p><a href="https://marketplace.visualstudio.com/items?itemName=DavidAnson.vscode-markdownlint" target="_blank" rel="noopener">markdownlint</a></p></li><li><p><a href="https://marketplace.visualstudio.com/items?itemName=octref.vetur" target="_blank" rel="noopener">vetur</a></p></li></ul><h2 id="6-其他"><a href="#6-其他" class="headerlink" title="6.其他"></a>6.其他</h2><ol><li><p>提高代码复用，两遍及以上的代码重复需合并（函数复用、样式复用、templete模板不能重复）。</p></li><li><p>优先框架组件使用，其次优质组件,其次自定义组件样式。</p></li><li><p>公共组件，需抽象化命名属性及方法名。</p></li><li><p>导入组件优先使用 npm 优质高 star 组件，优先使用 es6 模块导入方式<code>import</code>，选择组件需两人以上共同决定。</p></li><li><p>尽量避免父子组件强耦合绑定属性。</p></li><li><p>保证注释同步更新，多余注释及时删除（多余html、css、js注释）。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>reduce方法应用技巧</title>
      <link href="/2019/10/09/2019-10-09reduce-fang-fa-ying-yong-ji-qiao/"/>
      <url>/2019/10/09/2019-10-09reduce-fang-fa-ying-yong-ji-qiao/</url>
      
        <content type="html"><![CDATA[<h2 id="定义和用法"><a href="#定义和用法" class="headerlink" title="定义和用法"></a>定义和用法</h2><p>reduce() 方法接收一个函数作为累加器，数组中的每个值（从左到右）开始缩减，最终计算为一个值。<br>注意: reduce() 对于空数组是不会执行回调函数的。</p><h2 id="浏览器支持"><a href="#浏览器支持" class="headerlink" title="浏览器支持"></a>浏览器支持</h2><table><thead><tr><th style="text-align:center">方法</th><th style="text-align:center">Chrome</th><th style="text-align:center">Edge</th><th style="text-align:center">Firefox</th><th style="text-align:center">Safari</th><th style="text-align:center">Opera</th></tr></thead><tbody><tr><td style="text-align:center">reduce()</td><td style="text-align:center">Yes</td><td style="text-align:center">9.0</td><td style="text-align:center">3.0</td><td style="text-align:center">4</td><td style="text-align:center">10.5</td></tr></tbody></table><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><pre><code>array.reduce(function(total, currentValue, currentIndex, arr), initialValue)</code></pre><h2 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h2><p>基本的数值运算，例如求和：</p><pre><code>var numbers = [65, 44, 12, 4];numbers.reduce(function(total, currentValue) {    return total + currentValue;});</code></pre><p><a href="https://codepen.io/xmwarrior/pen/xxbLqwg" target="_blank" rel="noopener">运行一下</a></p><h2 id="进阶应用"><a href="#进阶应用" class="headerlink" title="进阶应用"></a>进阶应用</h2><h4 id="数组转换为对象"><a href="#数组转换为对象" class="headerlink" title="数组转换为对象"></a>数组转换为对象</h4><pre><code>var arr = [{    n: &quot;小明&quot;,    a: 18,    s: &quot;男&quot;}, {    n: &quot;小红&quot;,    a: 17,    s: &quot;女&quot;}];arr.reduce(function(total, currentValue, currentIndex) {    total[currentValue.n] = {        age: currentValue.a,        sex: currentValue.s    };    return total;}, {})</code></pre><p><a href="https://codepen.io/xmwarrior/pen/povregz" target="_blank" rel="noopener">运行一下</a></p><h4 id="链式调用"><a href="#链式调用" class="headerlink" title="链式调用"></a>链式调用</h4><pre><code>let pipe = (function() {    return function(value, context) {        context = context || window;        let methods = [];        let oproxy = new Proxy({}, {            get(target, methodName) {                if(methodName === &#39;get&#39;) {                    return methods.reduce((val, fn) =&gt; fn(val, context), value);                } else {                    methods.push(context[methodName]);                    return oproxy;                }            }        });        return oproxy;    }})();let obj = {    double: val =&gt; val * 2,    pow: val =&gt; val * val}pipe(4, obj).double.pow.get //64</code></pre><p><a href="https://codepen.io/xmwarrior/pen/ZEYJeWb" target="_blank" rel="noopener">运行一下</a></p>]]></content>
      
      
      <categories>
          
          <category> 日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于elementUI表头筛选组件封装</title>
      <link href="/2019/09/30/2019-9-30-ji-yu-elementui-biao-tou-shai-xuan-zu-jian-feng-zhuang/"/>
      <url>/2019/09/30/2019-9-30-ji-yu-elementui-biao-tou-shai-xuan-zu-jian-feng-zhuang/</url>
      
        <content type="html"><![CDATA[<h2 id="引用方式"><a href="#引用方式" class="headerlink" title="引用方式"></a>引用方式</h2><p>推荐<code>main.js</code>里全局引用：</p><pre><code>import ElTableColumnPro from &#39;./components/ElTableColumnPro.vue&#39;;ElTableColumnPro.install = function(Vue) { Vue.component(ElTableColumnPro.name, ElTableColumnPro);};Vue.use(ElTableColumnPro);</code></pre><p>然后引用页面直接在<el-table>标签下添加，具体各种类型的筛选自行根据类型添加相应格式，以下为input类型</el-table></p><pre><code>&lt;el-table-column-pro  :width=&quot;160&quot;  prop=&quot;AssetCode&quot;  label=&quot;设备编号 &quot;  align=&quot;center&quot;  header-align=&quot;center&quot;  placeholder=&quot;请输入设备编号&quot;  :callback=&quot;getTableDatas&quot;  renderType=&quot;input&quot;  :param.sync=&quot;AssetCode&quot;&gt;  &lt;template #content=&quot;scope&quot;&gt;    &lt;div class=&quot;text-center&quot;&gt;      &lt;router-link        :to=&quot;{ name: &#39;资产管理详情&#39;, query: { id: scope.row.Id }}&quot;      &gt;{{scope.row.AssetCode}}&lt;/router-link&gt;    &lt;/div&gt;  &lt;/template&gt;&lt;/el-table-column-pro&gt;</code></pre><h2 id="ElTableColumnPro-vue"><a href="#ElTableColumnPro-vue" class="headerlink" title="ElTableColumnPro.vue"></a>ElTableColumnPro.vue</h2><pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>el-table-column    v-if<span class="token operator">=</span><span class="token string">"visible"</span>    :formatter<span class="token operator">=</span><span class="token string">"formatter"</span>    :align<span class="token operator">=</span><span class="token string">"align"</span>    :prop<span class="token operator">=</span><span class="token string">"prop"</span>    :header-align<span class="token operator">=</span><span class="token string">"headerAlign"</span>    :label<span class="token operator">=</span><span class="token string">"label"</span>    :width<span class="token operator">=</span><span class="token string">"width"</span>  <span class="token operator">></span>    <span class="token operator">&lt;</span>template v-slot:header<span class="token operator">=</span><span class="token string">"slotProps"</span><span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">!</span>-- input --<span class="token operator">></span>      <span class="token operator">&lt;</span>div v-if<span class="token operator">=</span><span class="token string">"renderType==='input'"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>span<span class="token operator">></span><span class="token punctuation">{</span><span class="token punctuation">{</span>label<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span>/span<span class="token operator">></span>        <span class="token operator">&lt;</span>el-popover v-model<span class="token operator">=</span><span class="token string">"popover"</span> placement<span class="token operator">=</span><span class="token string">"bottom"</span> width<span class="token operator">=</span><span class="token string">"220"</span> trigger<span class="token operator">=</span><span class="token string">"click"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>div class<span class="token operator">=</span><span class="token string">"d-flex"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>el-input size<span class="token operator">=</span><span class="token string">"mini"</span> :placeholder<span class="token operator">=</span><span class="token string">"placeholder"</span> v-model<span class="token operator">=</span><span class="token string">"value"</span> :clearable<span class="token operator">=</span><span class="token string">"isClear"</span><span class="token operator">></span><span class="token operator">&lt;</span>/el-input<span class="token operator">></span>            <span class="token operator">&lt;</span>div class<span class="token operator">=</span><span class="token string">"search-popver"</span><span class="token operator">></span>              <span class="token operator">&lt;</span>el-button type<span class="token operator">=</span><span class="token string">"primary"</span> size<span class="token operator">=</span><span class="token string">"mini"</span> @click<span class="token operator">=</span><span class="token string">"emitChange"</span> icon<span class="token operator">=</span><span class="token string">"el-icon-search"</span><span class="token operator">></span><span class="token operator">&lt;</span>/el-button<span class="token operator">></span>            <span class="token operator">&lt;</span>/div<span class="token operator">></span>          <span class="token operator">&lt;</span>/div<span class="token operator">></span>          <span class="token operator">&lt;</span>i slot<span class="token operator">=</span><span class="token string">"reference"</span> class<span class="token operator">=</span><span class="token string">"cursor-point"</span> :class<span class="token operator">=</span><span class="token string">"param?'filtered-color '+icon:icon"</span><span class="token operator">></span><span class="token operator">&lt;</span>/i<span class="token operator">></span>        <span class="token operator">&lt;</span>/el-popover<span class="token operator">></span>      <span class="token operator">&lt;</span>/div<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">!</span>-- <span class="token keyword">select</span> --<span class="token operator">></span>      <span class="token operator">&lt;</span>div v-if<span class="token operator">=</span><span class="token string">"renderType==='select'"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>span<span class="token operator">></span><span class="token punctuation">{</span><span class="token punctuation">{</span>label<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span>/span<span class="token operator">></span>        <span class="token operator">&lt;</span>el-popover v-model<span class="token operator">=</span><span class="token string">"popover"</span> placement<span class="token operator">=</span><span class="token string">"bottom"</span> width<span class="token operator">=</span><span class="token string">"200"</span> trigger<span class="token operator">=</span><span class="token string">"click"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>div class<span class="token operator">=</span><span class="token string">"d-flex"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>el-select              size<span class="token operator">=</span><span class="token string">"mini"</span>              v-model<span class="token operator">=</span><span class="token string">"value"</span>              placeholder<span class="token operator">=</span><span class="token string">"请选择"</span>              filterable              :clearable<span class="token operator">=</span><span class="token string">"isClear"</span>            <span class="token operator">></span>              <span class="token operator">&lt;</span>el-option                v-for<span class="token operator">=</span><span class="token string">"(item,index) in selectList"</span>                :label<span class="token operator">=</span><span class="token string">"item.name"</span>                :value<span class="token operator">=</span><span class="token string">"item.value"</span>                :key<span class="token operator">=</span><span class="token string">"index"</span>              <span class="token operator">></span><span class="token operator">&lt;</span>/el-option<span class="token operator">></span>            <span class="token operator">&lt;</span>/el-select<span class="token operator">></span>            <span class="token operator">&lt;</span>div class<span class="token operator">=</span><span class="token string">"search-popver"</span><span class="token operator">></span>              <span class="token operator">&lt;</span>el-button type<span class="token operator">=</span><span class="token string">"primary"</span> size<span class="token operator">=</span><span class="token string">"mini"</span> class<span class="token operator">=</span><span class="token string">"el-icon-search"</span> @click<span class="token operator">=</span><span class="token string">"emitChange"</span><span class="token operator">></span><span class="token operator">&lt;</span>/el-button<span class="token operator">></span>            <span class="token operator">&lt;</span>/div<span class="token operator">></span>          <span class="token operator">&lt;</span>/div<span class="token operator">></span>          <span class="token operator">&lt;</span>i slot<span class="token operator">=</span><span class="token string">"reference"</span> class<span class="token operator">=</span><span class="token string">"cursor-point"</span> :class<span class="token operator">=</span><span class="token string">"param?'filtered-color '+icon:icon"</span><span class="token operator">></span><span class="token operator">&lt;</span>/i<span class="token operator">></span>        <span class="token operator">&lt;</span>/el-popover<span class="token operator">></span>      <span class="token operator">&lt;</span>/div<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">!</span>-- Cascader --<span class="token operator">></span>      <span class="token operator">&lt;</span>div v-if<span class="token operator">=</span><span class="token string">"renderType==='cascader'"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>span<span class="token operator">></span><span class="token punctuation">{</span><span class="token punctuation">{</span>label<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span>/span<span class="token operator">></span>        <span class="token operator">&lt;</span>el-popover v-model<span class="token operator">=</span><span class="token string">"popover"</span> placement<span class="token operator">=</span><span class="token string">"bottom"</span> width<span class="token operator">=</span><span class="token string">"200"</span> trigger<span class="token operator">=</span><span class="token string">"click"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>div class<span class="token operator">=</span><span class="token string">"d-flex"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>el-cascader              v-model<span class="token operator">=</span><span class="token string">"value"</span>              size<span class="token operator">=</span><span class="token string">"mini"</span>              placeholder<span class="token operator">=</span><span class="token string">"请选择"</span>              clearable              :options<span class="token operator">=</span><span class="token string">"selectList"</span>              :props<span class="token operator">=</span><span class="token string">"defaultProps"</span>              :show-all-levels<span class="token operator">=</span><span class="token string">"false"</span>            <span class="token operator">></span><span class="token operator">&lt;</span>/el-cascader<span class="token operator">></span>            <span class="token operator">&lt;</span>div class<span class="token operator">=</span><span class="token string">"search-popver"</span><span class="token operator">></span>              <span class="token operator">&lt;</span>el-button type<span class="token operator">=</span><span class="token string">"primary"</span> size<span class="token operator">=</span><span class="token string">"mini"</span> class<span class="token operator">=</span><span class="token string">"el-icon-search"</span> @click<span class="token operator">=</span><span class="token string">"emitChange"</span><span class="token operator">></span><span class="token operator">&lt;</span>/el-button<span class="token operator">></span>            <span class="token operator">&lt;</span>/div<span class="token operator">></span>          <span class="token operator">&lt;</span>/div<span class="token operator">></span>          <span class="token operator">&lt;</span>i slot<span class="token operator">=</span><span class="token string">"reference"</span> class<span class="token operator">=</span><span class="token string">"cursor-point"</span> :class<span class="token operator">=</span><span class="token string">"param?'filtered-color '+icon:icon"</span><span class="token operator">></span><span class="token operator">&lt;</span>/i<span class="token operator">></span>        <span class="token operator">&lt;</span>/el-popover<span class="token operator">></span>      <span class="token operator">&lt;</span>/div<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">!</span>-- datetimerange --<span class="token operator">></span>      <span class="token operator">&lt;</span>div v-if<span class="token operator">=</span><span class="token string">"renderType==='datetimerange'"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>span<span class="token operator">></span><span class="token punctuation">{</span><span class="token punctuation">{</span>label<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span>/span<span class="token operator">></span>        <span class="token operator">&lt;</span>el-popover v-model<span class="token operator">=</span><span class="token string">"popover"</span> placement<span class="token operator">=</span><span class="token string">"bottom"</span> width<span class="token operator">=</span><span class="token string">"430"</span> trigger<span class="token operator">=</span><span class="token string">"click"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>div class<span class="token operator">=</span><span class="token string">"d-flex"</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">!</span>-- <span class="token operator">&lt;</span>el-input size<span class="token operator">=</span><span class="token string">"mini"</span> :placeholder<span class="token operator">=</span><span class="token string">"placeholder"</span> v-model<span class="token operator">=</span><span class="token string">"value"</span> :clearable<span class="token operator">=</span><span class="token string">"isClear"</span><span class="token operator">></span><span class="token operator">&lt;</span>/el-input<span class="token operator">></span> --<span class="token operator">></span>            <span class="token operator">&lt;</span>el-date-picker              size<span class="token operator">=</span><span class="token string">"mini"</span>              :placeholder<span class="token operator">=</span><span class="token string">"placeholder"</span>              v-model<span class="token operator">=</span><span class="token string">"value"</span>              type<span class="token operator">=</span><span class="token string">"datetimerange"</span>              range-separator<span class="token operator">=</span><span class="token string">"至"</span>              start-placeholder<span class="token operator">=</span><span class="token string">"开始日期"</span>              end-placeholder<span class="token operator">=</span><span class="token string">"结束日期"</span>              :clearable<span class="token operator">=</span><span class="token string">"isClear"</span>            <span class="token operator">></span><span class="token operator">&lt;</span>/el-date-picker<span class="token operator">></span>            <span class="token operator">&lt;</span>div class<span class="token operator">=</span><span class="token string">"search-popver"</span><span class="token operator">></span>              <span class="token operator">&lt;</span>el-button type<span class="token operator">=</span><span class="token string">"primary"</span> size<span class="token operator">=</span><span class="token string">"mini"</span> @click<span class="token operator">=</span><span class="token string">"emitChange"</span> icon<span class="token operator">=</span><span class="token string">"el-icon-search"</span><span class="token operator">></span><span class="token operator">&lt;</span>/el-button<span class="token operator">></span>            <span class="token operator">&lt;</span>/div<span class="token operator">></span>          <span class="token operator">&lt;</span>/div<span class="token operator">></span>          <span class="token operator">&lt;</span>i slot<span class="token operator">=</span><span class="token string">"reference"</span> class<span class="token operator">=</span><span class="token string">"cursor-point"</span> :class<span class="token operator">=</span><span class="token string">"param?'filtered-color '+icon:icon"</span><span class="token operator">></span><span class="token operator">&lt;</span>/i<span class="token operator">></span>        <span class="token operator">&lt;</span>/el-popover<span class="token operator">></span>      <span class="token operator">&lt;</span>/div<span class="token operator">></span>    <span class="token operator">&lt;</span>/template<span class="token operator">></span>    <span class="token operator">&lt;</span>template v-slot<span class="token operator">=</span><span class="token string">"scope"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>slot name<span class="token operator">=</span><span class="token string">"content"</span> :row<span class="token operator">=</span><span class="token string">"scope.row"</span><span class="token operator">></span><span class="token punctuation">{</span><span class="token punctuation">{</span>scope.row<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span>/slot<span class="token operator">></span>    <span class="token operator">&lt;</span>/template<span class="token operator">></span>  <span class="token operator">&lt;</span>/el-table-column<span class="token operator">></span><span class="token operator">&lt;</span>/template<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token function">export</span> default <span class="token punctuation">{</span>  name: <span class="token string">"el-table-column-pro"</span>,  props: <span class="token punctuation">{</span>    prop: <span class="token punctuation">{</span>      type: String    <span class="token punctuation">}</span>,    label: <span class="token punctuation">{</span>      type: String    <span class="token punctuation">}</span>,    width: <span class="token punctuation">{</span>      type: Number    <span class="token punctuation">}</span>,    renderType: <span class="token punctuation">{</span>      type: String,      validator: value <span class="token operator">=</span><span class="token operator">></span>        <span class="token punctuation">[</span><span class="token string">"datetimerange"</span>, <span class="token string">"input"</span>, <span class="token string">"select"</span>, <span class="token string">"cascader"</span><span class="token punctuation">]</span>.includes<span class="token punctuation">(</span>value<span class="token punctuation">)</span>    <span class="token punctuation">}</span>,    placeholder: <span class="token punctuation">{</span>      type: String    <span class="token punctuation">}</span>,    rederWidth: <span class="token punctuation">{</span>      type: String,      default: <span class="token string">"230px"</span>    <span class="token punctuation">}</span>,    param: <span class="token punctuation">{</span>      type: <span class="token punctuation">[</span>String, Number, Array<span class="token punctuation">]</span>,      default: <span class="token string">""</span>    <span class="token punctuation">}</span>,    startDate: <span class="token punctuation">{</span>      type: String    <span class="token punctuation">}</span>,    endDate: <span class="token punctuation">{</span>      type: String    <span class="token punctuation">}</span>,    selectList: <span class="token punctuation">{</span>      type: Array    <span class="token punctuation">}</span>,    defaultProps: <span class="token punctuation">{</span>      type: Object    <span class="token punctuation">}</span>,    isClear: <span class="token punctuation">{</span>      type: Boolean,      default: <span class="token boolean">true</span>    <span class="token punctuation">}</span>,    visible: <span class="token punctuation">{</span>      type: Boolean,      default: <span class="token boolean">true</span>    <span class="token punctuation">}</span>,    filterIcon: <span class="token punctuation">{</span>      type: String,      default: <span class="token string">"el-icon-search"</span>    <span class="token punctuation">}</span>,    callback: <span class="token punctuation">{</span>      type: Function    <span class="token punctuation">}</span>,    formatter: <span class="token punctuation">{</span>      type: Function,      default: <span class="token punctuation">(</span>row, cellValue<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> cellValue    <span class="token punctuation">}</span>,    align: <span class="token punctuation">{</span>      type: String    <span class="token punctuation">}</span>,    headerAlign: <span class="token punctuation">{</span>      type: String    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>,  data<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>      icon: this.filterIcon,      value: this.param,      popover: <span class="token boolean">false</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>,  methods: <span class="token punctuation">{</span>    emitChange<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      this.<span class="token variable">$emit</span><span class="token punctuation">(</span><span class="token string">"update:param"</span>, this.value<span class="token punctuation">)</span><span class="token punctuation">;</span>      this.callback<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      this.popover <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>,    fomatMethod<span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span> this.formatter<span class="token punctuation">(</span><span class="token string">""</span>, <span class="token string">""</span>, value<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token operator">&lt;</span>/script<span class="token operator">></span><span class="token operator">&lt;</span>style lang<span class="token operator">=</span><span class="token string">"less"</span> scoped<span class="token operator">></span>// table表头筛选颜色.filtered-color <span class="token punctuation">{</span>  color: var<span class="token punctuation">(</span>--thFilterColor<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token operator">&lt;</span>/style<span class="token operator">></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> elementUI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>express搭建增删改查本地JSON后台(示例)</title>
      <link href="/2019/05/27/2019-5-23express-da-jian-zeng-shan-gai-cha-ben-di-json-hou-tai/"/>
      <url>/2019/05/27/2019-5-23express-da-jian-zeng-shan-gai-cha-ben-di-json-hou-tai/</url>
      
        <content type="html"><![CDATA[<h2 id="文件结构"><a href="#文件结构" class="headerlink" title="文件结构"></a>文件结构</h2><p><img src="/images/express.png" alt="avatar"></p><h2 id="app-js"><a href="#app-js" class="headerlink" title="app.js"></a>app.js</h2><pre class=" language-bash"><code class="language-bash">const express <span class="token operator">=</span> require<span class="token punctuation">(</span><span class="token string">'express'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>const os <span class="token operator">=</span> require<span class="token punctuation">(</span><span class="token string">'os'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>const fs <span class="token operator">=</span> require<span class="token punctuation">(</span><span class="token string">'fs'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>const bodyParser <span class="token operator">=</span> require<span class="token punctuation">(</span><span class="token string">'body-parser'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> //调用模板const app <span class="token operator">=</span> express<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>const PATH <span class="token operator">=</span> <span class="token string">'/mock/'</span><span class="token punctuation">;</span> //json路径const VIEWPATH <span class="token operator">=</span> <span class="token string">'/view/'</span><span class="token punctuation">;</span>const PATHNAME <span class="token operator">=</span> <span class="token string">'data'</span><span class="token punctuation">;</span> //json文件名// 允许访问静态文件app.use<span class="token punctuation">(</span><span class="token string">'/assets'</span>, express.static<span class="token punctuation">(</span><span class="token string">'assets'</span><span class="token punctuation">))</span><span class="token punctuation">;</span>app.use<span class="token punctuation">(</span>express.static<span class="token punctuation">(</span><span class="token string">'view'</span><span class="token punctuation">))</span><span class="token punctuation">;</span>app.use<span class="token punctuation">(</span><span class="token string">'/mock'</span>, express.static<span class="token punctuation">(</span><span class="token string">'mock'</span><span class="token punctuation">))</span><span class="token punctuation">;</span>//创建application/json解析app.use<span class="token punctuation">(</span>bodyParser.urlencoded<span class="token punctuation">(</span><span class="token punctuation">{</span>    extended: <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">))</span><span class="token punctuation">;</span>// 查app.get<span class="token punctuation">(</span><span class="token string">'/getinfo'</span>, <span class="token keyword">function</span> <span class="token punctuation">(</span>req, res<span class="token punctuation">)</span> <span class="token punctuation">{</span>    const query <span class="token operator">=</span> req.query<span class="token punctuation">;</span> //get请求 获取参数    console.log<span class="token punctuation">(</span>__dirname + PATH + PATHNAME + <span class="token string">'.json'</span><span class="token punctuation">)</span>    fs.readFile<span class="token punctuation">(</span>__dirname + PATH + PATHNAME + <span class="token string">'.json'</span>, <span class="token keyword">function</span> <span class="token punctuation">(</span>err, data<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>            console.error<span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">let</span> datas <span class="token operator">=</span> data.toString<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        datas <span class="token operator">=</span> JSON.parse<span class="token punctuation">(</span>datas<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>query <span class="token operator">&amp;&amp;</span> query.id<span class="token punctuation">)</span> <span class="token punctuation">{</span>            datas <span class="token operator">=</span> datas.data.filter<span class="token punctuation">(</span>item <span class="token operator">=</span><span class="token operator">></span> String<span class="token punctuation">(</span>item.id<span class="token punctuation">)</span> <span class="token operator">==</span><span class="token operator">=</span> String<span class="token punctuation">(</span>query.id<span class="token punctuation">))</span><span class="token punctuation">[</span>0<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        res.send<span class="token punctuation">(</span>datas<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>// 增app.post<span class="token punctuation">(</span><span class="token string">'/add'</span>, <span class="token keyword">function</span> <span class="token punctuation">(</span>req, res<span class="token punctuation">)</span> <span class="token punctuation">{</span>    const query <span class="token operator">=</span> req.body<span class="token punctuation">;</span> //post请求 获取参数    fs.readFile<span class="token punctuation">(</span>__dirname + PATH + PATHNAME + <span class="token string">'.json'</span>, <span class="token keyword">function</span> <span class="token punctuation">(</span>err, data<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>            console.error<span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>query<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>query.hasOwnProperty<span class="token punctuation">(</span><span class="token string">"details"</span><span class="token punctuation">))</span> <span class="token punctuation">{</span>                res.send<span class="token punctuation">(</span><span class="token punctuation">{</span>                    resCode: 1,                    responseText: <span class="token string">'details为必填项'</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">let</span> datas <span class="token operator">=</span> data.toString<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            datas <span class="token operator">=</span> JSON.parse<span class="token punctuation">(</span>datas<span class="token punctuation">)</span><span class="token punctuation">;</span>            // 数据排序            datas.data.sort<span class="token punctuation">((</span>a, b<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> a.id - b.id<span class="token punctuation">)</span><span class="token punctuation">;</span>            // 添加 新对象            query.id <span class="token operator">=</span> datas.data.length<span class="token punctuation">;</span>            datas.data.push<span class="token punctuation">(</span>query<span class="token punctuation">)</span><span class="token punctuation">;</span>            const datasStr <span class="token operator">=</span> JSON.stringify<span class="token punctuation">(</span>datas<span class="token punctuation">)</span><span class="token punctuation">;</span>            fs.writeFile<span class="token punctuation">(</span>__dirname + PATH + PATHNAME + <span class="token string">'.json'</span>, datasStr, <span class="token keyword">function</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    console.error<span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                res.send<span class="token punctuation">(</span><span class="token punctuation">{</span>                    resCode: 1,                    responseText: <span class="token string">'添加成功！'</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>// 删app.post<span class="token punctuation">(</span><span class="token string">'/del'</span>, <span class="token keyword">function</span> <span class="token punctuation">(</span>req, res<span class="token punctuation">)</span> <span class="token punctuation">{</span>    const query <span class="token operator">=</span> req.body<span class="token punctuation">;</span> //post请求 获取参数    fs.readFile<span class="token punctuation">(</span>__dirname + PATH + PATHNAME + <span class="token string">'.json'</span>, <span class="token keyword">function</span> <span class="token punctuation">(</span>err, data<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>            console.error<span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>query <span class="token operator">&amp;&amp;</span> query.id<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">let</span> datas <span class="token operator">=</span> data.toString<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            datas <span class="token operator">=</span> JSON.parse<span class="token punctuation">(</span>datas<span class="token punctuation">)</span><span class="token punctuation">;</span>            // 查找id            const delIndex <span class="token operator">=</span> datas.data.findIndex<span class="token punctuation">(</span>item <span class="token operator">=</span><span class="token operator">></span> String<span class="token punctuation">(</span>item.id<span class="token punctuation">)</span> <span class="token operator">==</span><span class="token operator">=</span> String<span class="token punctuation">(</span>query.id<span class="token punctuation">))</span><span class="token punctuation">;</span>            datas.data.splice<span class="token punctuation">(</span>delIndex, 1<span class="token punctuation">)</span><span class="token punctuation">;</span>            // 删除            const datasStr <span class="token operator">=</span> JSON.stringify<span class="token punctuation">(</span>datas<span class="token punctuation">)</span><span class="token punctuation">;</span>            fs.writeFile<span class="token punctuation">(</span>__dirname + PATH + PATHNAME + <span class="token string">'.json'</span>, datasStr, <span class="token keyword">function</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    console.error<span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                res.send<span class="token punctuation">(</span><span class="token punctuation">{</span>                    resCode: 1,                    responseText: <span class="token string">'删除成功！'</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>// 改app.post<span class="token punctuation">(</span><span class="token string">'/updateDetails'</span>, <span class="token keyword">function</span> <span class="token punctuation">(</span>req, res<span class="token punctuation">)</span> <span class="token punctuation">{</span>    const query <span class="token operator">=</span> req.body<span class="token punctuation">;</span> //post请求 获取参数    fs.readFile<span class="token punctuation">(</span>__dirname + PATH + PATHNAME + <span class="token string">'.json'</span>, <span class="token keyword">function</span> <span class="token punctuation">(</span>err, data<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>            console.error<span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>query <span class="token operator">&amp;&amp;</span> query.id<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">let</span> datas <span class="token operator">=</span> data.toString<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            datas <span class="token operator">=</span> JSON.parse<span class="token punctuation">(</span>datas<span class="token punctuation">)</span><span class="token punctuation">;</span>            // 查找id            <span class="token keyword">if</span> <span class="token punctuation">(</span>isJSON<span class="token punctuation">(</span>decodeURIComponent<span class="token punctuation">(</span>query.jsonModel<span class="token punctuation">))</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span>const item of datas.data<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>String<span class="token punctuation">(</span>item.id<span class="token punctuation">)</span> <span class="token operator">==</span><span class="token operator">=</span> String<span class="token punctuation">(</span>query.id<span class="token punctuation">))</span> <span class="token punctuation">{</span>                        item.details <span class="token operator">=</span> JSON.parse<span class="token punctuation">(</span>decodeURIComponent<span class="token punctuation">(</span>query.jsonModel<span class="token punctuation">))</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                resErrorCode<span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            // 修改            const datasStr <span class="token operator">=</span> JSON.stringify<span class="token punctuation">(</span>datas<span class="token punctuation">)</span><span class="token punctuation">;</span>            fs.writeFile<span class="token punctuation">(</span>__dirname + PATH + PATHNAME + <span class="token string">'.json'</span>, datasStr, <span class="token keyword">function</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    console.error<span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                res.send<span class="token punctuation">(</span><span class="token punctuation">{</span>                    resCode: 1,                    responseText: <span class="token string">'修改成功！'</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>// 测试链接app.get<span class="token punctuation">(</span><span class="token string">'/'</span>, <span class="token keyword">function</span> <span class="token punctuation">(</span>req, res<span class="token punctuation">)</span> <span class="token punctuation">{</span>    res.sendFile<span class="token punctuation">(</span>__dirname + VIEWPATH + <span class="token string">"index.html"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>//监听<span class="token keyword">let</span> server <span class="token operator">=</span> app.listen<span class="token punctuation">(</span>3000, <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    const myHost <span class="token operator">=</span> getIPAdress<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    const port <span class="token operator">=</span> server.address<span class="token punctuation">(</span><span class="token punctuation">)</span>.port    console.log<span class="token punctuation">(</span><span class="token string">"接口地址为 http://"</span> + myHost + <span class="token string">':'</span> + port<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>//获取本机ip<span class="token keyword">function</span> getIPAdress<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    const interfaces <span class="token operator">=</span> os.networkInterfaces<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>const devName <span class="token keyword">in</span> interfaces<span class="token punctuation">)</span> <span class="token punctuation">{</span>        const iface <span class="token operator">=</span> interfaces<span class="token punctuation">[</span>devName<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>let i <span class="token operator">=</span> 0<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> iface.length<span class="token punctuation">;</span> i++<span class="token punctuation">)</span> <span class="token punctuation">{</span>            const <span class="token function">alias</span> <span class="token operator">=</span> iface<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>alias.family <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">'IPv4'</span> <span class="token operator">&amp;&amp;</span> alias.address <span class="token operator">!=</span><span class="token operator">=</span> <span class="token string">'127.0.0.1'</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>alias.internal<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> alias.address<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span>// 获取对象键值对 数量<span class="token keyword">function</span> getObjLength<span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> Object.keys<span class="token punctuation">(</span>obj<span class="token punctuation">)</span>.length<span class="token punctuation">;</span><span class="token punctuation">}</span>/*返回错误信息*/<span class="token keyword">function</span> resErrorCode<span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token punctuation">{</span>    res.send<span class="token punctuation">(</span><span class="token punctuation">{</span>        errorCode: 1,        responseText: <span class="token string">'添加参数有误，请联系后台确认提交参数要求！'</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>// 判断是否是JSON字符串<span class="token keyword">function</span> isJSON<span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>typeof str <span class="token operator">==</span> <span class="token string">'string'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        try <span class="token punctuation">{</span>            var obj <span class="token operator">=</span> JSON.parse<span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>typeof obj <span class="token operator">==</span> <span class="token string">'object'</span> <span class="token operator">&amp;&amp;</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> catch <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            console.log<span class="token punctuation">(</span><span class="token string">'error：'</span> + str + <span class="token string">'!!!'</span> + e<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    console.log<span class="token punctuation">(</span><span class="token string">'It is not a string!'</span><span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre><p>此基础示例为express入门示例，仅可用于前端配合mock插件自己模拟对接后台使用。<br>真要拿node做后台，需配合自己用的数据库，学习熟练SQL语法对数据库进行增删改查操作。<br>学习没有捷径可言，真要做好一个node后台，还要下很多功夫，也需要多个项目坑坑洼洼的磨练，加油吧。</p>]]></content>
      
      
      <categories>
          
          <category> 日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> node </tag>
            
            <tag> express </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>优秀文章收录</title>
      <link href="/2019/05/15/you-xiu-wen-zhang-shou-lu/"/>
      <url>/2019/05/15/you-xiu-wen-zhang-shou-lu/</url>
      
        <content type="html"><![CDATA[<h2 id="安全"><a href="#安全" class="headerlink" title="安全"></a>安全</h2><ul><li><a href="https://segmentfault.com/a/1190000019176325" target="_blank" rel="noopener">竞争激烈的互联网时代，是否需要注重一下WEB安全？</a> -2019年05月15日</li></ul><h2 id="网络、浏览器基础"><a href="#网络、浏览器基础" class="headerlink" title="网络、浏览器基础"></a>网络、浏览器基础</h2><ul><li><a href="https://segmentfault.com/a/1190000019176325" target="_blank" rel="noopener">你不知道的浏览器页面渲染机制</a> -2019年04月02日</li><li><a href="https://segmentfault.com/a/1190000013331105" target="_blank" rel="noopener">面试的信心来源于过硬的基础</a> -2018年02月23日</li><li><a href="https://segmentfault.com/a/1190000018886852" target="_blank" rel="noopener">http 缓存小结</a> 2019-04-16</li><li><a href="https://segmentfault.com/a/1190000018811208" target="_blank" rel="noopener">你不知道的浏览器页面渲染机制</a> 2019-04-10</li></ul><h2 id="js"><a href="#js" class="headerlink" title="js"></a>js</h2><ul><li><a href="https://segmentfault.com/a/1190000019008207" target="_blank" rel="noopener">跨域，拒绝说概念，上demo</a> 2019-4-27</li><li><a href="https://segmentfault.com/a/1190000005926579" target="_blank" rel="noopener">debounce(防抖)和throttle(节流)</a> -2016年07月10日</li><li><a href="https://segmentfault.com/a/1190000013041329" target="_blank" rel="noopener">javascript 总结（常用工具类的封装）</a> -2018年01月30日</li><li><a href="https://segmentfault.com/a/1190000019002373" target="_blank" rel="noopener">【JS基础】一文看懂前端模块化规范</a> 2019-04-26</li><li><a href="https://segmentfault.com/a/1190000000754560" target="_blank" rel="noopener">HTML5 本地裁剪图片并上传至服务器（老梗）</a> 2014-11-03</li></ul><h2 id="css"><a href="#css" class="headerlink" title="css"></a>css</h2><ul><li><a href="https://segmentfault.com/a/1190000019171125" target="_blank" rel="noopener">CSS实现两个球相交的粘粘效果</a> -2019年05月14日</li><li><a href="https://segmentfault.com/a/1190000019092498" target="_blank" rel="noopener">CSS团队协作规范</a> -2019年05月07日</li><li><a href="https://segmentfault.com/a/1190000010989233" target="_blank" rel="noopener">【整理】几种解决inline-block间隙的方案</a> 2017-09-03</li><li><a href="https://segmentfault.com/a/1190000010989110" target="_blank" rel="noopener">【整理】CSS布局方案</a> 2017-09-03</li><li><a href="https://juejin.im/post/58e3a5a0a0bb9f0069fc16bb" target="_blank" rel="noopener">一劳永逸的搞定 flex 布局</a> 2017-04-19</li></ul><h2 id="html"><a href="#html" class="headerlink" title="html"></a>html</h2><ul><li><a href="https://segmentfault.com/a/1190000013391021" target="_blank" rel="noopener">水平且垂直居中方法（10种）</a> 2018-02-26</li></ul><h2 id="小程序"><a href="#小程序" class="headerlink" title="小程序"></a>小程序</h2><ul><li><a href="https://segmentfault.com/a/1190000019091851" target="_blank" rel="noopener">记录一次开发微信网页分享</a></li></ul><h2 id="vue"><a href="#vue" class="headerlink" title="vue"></a>vue</h2><ul><li><a href="https://segmentfault.com/u/panjiachen/articles" target="_blank" rel="noopener">手摸手系列</a> -2019-05-09</li><li><a href="https://segmentfault.com/a/1190000019107528" target="_blank" rel="noopener">使用vuex的问题记录–解决刷新页面state数据消失</a> -2019-05-08</li><li><a href="https://segmentfault.com/a/1190000018989241" target="_blank" rel="noopener">快速上手最新的 Vue CLI 3</a> -2019-04-25</li></ul><h2 id="react"><a href="#react" class="headerlink" title="react"></a>react</h2><ul><li><a href="https://segmentfault.com/a/1190000009882841" target="_blank" rel="noopener">React系列</a> 2017-06-22</li></ul><h2 id="环境搭建、Webpack"><a href="#环境搭建、Webpack" class="headerlink" title="环境搭建、Webpack"></a>环境搭建、Webpack</h2><ul><li><a href="https://segmentfault.com/a/1190000006178770" target="_blank" rel="noopener">入门 Webpack，看这篇就够了</a> 2016-08-05</li><li><a href="https://segmentfault.com/a/1190000018805925" target="_blank" rel="noopener">使用webpack构建多页应用</a> 2019-04-09</li><li><a href="https://blog.fundebug.com/2018/06/13/webpack-babel-tutorial/" target="_blank" rel="noopener">webpack运行Babel教程</a> 2018-06-03</li><li><a href="https://segmentfault.com/a/1190000019168638" target="_blank" rel="noopener">10秒钟构建你自己的”造轮子”工厂！ 2019年github/npm工程化协作开发栈最佳实践</a> 2019-05-13</li></ul><h2 id="精进思维"><a href="#精进思维" class="headerlink" title="精进思维"></a>精进思维</h2><ul><li><a href="https://segmentfault.com/a/1190000018868172" target="_blank" rel="noopener">必须知道的程序员思维</a> 2019-04-15</li><li><a href="https://blog.fundebug.com/2018/09/13/10-principle-for-programer/" target="_blank" rel="noopener">写给工程师的十条精进原则</a> 2018-09-03</li><li><a href="https://segmentfault.com/a/1190000019017352" target="_blank" rel="noopener">JavaScript设计模式精华摘抄（持续更新…）</a> 2019-04-28</li></ul><h2 id="流行插件、工具库"><a href="#流行插件、工具库" class="headerlink" title="流行插件、工具库"></a>流行插件、工具库</h2><ul><li><a href="https://segmentfault.com/a/1190000017325761" target="_blank" rel="noopener">值得看看，2019 年 11 个受欢迎的 JavaScript 动画库！</a> 2018-12-10</li><li><a href="https://segmentfault.com/a/1190000019146249" target="_blank" rel="noopener">10个有趣的javascript和css库（2019年最新）</a> 2019-05-11</li></ul><h2 id="浏览器拓展插件、编辑器"><a href="#浏览器拓展插件、编辑器" class="headerlink" title="浏览器拓展插件、编辑器"></a>浏览器拓展插件、编辑器</h2><ul><li><a href="https://segmentfault.com/a/1190000018889726" target="_blank" rel="noopener">写了一个chrome插件：拦截ajax请求并修改返回结果</a> 2019-04-16</li><li><a href="https://segmentfault.com/a/1190000018993259" target="_blank" rel="noopener">可以提高程序员效率的工具！</a> 2019-04-16</li><li><a href="https://segmentfault.com/a/1190000007688656" target="_blank" rel="noopener">VS Code 快捷键（中英文对照版）</a> 2016-12-04</li><li><a href="https://segmentfault.com/a/1190000019055976" target="_blank" rel="noopener">用vscode开发vue应用</a> 2019-05-02</li></ul><h2 id="后台、python"><a href="#后台、python" class="headerlink" title="后台、python"></a>后台、python</h2><ul><li><a href="https://segmentfault.com/a/1190000019142622" target="_blank" rel="noopener">系统的讲解 - SSO单点登录</a> 2019-5-10</li><li><a href="https://segmentfault.com/a/1190000017319797" target="_blank" rel="noopener">为什么要学习Python？这10个理由足够了！</a> 2018-12-10</li><li><a href="https://segmentfault.com/a/1190000013522687" target="_blank" rel="noopener">后端好书阅读与推荐（续四）</a> 2018-03-15</li></ul><h2 id="前人整理"><a href="#前人整理" class="headerlink" title="前人整理"></a>前人整理</h2><ul><li><a href="https://segmentfault.com/a/1190000018796317" target="_blank" rel="noopener">前端练级攻略(第二部分)</a> 2019-04-09</li><li><a href="https://segmentfault.com/a/1190000018992363" target="_blank" rel="noopener">一名【合格】前端工程师的自检清单</a> 2019-04-16</li><li><a href="https://segmentfault.com/a/1190000019022842" target="_blank" rel="noopener">前端开发中遇到的一些问题—-持续更新</a> 2019-04-29</li><li><a href="https://segmentfault.com/a/1190000011091907" target="_blank" rel="noopener">我遇到的前端面试题2017</a> 2017-09-09</li></ul><h2 id="周边"><a href="#周边" class="headerlink" title="周边"></a>周边</h2><ul><li><a href="https://mp.weixin.qq.com/s/GnxEa1QrPjO051Caq18Kag" target="_blank" rel="noopener">介绍两个丧心病狂的Github项目</a> 2018-08-21</li></ul>]]></content>
      
      
      <categories>
          
          <category> 日常优质文章收录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> css </tag>
            
            <tag> html </tag>
            
            <tag> 优秀文章收录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue组件传值</title>
      <link href="/2019/04/29/2019-4-27vue-zu-jian-chuan-zhi/"/>
      <url>/2019/04/29/2019-4-27vue-zu-jian-chuan-zhi/</url>
      
        <content type="html"><![CDATA[<h2 id="一、父子传值"><a href="#一、父子传值" class="headerlink" title="一、父子传值"></a>一、父子传值</h2><h3 id="1-props传递单个参数"><a href="#1-props传递单个参数" class="headerlink" title="1. props传递单个参数"></a>1. props传递单个参数</h3><h4 id="·-父组件"><a href="#·-父组件" class="headerlink" title="· 父组件"></a>· 父组件</h4><pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>div class<span class="token operator">=</span><span class="token string">"app-container"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>Pagination :page<span class="token operator">=</span><span class="token string">"currentPage"</span> @changePage<span class="token operator">=</span><span class="token string">"listenPageChange"</span>/<span class="token operator">></span>  <span class="token operator">&lt;</span>/div<span class="token operator">></span><span class="token operator">&lt;</span>/template<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token function">import</span> Pagination from <span class="token string">'./components/pagination'</span><span class="token punctuation">;</span><span class="token function">export</span> default <span class="token punctuation">{</span>  components:<span class="token punctuation">{</span>    Pagination  <span class="token punctuation">}</span>,  methods:<span class="token punctuation">{</span>    listenPageChange<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">{</span>      console.log<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>,  data<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>      currentPage:1  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token operator">&lt;</span>/script<span class="token operator">></span></code></pre><h4 id="·子组件"><a href="#·子组件" class="headerlink" title="·子组件"></a>·子组件</h4><pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>el-pagination    @size-change<span class="token operator">=</span><span class="token string">"handleSizeChange"</span>    @current-change<span class="token operator">=</span><span class="token string">"handleCurrentChange"</span>    :current-page<span class="token operator">=</span><span class="token string">"page"</span>    :page-sizes<span class="token operator">=</span><span class="token string">"[100, 200, 300, 400]"</span>    :page-size<span class="token operator">=</span><span class="token string">"100"</span>    layout<span class="token operator">=</span><span class="token string">"total, sizes, prev, pager, next, jumper"</span>    :total<span class="token operator">=</span><span class="token string">"400"</span>  <span class="token operator">></span><span class="token operator">&lt;</span>/el-pagination<span class="token operator">></span><span class="token operator">&lt;</span>/template<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token function">export</span> default <span class="token punctuation">{</span>  props: <span class="token punctuation">[</span><span class="token string">"page"</span><span class="token punctuation">]</span>,  methods: <span class="token punctuation">{</span>    handleSizeChange<span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token punctuation">{</span>      this.pageOption.pageSize <span class="token operator">=</span> val<span class="token punctuation">;</span>      this.listenOptionChange<span class="token punctuation">(</span>this.pageOption<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>,    handleCurrentChange<span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token punctuation">{</span>      this.pageOption.page <span class="token operator">=</span> val<span class="token punctuation">;</span>      this.listenOptionChange<span class="token punctuation">(</span>this.pageOption<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>,    listenOptionChange<span class="token punctuation">(</span>datas<span class="token punctuation">)</span> <span class="token punctuation">{</span>       this.<span class="token variable">$emit</span><span class="token punctuation">(</span><span class="token string">"changePage"</span>, datas<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token operator">&lt;</span>/script<span class="token operator">></span></code></pre><h3 id="2-props传递对象"><a href="#2-props传递对象" class="headerlink" title="2. props传递对象"></a>2. props传递对象</h3><h4 id="·父组件"><a href="#·父组件" class="headerlink" title="·父组件"></a>·父组件</h4><pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>div class<span class="token operator">=</span><span class="token string">"p-5"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>Pagination :pageOption<span class="token operator">=</span><span class="token string">"pageOptions"</span> /<span class="token operator">></span>  <span class="token operator">&lt;</span>/div<span class="token operator">></span><span class="token operator">&lt;</span>/template<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token function">import</span> Pagination from <span class="token string">'./components/pagination'</span><span class="token punctuation">;</span><span class="token function">export</span> default <span class="token punctuation">{</span>  data <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>      pageOptions:<span class="token punctuation">{</span>        page:1,        pageSize:10,        pageSizes:<span class="token punctuation">[</span>10,20,30,40<span class="token punctuation">]</span>,        total:40      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>,  components: <span class="token punctuation">{</span>    Pagination  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span>/script<span class="token operator">></span></code></pre><h4 id="·-子组件"><a href="#·-子组件" class="headerlink" title="· 子组件"></a>· 子组件</h4><pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>el-pagination      @size-change<span class="token operator">=</span><span class="token string">"handleSizeChange"</span>      @current-change<span class="token operator">=</span><span class="token string">"handleCurrentChange"</span>      :current-page<span class="token operator">=</span><span class="token string">"propOptions.page"</span>      :page-sizes<span class="token operator">=</span><span class="token string">"propOptions.pageSizes"</span>      :page-size<span class="token operator">=</span><span class="token string">"propOptions.pageSize"</span>      layout<span class="token operator">=</span><span class="token string">"total, sizes, prev, pager, next, jumper"</span>      :total<span class="token operator">=</span><span class="token string">"propOptions.total"</span>    <span class="token operator">></span><span class="token operator">&lt;</span>/el-pagination<span class="token operator">></span>  <span class="token operator">&lt;</span>/div<span class="token operator">></span><span class="token operator">&lt;</span>/template<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token function">export</span> default <span class="token punctuation">{</span>  props: <span class="token punctuation">[</span><span class="token string">"page-option"</span><span class="token punctuation">]</span>,  data<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>        propOptions:this.pageOption    <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>,  methods: <span class="token punctuation">{</span>      handleSizeChange<span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token punctuation">{</span>        this.propOptions.pageSize<span class="token operator">=</span>val<span class="token punctuation">;</span>      <span class="token punctuation">}</span>,      handleCurrentChange<span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token punctuation">{</span>        this.propOptions.page<span class="token operator">=</span>val<span class="token punctuation">;</span>      <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token operator">&lt;</span>/script<span class="token operator">></span></code></pre><h2 id="二、兄弟组件传值"><a href="#二、兄弟组件传值" class="headerlink" title="二、兄弟组件传值"></a>二、兄弟组件传值</h2><h3 id="1-借助事件车"><a href="#1-借助事件车" class="headerlink" title="1. 借助事件车"></a>1. 借助事件车</h3><h4 id="·-自定义公用组件bus-js"><a href="#·-自定义公用组件bus-js" class="headerlink" title="· 自定义公用组件bus.js"></a>· 自定义公用组件bus.js</h4><p>自定义创建bus.js,兄弟组件共同引用此js，bus.js内容：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">import</span> Vue from <span class="token string">'vue'</span><span class="token punctuation">;</span>var VueEvent<span class="token operator">=</span>new Vue<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">export</span> default VueEvent<span class="token punctuation">;</span></code></pre><h4 id="·-兄弟组件a"><a href="#·-兄弟组件a" class="headerlink" title="· 兄弟组件a"></a>· 兄弟组件a</h4><pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>el-pagination      @size-change<span class="token operator">=</span><span class="token string">"handleSizeChange"</span>      @current-change<span class="token operator">=</span><span class="token string">"handleCurrentChange"</span>      :current-page<span class="token operator">=</span><span class="token string">"propOptions.page"</span>      :page-sizes<span class="token operator">=</span><span class="token string">"propOptions.pageSizes"</span>      :page-size<span class="token operator">=</span><span class="token string">"propOptions.pageSize"</span>      layout<span class="token operator">=</span><span class="token string">"total, sizes, prev, pager, next, jumper"</span>      :total<span class="token operator">=</span><span class="token string">"propOptions.total"</span>    <span class="token operator">></span><span class="token operator">&lt;</span>/el-pagination<span class="token operator">></span>  <span class="token operator">&lt;</span>/div<span class="token operator">></span><span class="token operator">&lt;</span>/template<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token function">import</span> Bus from <span class="token string">'./bus.js'</span><span class="token punctuation">;</span><span class="token function">export</span> default <span class="token punctuation">{</span>  props: <span class="token punctuation">[</span><span class="token string">"page-option"</span><span class="token punctuation">]</span>,  data<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>        propOptions:this.pageOption    <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>,  methods: <span class="token punctuation">{</span>      handleSizeChange<span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token punctuation">{</span>        console.log<span class="token punctuation">(</span><span class="token variable"><span class="token variable">`</span>每页 $<span class="token punctuation">{</span>val<span class="token punctuation">}</span> 条<span class="token variable">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>,      handleCurrentChange<span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Bus.<span class="token variable">$emit</span><span class="token punctuation">(</span><span class="token string">'pageChangeTo'</span>,val<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token operator">&lt;</span>/script<span class="token operator">></span></code></pre><h4 id="·-兄弟组件b"><a href="#·-兄弟组件b" class="headerlink" title="· 兄弟组件b"></a>· 兄弟组件b</h4><pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>el-steps :active<span class="token operator">=</span><span class="token string">"pageOption.page"</span> align-center<span class="token operator">></span>      <span class="token operator">&lt;</span>el-step title<span class="token operator">=</span><span class="token string">"步骤1"</span> description<span class="token operator">=</span><span class="token string">"这是一段很长很长很长的描述性文字"</span><span class="token operator">></span><span class="token operator">&lt;</span>/el-step<span class="token operator">></span>      <span class="token operator">&lt;</span>el-step title<span class="token operator">=</span><span class="token string">"步骤2"</span> description<span class="token operator">=</span><span class="token string">"这是一段很长很长很长的描述性文字"</span><span class="token operator">></span><span class="token operator">&lt;</span>/el-step<span class="token operator">></span>      <span class="token operator">&lt;</span>el-step title<span class="token operator">=</span><span class="token string">"步骤3"</span> description<span class="token operator">=</span><span class="token string">"这是一段很长很长很长的描述性文字"</span><span class="token operator">></span><span class="token operator">&lt;</span>/el-step<span class="token operator">></span>      <span class="token operator">&lt;</span>el-step title<span class="token operator">=</span><span class="token string">"步骤4"</span> description<span class="token operator">=</span><span class="token string">"这是一段很长很长很长的描述性文字"</span><span class="token operator">></span><span class="token operator">&lt;</span>/el-step<span class="token operator">></span>    <span class="token operator">&lt;</span>/el-steps<span class="token operator">></span>  <span class="token operator">&lt;</span>/div<span class="token operator">></span><span class="token operator">&lt;</span>/template<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token function">import</span> Bus from <span class="token string">"./bus.js"</span><span class="token punctuation">;</span><span class="token function">export</span> default <span class="token punctuation">{</span>  data<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>      pageOption: <span class="token punctuation">{</span>        page: 1      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>,  mounted<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    this.listenPageChange<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>,  methods: <span class="token punctuation">{</span>    listenPageChange<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      Bus.<span class="token variable">$on</span><span class="token punctuation">(</span><span class="token string">"pageChangeTo"</span>, val <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        this.pageOption.page <span class="token operator">=</span> val<span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token operator">&lt;</span>/script<span class="token operator">></span></code></pre><h2 id="三、Vuex传值"><a href="#三、Vuex传值" class="headerlink" title="三、Vuex传值"></a>三、Vuex传值</h2><h3 id="1-开始使用vuex，新建一个-sotre文件夹，分开维护-actions-mutations-getters"><a href="#1-开始使用vuex，新建一个-sotre文件夹，分开维护-actions-mutations-getters" class="headerlink" title="1. 开始使用vuex，新建一个 sotre文件夹，分开维护 actions mutations getters"></a>1. 开始使用vuex，新建一个 sotre文件夹，分开维护 actions mutations getters</h3><p><img src="https://img-blog.csdn.net/20180208174810357" alt="网络不好"></p><h3 id="2-在store-index-js文件中新建vuex-的store实例"><a href="#2-在store-index-js文件中新建vuex-的store实例" class="headerlink" title="2. 在store/index.js文件中新建vuex 的store实例"></a>2. 在store/index.js文件中新建vuex 的store实例</h3><pre class=" language-bash"><code class="language-bash"><span class="token function">import</span> Vue from <span class="token string">'vue'</span><span class="token function">import</span> Vuex from <span class="token string">'vuex'</span><span class="token function">import</span> * as getters from <span class="token string">'./getters'</span> // 导入响应的模块，*相当于引入了这个组件下所有导出的事例<span class="token function">import</span> * as actions from <span class="token string">'./actions'</span><span class="token function">import</span> * as mutations from <span class="token string">'./mutations'</span>Vue.use<span class="token punctuation">(</span>Vuex<span class="token punctuation">)</span>// 首先声明一个需要全局维护的状态 state,比如 我这里举例的resturantNameconst state <span class="token operator">=</span> <span class="token punctuation">{</span>    resturantName: <span class="token string">'飞歌餐馆'</span> // 默认值    // id: xxx  如果还有全局状态也可以在这里添加    // name:xxx<span class="token punctuation">}</span>// 注册上面引入的各大模块const store <span class="token operator">=</span> new Vuex.Store<span class="token punctuation">(</span><span class="token punctuation">{</span>    state,    // 共同维护的一个状态，state里面可以是很多个全局状态    getters,  // 获取数据并渲染    actions,  // 数据的异步操作    mutations  // 处理数据的唯一途径，state的改变或赋值只能在这里<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token function">export</span> default store  // 导出store并在 main.js中引用注册。</code></pre><h3 id="3-actions"><a href="#3-actions" class="headerlink" title="3.actions"></a>3.actions</h3><pre class=" language-bash"><code class="language-bash">// 给action注册事件处理函数。当这个函数被触发时候，将状态提交到mutations中处理<span class="token function">export</span> <span class="token keyword">function</span> modifyAName<span class="token punctuation">(</span><span class="token punctuation">{</span>commit<span class="token punctuation">}</span>, name<span class="token punctuation">)</span> <span class="token punctuation">{</span> // commit 提交；name即为点击后传递过来的参数，此时是 <span class="token string">'A餐馆'</span>    <span class="token keyword">return</span> commit <span class="token punctuation">(</span><span class="token string">'modifyAName'</span>, name<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">export</span> <span class="token keyword">function</span> modifyBName<span class="token punctuation">(</span><span class="token punctuation">{</span>commit<span class="token punctuation">}</span>, name<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> commit <span class="token punctuation">(</span><span class="token string">'modifyBName'</span>, name<span class="token punctuation">)</span><span class="token punctuation">}</span>// ES6精简写法// <span class="token function">export</span> const modifyAName <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>commit<span class="token punctuation">}</span>,name<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> commit<span class="token punctuation">(</span><span class="token string">'modifyAName'</span>, name<span class="token punctuation">)</span></code></pre><h3 id="4-mutations"><a href="#4-mutations" class="headerlink" title="4.mutations"></a>4.mutations</h3><pre class=" language-bash"><code class="language-bash">// 提交 mutations是更改Vuex状态的唯一合法方法<span class="token function">export</span> const modifyAName <span class="token operator">=</span> <span class="token punctuation">(</span>state, name<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span> // A组件点击更改餐馆名称为 A餐馆    state.resturantName <span class="token operator">=</span> name // 把方法传递过来的参数，赋值给state中的resturantName<span class="token punctuation">}</span><span class="token function">export</span> const modifyBName <span class="token operator">=</span> <span class="token punctuation">(</span>state, name<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span> // B组件点击更改餐馆名称为 B餐馆    state.resturantName <span class="token operator">=</span> name<span class="token punctuation">}</span></code></pre><h3 id="5-getters"><a href="#5-getters" class="headerlink" title="5.getters"></a>5.getters</h3><pre class=" language-bash"><code class="language-bash">// 获取最终的状态信息<span class="token function">export</span> const resturantName <span class="token operator">=</span> state <span class="token operator">=</span><span class="token operator">></span> state.resturantName</code></pre><h3 id="6-在main-js中导入-store实例"><a href="#6-在main-js中导入-store实例" class="headerlink" title="6.在main.js中导入 store实例"></a>6.在main.js中导入 store实例</h3><pre class=" language-bash"><code class="language-bash">// The Vue build version to load with the <span class="token variable"><span class="token variable">`</span><span class="token function">import</span><span class="token variable">`</span></span> <span class="token function">command</span>// <span class="token punctuation">(</span>runtime-only or standalone<span class="token punctuation">)</span> has been <span class="token keyword">set</span> <span class="token keyword">in</span> webpack.base.conf with an alias.<span class="token function">import</span> Vue from <span class="token string">'vue'</span><span class="token function">import</span> App from <span class="token string">'./App'</span><span class="token function">import</span> router from <span class="token string">'./router'</span><span class="token function">import</span> store from <span class="token string">'./store'</span>Vue.config.productionTip <span class="token operator">=</span> <span class="token boolean">false</span>/* eslint-disable no-new */new Vue<span class="token punctuation">(</span><span class="token punctuation">{</span>  el: <span class="token string">'#app'</span>,  router,  store,  // 这样就能全局使用vuex了  components: <span class="token punctuation">{</span> App <span class="token punctuation">}</span>,  template: <span class="token string">'&lt;App/>'</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><h3 id="7-在组件A中，定义点击事件，点击-修改-餐馆的名称，并把餐馆的名称在事件中用参数进行传递。"><a href="#7-在组件A中，定义点击事件，点击-修改-餐馆的名称，并把餐馆的名称在事件中用参数进行传递。" class="headerlink" title="7.在组件A中，定义点击事件，点击 修改 餐馆的名称，并把餐馆的名称在事件中用参数进行传递。"></a>7.在组件A中，定义点击事件，点击 修改 餐馆的名称，并把餐馆的名称在事件中用参数进行传递。</h3><p>…mapactions 和 …mapgetters都是vuex提供的语法糖，在底层已经封装好了，拿来就能用，简化了很多操作。</p><p>其中…mapActions([‘clickAFn’]) 相当于this.$store.dispatch(‘clickAFn’，{参数})，mapActions中只需要指定方法名即可，参数省略。</p><p>…mapGetters([‘resturantName’])相当于this.$store.getters.resturantName</p><pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>div class<span class="token operator">=</span><span class="token string">"componentsA"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>P class<span class="token operator">=</span><span class="token string">"title"</span><span class="token operator">></span>组件A<span class="token operator">&lt;</span>/P<span class="token operator">></span>      <span class="token operator">&lt;</span>P class<span class="token operator">=</span><span class="token string">"titleName"</span><span class="token operator">></span>餐馆名称：<span class="token punctuation">{</span><span class="token punctuation">{</span>resturantName<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span>/P<span class="token operator">></span>      <span class="token operator">&lt;</span>div<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">!</span>-- 点击修改 为 A 餐馆 --<span class="token operator">></span>          <span class="token operator">&lt;</span>button class<span class="token operator">=</span><span class="token string">"btn"</span> @click<span class="token operator">=</span><span class="token string">"modifyAName('A餐馆')"</span><span class="token operator">></span>修改为A餐馆<span class="token operator">&lt;</span>/button<span class="token operator">></span>      <span class="token operator">&lt;</span>/div<span class="token operator">></span>      <span class="token operator">&lt;</span>div class<span class="token operator">=</span><span class="token string">"marTop"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>button class<span class="token operator">=</span><span class="token string">"btn"</span> @click<span class="token operator">=</span><span class="token string">"trunToB"</span><span class="token operator">></span>跳转到B页面<span class="token operator">&lt;</span>/button<span class="token operator">></span>      <span class="token operator">&lt;</span>/div<span class="token operator">></span>  <span class="token operator">&lt;</span>/div<span class="token operator">></span><span class="token operator">&lt;</span>/template<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token function">import</span> <span class="token punctuation">{</span>mapActions, mapGetters<span class="token punctuation">}</span> from <span class="token string">'vuex'</span><span class="token function">export</span> default <span class="token punctuation">{</span>  name: <span class="token string">'A'</span>,  data <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>,  methods:<span class="token punctuation">{</span>      <span class="token punctuation">..</span>.mapActions<span class="token punctuation">(</span> // 语法糖          <span class="token punctuation">[</span><span class="token string">'modifyAName'</span><span class="token punctuation">]</span> // 相当于this.<span class="token variable">$store</span>.dispatch<span class="token punctuation">(</span><span class="token string">'modifyName'</span><span class="token punctuation">)</span>,提交这个方法      <span class="token punctuation">)</span>,      trunToB <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          this.<span class="token variable">$router</span>.push<span class="token punctuation">(</span><span class="token punctuation">{</span>path: <span class="token string">'/componentsB'</span><span class="token punctuation">}</span><span class="token punctuation">)</span> // 路由跳转到B      <span class="token punctuation">}</span>  <span class="token punctuation">}</span>,  computed: <span class="token punctuation">{</span>      <span class="token punctuation">..</span>.mapGetters<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'resturantName'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> // 动态计算属性，相当于this.<span class="token variable">$store</span>.getters.resturantName  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span>/script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span>-- Add <span class="token string">"scoped"</span> attribute to limit CSS to this component only --<span class="token operator">></span><span class="token operator">&lt;</span>style scoped<span class="token operator">></span>    .title,.titleName<span class="token punctuation">{</span>        color: blue<span class="token punctuation">;</span>        font-size: 20px<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    .btn<span class="token punctuation">{</span>        width: 160px<span class="token punctuation">;</span>        height: 40px<span class="token punctuation">;</span>        background-color: blue<span class="token punctuation">;</span>        border: none<span class="token punctuation">;</span>        outline: none<span class="token punctuation">;</span>        color: <span class="token comment" spellcheck="true">#ffffff;</span>        border-radius: 4px<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    .marTop<span class="token punctuation">{</span>        margin-top: 20px<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token operator">&lt;</span>/style<span class="token operator">></span></code></pre><p>B组件同理</p><pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>div class<span class="token operator">=</span><span class="token string">"componentsB"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>P class<span class="token operator">=</span><span class="token string">"title"</span><span class="token operator">></span>组件B<span class="token operator">&lt;</span>/P<span class="token operator">></span>      <span class="token operator">&lt;</span>P class<span class="token operator">=</span><span class="token string">"titleName"</span><span class="token operator">></span>餐馆名称：<span class="token punctuation">{</span><span class="token punctuation">{</span>resturantName<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span>/P<span class="token operator">></span>      <span class="token operator">&lt;</span>div<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">!</span>-- 点击修改 为 B 餐馆 --<span class="token operator">></span>          <span class="token operator">&lt;</span>button class<span class="token operator">=</span><span class="token string">"btn"</span> @click<span class="token operator">=</span><span class="token string">"modifyBName('B餐馆')"</span><span class="token operator">></span>修改为B餐馆<span class="token operator">&lt;</span>/button<span class="token operator">></span>      <span class="token operator">&lt;</span>/div<span class="token operator">></span>      <span class="token operator">&lt;</span>div class<span class="token operator">=</span><span class="token string">"marTop"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>button class<span class="token operator">=</span><span class="token string">"btn"</span> @click<span class="token operator">=</span><span class="token string">"trunToA"</span><span class="token operator">></span>跳转到A页面<span class="token operator">&lt;</span>/button<span class="token operator">></span>      <span class="token operator">&lt;</span>/div<span class="token operator">></span>  <span class="token operator">&lt;</span>/div<span class="token operator">></span><span class="token operator">&lt;</span>/template<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token function">import</span> <span class="token punctuation">{</span>mapActions, mapGetters<span class="token punctuation">}</span> from <span class="token string">'vuex'</span><span class="token function">export</span> default <span class="token punctuation">{</span>  name: <span class="token string">'B'</span>,  data <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>,  methods:<span class="token punctuation">{</span>      <span class="token punctuation">..</span>.mapActions<span class="token punctuation">(</span> // 语法糖          <span class="token punctuation">[</span><span class="token string">'modifyBName'</span><span class="token punctuation">]</span> // 相当于this.<span class="token variable">$store</span>.dispatch<span class="token punctuation">(</span><span class="token string">'modifyName'</span><span class="token punctuation">)</span>,提交这个方法      <span class="token punctuation">)</span>,      trunToA <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          this.<span class="token variable">$router</span>.push<span class="token punctuation">(</span><span class="token punctuation">{</span>path: <span class="token string">'/componentsA'</span><span class="token punctuation">}</span><span class="token punctuation">)</span> // 路由跳转到A      <span class="token punctuation">}</span>  <span class="token punctuation">}</span>,  computed: <span class="token punctuation">{</span>      <span class="token punctuation">..</span>.mapGetters<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'resturantName'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> // 动态计算属性，相当于this.<span class="token variable">$store</span>.getters.resturantName  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span>/script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span>-- Add <span class="token string">"scoped"</span> attribute to limit CSS to this component only --<span class="token operator">></span><span class="token operator">&lt;</span>style scoped<span class="token operator">></span>    .title,.titleName<span class="token punctuation">{</span>        color: red<span class="token punctuation">;</span>        font-size: 20px<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    .btn<span class="token punctuation">{</span>        width: 160px<span class="token punctuation">;</span>        height: 40px<span class="token punctuation">;</span>        background-color: red<span class="token punctuation">;</span>        border: none<span class="token punctuation">;</span>        outline: none<span class="token punctuation">;</span>        color: <span class="token comment" spellcheck="true">#ffffff;</span>        border-radius: 4px<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    .marTop<span class="token punctuation">{</span>        margin-top: 20px<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token operator">&lt;</span>/style<span class="token operator">></span></code></pre><p>参考文章：<a href="https://blog.csdn.net/qq_35430000/article/details/79291287" target="_blank" rel="noopener">Vue通信、传值的多种方式，详解（都是干货）</a></p>]]></content>
      
      
      <categories>
          
          <category> 日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建hexo博客体会</title>
      <link href="/2019/04/18/2019-4-17-da-jian-hexo-bo-ke-ti-hui/"/>
      <url>/2019/04/18/2019-4-17-da-jian-hexo-bo-ke-ti-hui/</url>
      
        <content type="html"><![CDATA[<h2 id="发现问题"><a href="#发现问题" class="headerlink" title="发现问题"></a>发现问题</h2><p>虽然此前也搭建过博客，并且尝试写过markdown博客文章，但也没有深入了解过hexo博客的搭建。一切只能从一个合并博客内容的想法开始…<br>因为本人日前做过两个博客，XMwarrior跟xmsniper。</p><ul><li>XMwarrior是纯手撸的博客，设计到呈现、布局到逻辑都是自己大体借鉴别的博客做出来的，哈哈，这也是术业不专攻造成的失败原因，自己看着都别扭。</li><li>XMsniper一开始采用了一个简单的hexo theme皮肤yilla。还是能满足程序员的审美的。</li></ul><p>本来两个项目，互不相干也就相安无事了，但不规范，不正规，老旧不更新的东西，总是免不了淘汰或升级的命运。<br>这不，导火索就是个人精力有限，两个博客我都不想放弃，但是同时维护两个博客除了浪费时间，自己的资源分散不集中外，实在是没啥好处。<br>但合并并不是如我预料的那般简单：</p><ol><li>基于github的开放式代码管理模式，让个人资料完全没有自己的隐私。</li><li>个人博客如果仅作自我娱乐，归纳总结的话。为何不直接用更简单的方式，如：segmentfault，博客园，CSDN，知乎等等。</li><li>每天读过，看过的优质文章找个什么地方分类，整理，收藏才好。</li><li>文章到底有没有人来看?别人看过后，是否有建议?</li><li>文章太长会使页面太长，进而引起阅读困难。</li><li>个人博客影响力毕竟太小，怎样才能扩大自己的分享圈。</li></ol><h2 id="挖掘根本需求"><a href="#挖掘根本需求" class="headerlink" title="挖掘根本需求"></a>挖掘根本需求</h2><ol><li>对于自己的文章源码markdown，个人的hexo皮肤配置，我并不想公开；生成的博客文章网站代码，可以公开。</li><li>其实我要的是在个人归纳总结的基础上，分享经验。归纳总结不仅在文字表达，而且需要带可运行实例。</li><li>我需要一个单独的博客区域存放优质文章。</li><li>我需要正常博客应该有的访问量、访问人数统计，也需要有文章评论系统。</li><li>我需要一个带有锚点目录，方便查看文章的功能。</li><li>我需要文章分享到各大平台网站的功能。</li></ol><h2 id="解决过程"><a href="#解决过程" class="headerlink" title="解决过程"></a>解决过程</h2><p>过程不是那么一番风顺，在尝试过同类的3个hexo theme皮肤，添加各个功能过程中，又出现了诸多问题：</p><ol start="7"><li>码云git管理嵌套github代码管理，造成git提交bug。</li><li>hexo clean 清理build文件夹，造成github的git记录被清空，静态资源文件被清除。</li><li>更新替换个人信息，修改皮肤样式，各种细节修改，带来一系列工作量。</li><li>依赖插件加载过慢造成页面加载过慢。</li><li>首屏加载速度缓慢，其他页面同样因为加载文件过多造成加载过慢。</li><li>gitalk经过theme主题作者的封装修改后，并未提供相关文档说明，导致评论模块报错。</li></ol><p>是不是突然感觉一个头两个大？本来一天就搞定的计划，直接呵呵了。断断续续搞定完这些问题，<br>已经是两天以后。好在探索解决问题的过程也充满了乐趣。磕磕绊绊的bug路，也让自己对博客搭建这个套路，理解个七七八八。</p><h2 id="成果-amp-经验"><a href="#成果-amp-经验" class="headerlink" title="成果&amp;经验"></a>成果&amp;经验</h2><ul><li>个人代码正式合二为一，码云管理所有博客代码，github管理展示代码。</li><li>博客最终采用matery主题。<br> -采用gitalk评论功能。<br> -不蒜子网站统计。<br> -hexo-wordcount文章字数统计、阅读时长、总字数统计。<br> -分享等其他基本功能。<br> -为优化首屏加载速度，放弃视频，音频功能。</li></ul><p>个人博客平台终于搭建好了。心底着实松了一口气。（搞定最后一个问题时，真是又高兴又激动…O(∩_∩)O哈哈~）<br>哈哈，终于回归正轨，此处留此文章一篇，权作纪念！</p>]]></content>
      
      
      <categories>
          
          <category> 日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 观点与感想 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>观点与感想</title>
      <link href="/2019/04/17/guan-dian-yu-gan-xiang/"/>
      <url>/2019/04/17/guan-dian-yu-gan-xiang/</url>
      
        <content type="html"><![CDATA[<ul><li><a href="https://segmentfault.com/a/1190000018868172" target="_blank" rel="noopener">必须知道的程序员思维</a> -2019年04月15日</li><li><a href="https://blog.fundebug.com/2018/09/13/10-principle-for-programer/" target="_blank" rel="noopener">写给工程师的十条精进原则</a> -2018年09月13日</li><li><a href="http://www.ruanyifeng.com/survivor/" target="_blank" rel="noopener">《未来世界的幸存者》</a> -2018年07月09日</li></ul>]]></content>
      
      
      <categories>
          
          <category> 日常优质文章收录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 观点与感想 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>天气插件改造之Free初探</title>
      <link href="/2019/04/11/tian-qi-cha-jian-xm-weather/"/>
      <url>/2019/04/11/tian-qi-cha-jian-xm-weather/</url>
      
        <content type="html"><![CDATA[<p>此处不宜多说（露出一个高深莫测的微笑！），精华自取：</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">(</span>function <span class="token punctuation">(</span>window, document, scriptName, wigetname, url, jsonurl, scriptNode, originalNode<span class="token punctuation">)</span> <span class="token punctuation">{</span>    $.extend<span class="token punctuation">(</span><span class="token punctuation">{</span>        smartDefaultOption: <span class="token punctuation">{</span>            <span class="token string">"flavor"</span><span class="token keyword">:</span> <span class="token string">"bubble"</span>, //样式选择：bubble浮动气泡，slim固定极简            <span class="token string">"positionMode"</span><span class="token keyword">:</span> <span class="token string">"static"</span>, //浮动气泡所需属性：默认fixed            <span class="token string">"location"</span><span class="token keyword">:</span> <span class="token punctuation">[</span>                <span class="token string">"北京市"</span>,                <span class="token string">"54511"</span>,                <span class="token string">"110101"</span>,                <span class="token string">"101010100"</span>            <span class="token punctuation">]</span>,            <span class="token string">"geolocation"</span><span class="token keyword">:</span> <span class="token string">"disabled"</span>, //城市定位：enabled启用，disabled不启用。 默认免费版不能开启定位            <span class="token string">"theme"</span><span class="token keyword">:</span> <span class="token string">"chameleon"</span>, //浮层背景：chameleon随天气变化，white白色，black黑色            <span class="token string">"container"</span><span class="token keyword">:</span> <span class="token string">"wp-container"</span>, //dom元素id开头            <span class="token string">"color"</span><span class="token keyword">:</span> <span class="token string">"#FFFFFF"</span>, //字体颜色            <span class="token string">"background"</span><span class="token keyword">:</span> <span class="token string">"#C6C6C6"</span>, //背景色：不需要设置时删掉此属性            <span class="token string">"bubble"</span><span class="token keyword">:</span> <span class="token string">"disabled"</span>, //slim模式下：启用浮层显示天气详情和预报：enabled启用，disabled不启用。            <span class="token string">"uuid"</span><span class="token keyword">:</span> <span class="token string">"b93a5df5-4925-42a9-a202-5564d7495237"</span>, //下面这两项时4Dsmart网站的账号的id、hash            <span class="token string">"hash"</span><span class="token keyword">:</span> <span class="token string">"F494D79972E3122A99CA36C4BC8A9713"</span>        <span class="token punctuation">}</span>,        //封装同步ajax        getAsyncData: <span class="token keyword">function</span> <span class="token punctuation">(</span>url, data, datatype<span class="token punctuation">)</span> <span class="token punctuation">{</span>            var res <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>            $.ajax<span class="token punctuation">(</span><span class="token punctuation">{</span>                url: url,                data: data,                type: <span class="token string">"get"</span>,                dataType: datatype <span class="token operator">||</span> <span class="token string">"json"</span>,                async: false, //同步请求                timeout: 30000,                error: <span class="token keyword">function</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    res <span class="token operator">=</span> e.responseText<span class="token punctuation">;</span>                <span class="token punctuation">}</span>,                success: <span class="token keyword">function</span> <span class="token punctuation">(</span>r<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    res <span class="token operator">=</span> r<span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> res<span class="token punctuation">;</span>        <span class="token punctuation">}</span>,        /*调用百度API获取“城市中心经纬度”          * <span class="token keyword">return</span> lat,lng         */        getLocation: <span class="token keyword">function</span> <span class="token punctuation">(</span>fn<span class="token punctuation">)</span> <span class="token punctuation">{</span>            $.ajax<span class="token punctuation">(</span><span class="token punctuation">{</span>                url: <span class="token string">"http://api.map.baidu.com/location/ip?ak=0V85NTruj3YuZa44xCiOP3MqiokuqoWr&amp;coor=bd09ll"</span>,                type: <span class="token string">"POST"</span>,                dataType: <span class="token string">"jsonp"</span>,                success: <span class="token keyword">function</span> <span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    //console.log<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>                    var cityLocation <span class="token operator">=</span> data.content.point.y + <span class="token string">','</span> + data.content.point.x<span class="token punctuation">;</span>                    fn <span class="token operator">&amp;&amp;</span> fn<span class="token punctuation">(</span>cityLocation<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>,        /*调用百度API根据经纬度反查“城市名、区号”，根据城市名查询“城市气象台号、天气城市编号”         * <span class="token keyword">return</span> <span class="token string">"城市名、城市气象台号、区号、天气城市编号"</span>         */        getDirectName: <span class="token keyword">function</span> <span class="token punctuation">(</span>cityLocation, fn<span class="token punctuation">)</span> <span class="token punctuation">{</span>            $.ajax<span class="token punctuation">(</span><span class="token punctuation">{</span>                url: <span class="token string">'http://api.map.baidu.com/geocoder/v2/?callback=renderReverse&amp;location='</span> + cityLocation + <span class="token string">'&amp;output=json&amp;pois=1&amp;latest_admin=1&amp;ak=0V85NTruj3YuZa44xCiOP3MqiokuqoWr'</span>,                type: <span class="token string">"get"</span>,                async: true,                dataType: <span class="token string">"jsonp"</span>,                success: <span class="token keyword">function</span> <span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    //console.log<span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>                    var cityName <span class="token operator">=</span> res.result.addressComponent.city.replace<span class="token punctuation">(</span><span class="token string">'市'</span>, <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    var cityObservatoryCode <span class="token operator">=</span> $.getAsyncData<span class="token punctuation">(</span>jsonurl<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'observatory'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>cityName<span class="token punctuation">]</span><span class="token punctuation">;</span>                    var directAreaCode <span class="token operator">=</span> res.result.addressComponent.adcode<span class="token punctuation">;</span>                    var cityWeatherCode <span class="token operator">=</span> $.getAsyncData<span class="token punctuation">(</span>jsonurl<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'weathercity'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>cityName<span class="token punctuation">]</span><span class="token punctuation">;</span>                    //console.log<span class="token punctuation">(</span><span class="token string">'城市名：'</span>+cityName+<span class="token string">'\n'</span>,<span class="token string">'城市气象台号：'</span>+cityObservatoryCode+<span class="token string">'\n'</span>,<span class="token string">'区号：'</span>+directAreaCode+<span class="token string">'\n'</span>,<span class="token string">'天气城市编号：'</span>+cityWeatherCode<span class="token punctuation">)</span><span class="token punctuation">;</span>                    fn <span class="token operator">&amp;&amp;</span> fn<span class="token punctuation">(</span>cityName, cityObservatoryCode, directAreaCode, cityWeatherCode<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>,        //根据城市名、城市气象台号、区号、天气城市编号，调用smart-weather查询天气        getWeather: <span class="token keyword">function</span> <span class="token punctuation">(</span>cityName, cityObservatoryCode, directAreaCode, cityWeatherCode<span class="token punctuation">)</span> <span class="token punctuation">{</span>            //smart-weather天气具体参数配置            var data <span class="token operator">=</span> $.smartDefaultOption<span class="token punctuation">;</span>            data.location <span class="token operator">=</span> <span class="token punctuation">[</span>                cityName,                cityObservatoryCode,                directAreaCode,                cityWeatherCode            <span class="token punctuation">]</span><span class="token punctuation">;</span>            wp<span class="token punctuation">(</span><span class="token string">"init"</span>, data<span class="token punctuation">)</span><span class="token punctuation">;</span>            wp<span class="token punctuation">(</span><span class="token string">"show"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>,        //封装完的基于4Dsmart的免费获取天气方法        getFreeWeather: <span class="token keyword">function</span> <span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>data <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>$.isEmptyObject<span class="token punctuation">(</span>data<span class="token punctuation">))</span> <span class="token punctuation">{</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span>var key <span class="token keyword">in</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    $.smartDefaultOption<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> data<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">;</span>            $.getLocation<span class="token punctuation">(</span>function <span class="token punctuation">(</span>cityLocation<span class="token punctuation">)</span> <span class="token punctuation">{</span>                $.getDirectName<span class="token punctuation">(</span>cityLocation, <span class="token keyword">function</span> <span class="token punctuation">(</span>cityName, cityObservatoryCode, directAreaCode, cityWeatherCode<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    $.getWeather<span class="token punctuation">(</span>cityName, cityObservatoryCode, directAreaCode, cityWeatherCode<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    //天气插件依赖    initScript <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        scriptNode <span class="token operator">=</span> document.createElement<span class="token punctuation">(</span><span class="token string">"script"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        originalNode <span class="token operator">=</span> document.getElementsByTagName<span class="token punctuation">(</span><span class="token string">"script"</span><span class="token punctuation">)</span><span class="token punctuation">[</span>0<span class="token punctuation">]</span><span class="token punctuation">;</span>        scriptNode.src <span class="token operator">=</span> url<span class="token punctuation">;</span>        scriptNode.async <span class="token operator">=</span> 1<span class="token punctuation">;</span>        originalNode.parentNode.insertBefore<span class="token punctuation">(</span>scriptNode, originalNode<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    window<span class="token punctuation">[</span><span class="token string">"wpObjectName"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"wp"</span><span class="token punctuation">;</span>    window<span class="token punctuation">[</span><span class="token string">"wp"</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token punctuation">(</span>window<span class="token punctuation">[</span><span class="token string">"wp"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token punctuation">(</span>window<span class="token punctuation">[</span><span class="token string">"wp"</span><span class="token punctuation">]</span>.arg <span class="token operator">=</span> window<span class="token punctuation">[</span><span class="token string">"wp"</span><span class="token punctuation">]</span>.arg <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>.push<span class="token punctuation">(</span>arguments<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    window<span class="token punctuation">[</span><span class="token string">"wp"</span><span class="token punctuation">]</span>.l <span class="token operator">=</span> +new Date<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>window.attachEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>        window.attachEvent<span class="token punctuation">(</span><span class="token string">"onload"</span>, initScript<span class="token punctuation">)</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        window.addEventListener<span class="token punctuation">(</span><span class="token string">"load"</span>, initScript, false<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">(</span>window, document, <span class="token string">"script"</span>, <span class="token string">"wp"</span>, <span class="token string">"js/smart-weather.js"</span>, <span class="token string">"js/weather-city.json"</span><span class="token punctuation">))</span><span class="token punctuation">;</span></code></pre><p>参考文档：<br><a href="http://www.4dsmart.cn/weatherEnvironmental/plugin.action" target="_blank" rel="noopener">四维智城数据</a><br><a href="http://lbsyun.baidu.com/" target="_blank" rel="noopener">百度开放平台</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> jquery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高阶函数缓存应用之斐波那契数列</title>
      <link href="/2019/04/02/gao-jie-han-shu-huan-cun-ying-yong-zhi-fei-bo-na-qi-shu-lie/"/>
      <url>/2019/04/02/gao-jie-han-shu-huan-cun-ying-yong-zhi-fei-bo-na-qi-shu-lie/</url>
      
        <content type="html"><![CDATA[<p>合理的利用js缓存，能有效提升复杂运算效率，此处有两种概念：<br>1.闭包-（指有权访问另一个函数作用域中的变量的函数）<br>2.高阶函数-（接受其他函数作为参数或返回其他函数的函数）<br>此处以斐波那契数列为例，演示了运用缓存与不运用缓存计算的效率差别。</p><p>斐波那契数列是一组数字，以1 或 0 开头，后面跟着1，然后根据每个数字等于前两个数字之和规则进行。如</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, …<span class="token punctuation">]</span></code></pre><p>根据此规律，编写一个函数返回斐波那契数列中的 n 元素，可解：</p><pre class=" language-bash"><code class="language-bash"><span class="token keyword">function</span> fibonacci<span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;=</span> 1<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> 1<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> fibonacci<span class="token punctuation">(</span>n - 1<span class="token punctuation">)</span> + fibonacci<span class="token punctuation">(</span>n - 2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><p>运用高阶函数缓存改写此方法，可封装函数：</p><pre class=" language-bash"><code class="language-bash">var memoizer <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>fun<span class="token punctuation">)</span> <span class="token punctuation">{</span>    var cache <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>cache<span class="token punctuation">[</span>n<span class="token punctuation">]</span> <span class="token operator">!=</span> undefined<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> cache<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            var result <span class="token operator">=</span> fun<span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>            cache<span class="token punctuation">[</span>n<span class="token punctuation">]</span> <span class="token operator">=</span> result<span class="token punctuation">;</span>            <span class="token keyword">return</span> result<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span>var fibonacciUseCache <span class="token operator">=</span> memoizer<span class="token punctuation">(</span>fibonacciMemorizer<span class="token punctuation">)</span><span class="token punctuation">;</span>var fibonacciMemorizer <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;=</span> 1<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> 1<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> fibonacciUseCache<span class="token punctuation">(</span>n - 1<span class="token punctuation">)</span> + fibonacciUseCache<span class="token punctuation">(</span>n - 2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>下面是写给自己看的，此处用jquery拓展封装下，备用：</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">(</span>function <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    $.extend<span class="token punctuation">(</span><span class="token punctuation">{</span>        memoizer: <span class="token keyword">function</span> <span class="token punctuation">(</span>fun<span class="token punctuation">)</span> <span class="token punctuation">{</span>            var cache <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>cache<span class="token punctuation">[</span>n<span class="token punctuation">]</span> <span class="token operator">!=</span> undefined<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">return</span> cache<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                    var result <span class="token operator">=</span> fun<span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>                    cache<span class="token punctuation">[</span>n<span class="token punctuation">]</span> <span class="token operator">=</span> result<span class="token punctuation">;</span>                    <span class="token keyword">return</span> result<span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>参考文档：</p><ul><li><a href="https://segmentfault.com/a/1190000018589996" target="_blank" rel="noopener">Web 性能优化：理解及使用 JavaScript 缓存-前端小智</a></li><li><a href="http://www.ruanyifeng.com/blog/2018/07/web-worker.html" target="_blank" rel="noopener">Web Worker 使用教程-阮一峰</a></li></ul><p>示例：<a href="/pages/高阶函数缓存应用之斐波那契数列/index.html">请点这里</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>清除cookie稳妥做法</title>
      <link href="/2019/03/27/qing-chu-cookie-wen-tuo-zuo-fa/"/>
      <url>/2019/03/27/qing-chu-cookie-wen-tuo-zuo-fa/</url>
      
        <content type="html"><![CDATA[<p>清除cookie稳妥做法就是设置cookie与清除cookie写法一致，cookie清除不了的问题，主要出现在设置与清除cookie并非一端操作的情况下，此时需要注意path、domain的设置必须保持一致，注意下文中注释<code>//warning</code>处代码，如下：</p><pre class=" language-bash"><code class="language-bash">/*Days默认输入number或string格式数字<span class="token operator">=</span>day；s10、m10、h10、d10分别代表秒、分、小时、天*/<span class="token keyword">function</span> setCookie<span class="token punctuation">(</span>name, value, Days<span class="token punctuation">)</span> <span class="token punctuation">{</span>    var cookieString <span class="token operator">=</span> name + <span class="token string">'='</span> + escape<span class="token punctuation">(</span>value<span class="token punctuation">)</span>,        checkTime, checkMark<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isNaN<span class="token punctuation">(</span>+Days<span class="token punctuation">))</span> <span class="token punctuation">{</span>        checkTime <span class="token operator">=</span> +Days    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        checkTime <span class="token operator">=</span> Days.substr<span class="token punctuation">(</span>1<span class="token punctuation">)</span><span class="token punctuation">;</span>        checkMark <span class="token operator">=</span> Days.substr<span class="token punctuation">(</span>0, 1<span class="token punctuation">)</span>    <span class="token punctuation">}</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>checkTime <span class="token operator">></span> 0<span class="token punctuation">)</span> <span class="token punctuation">{</span>        var setDate <span class="token operator">=</span> new Date<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        setDate.setTime<span class="token punctuation">(</span>setDate.getTime<span class="token punctuation">(</span><span class="token punctuation">)</span> + checkstr<span class="token punctuation">(</span>checkMark, checkTime<span class="token punctuation">))</span><span class="token punctuation">;</span>        cookieString <span class="token operator">=</span> name + <span class="token string">'='</span> + escape<span class="token punctuation">(</span>value<span class="token punctuation">)</span> + <span class="token string">'; expires='</span> + setDate.toGMTString<span class="token punctuation">(</span><span class="token punctuation">)</span> + <span class="token string">';path=/;domain='</span> + location.hostname    <span class="token punctuation">}</span>    document.cookie <span class="token operator">=</span> cookieString<span class="token punctuation">}</span><span class="token keyword">function</span> getCookie<span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token punctuation">{</span>    var strCookie <span class="token operator">=</span> document.cookie,        arrCookie <span class="token operator">=</span> strCookie.split<span class="token punctuation">(</span><span class="token string">';'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>var i <span class="token operator">=</span> 0, len <span class="token operator">=</span> arrCookie.length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i++<span class="token punctuation">)</span> <span class="token punctuation">{</span>        var Arr_keyvalue <span class="token operator">=</span> arrCookie<span class="token punctuation">[</span>i<span class="token punctuation">]</span>.split<span class="token punctuation">(</span><span class="token string">'='</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>Arr_keyvalue<span class="token punctuation">[</span>0<span class="token punctuation">]</span>.replace<span class="token punctuation">(</span>/<span class="token punctuation">(</span>^\s*<span class="token punctuation">)</span><span class="token operator">|</span><span class="token punctuation">(</span>\s*$<span class="token punctuation">)</span>/g, <span class="token string">""</span><span class="token punctuation">)</span> <span class="token operator">==</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> unescape<span class="token punctuation">(</span>Arr_keyvalue<span class="token punctuation">[</span>1<span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token string">''</span><span class="token punctuation">}</span><span class="token keyword">function</span> deleteCookie<span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token punctuation">{</span>    var setDate <span class="token operator">=</span> new Date<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    setDate.setTime<span class="token punctuation">(</span>setDate.getTime<span class="token punctuation">(</span><span class="token punctuation">)</span> - 10000<span class="token punctuation">)</span><span class="token punctuation">;</span>    var value <span class="token operator">=</span> getCookie<span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>        document.cookie <span class="token operator">=</span> name + <span class="token string">'='</span> + value + <span class="token string">'; expires='</span> + setDate.toGMTString<span class="token punctuation">(</span><span class="token punctuation">)</span> + <span class="token string">';path=/;domain='</span> + location.hostname    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">function</span> checkstr<span class="token punctuation">(</span>mark, Time<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mark<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> Time * 24 * 60 * 60 * 1000    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        switch <span class="token punctuation">(</span>mark<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">case</span> <span class="token string">'s'</span><span class="token keyword">:</span>                <span class="token keyword">return</span> Time * 1000<span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token string">'m'</span><span class="token keyword">:</span>                <span class="token keyword">return</span> Time * 60 * 1000<span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token string">'h'</span><span class="token keyword">:</span>                <span class="token keyword">return</span> Time * 60 * 60 * 1000<span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token string">'d'</span><span class="token keyword">:</span>                <span class="token keyword">return</span> Time * 24 * 60 * 60 * 1000<span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            default:                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                <span class="token keyword">break</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>色调旋转滤镜按钮-在线生成</title>
      <link href="/2019/03/18/se-diao-xuan-zhuan-lu-jing-an-niu-zai-xian-sheng-cheng/"/>
      <url>/2019/03/18/se-diao-xuan-zhuan-lu-jing-an-niu-zai-xian-sheng-cheng/</url>
      
        <content type="html"><![CDATA[<p>本例应用颜色拾取插件 <a href="https://farbelous.io/bootstrap-colorpicker/tutorial-Basics.html" target="_blank" rel="noopener">https://farbelous.io/bootstrap-colorpicker/tutorial-Basics.html</a><br>直接放源码，有兴趣的点击例子查看：</p><pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span>html lang<span class="token operator">=</span><span class="token string">"zh"</span><span class="token operator">></span><span class="token operator">&lt;</span>head<span class="token operator">></span>    <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">"UTF-8"</span> /<span class="token operator">></span>    <span class="token operator">&lt;</span>meta name<span class="token operator">=</span><span class="token string">"viewport"</span> content<span class="token operator">=</span><span class="token string">"width=device-width, initial-scale=1.0"</span> /<span class="token operator">></span>    <span class="token operator">&lt;</span>meta http-equiv<span class="token operator">=</span><span class="token string">"X-UA-Compatible"</span> content<span class="token operator">=</span><span class="token string">"ie=edge"</span> /<span class="token operator">></span>    <span class="token operator">&lt;</span>title<span class="token operator">></span>色调旋转滤镜下的按钮<span class="token operator">&lt;</span>/title<span class="token operator">></span>    <span class="token operator">&lt;</span>link rel<span class="token operator">=</span><span class="token string">"stylesheet"</span> href<span class="token operator">=</span><span class="token string">"https://cdn.bootcss.com/bootstrap/4.0.0/css/bootstrap.min.css"</span>        integrity<span class="token operator">=</span><span class="token string">"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm"</span> crossorigin<span class="token operator">=</span><span class="token string">"anonymous"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>link href<span class="token operator">=</span><span class="token string">"css/bootstrap-colorpicker.css"</span> rel<span class="token operator">=</span><span class="token string">"stylesheet"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>style type<span class="token operator">=</span><span class="token string">"text/css"</span><span class="token operator">></span>        html,        body <span class="token punctuation">{</span>            height: 100%<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token operator">&lt;</span>/style<span class="token operator">></span><span class="token operator">&lt;</span>/head<span class="token operator">></span><span class="token operator">&lt;</span>body<span class="token operator">></span>    <span class="token operator">&lt;</span>div class<span class="token operator">=</span><span class="token string">"container jumbotron h-100"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>h1<span class="token operator">></span>选择颜色<span class="token operator">&lt;</span>/h1<span class="token operator">></span>        <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"demo"</span> class<span class="token operator">=</span><span class="token string">"input-group"</span> title<span class="token operator">=</span><span class="token string">"Using input value"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"text"</span> class<span class="token operator">=</span><span class="token string">"form-control input-lg"</span> value<span class="token operator">=</span><span class="token string">""</span> /<span class="token operator">></span>            <span class="token operator">&lt;</span>span class<span class="token operator">=</span><span class="token string">"input-group-append"</span><span class="token operator">></span><span class="token operator">&lt;</span>span                    class<span class="token operator">=</span><span class="token string">"input-group-text colorpicker-input-addon"</span><span class="token operator">></span><span class="token operator">&lt;</span>i<span class="token operator">></span><span class="token operator">&lt;</span>/i<span class="token operator">></span><span class="token operator">&lt;</span>/span<span class="token operator">></span><span class="token operator">&lt;</span>/span<span class="token operator">></span>        <span class="token operator">&lt;</span>/div<span class="token operator">></span>        <span class="token operator">&lt;</span>h4 class<span class="token operator">=</span><span class="token string">"pt-3"</span><span class="token operator">></span>色调旋转滤镜下的按钮<span class="token operator">&lt;</span>/h4<span class="token operator">></span>        <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"hueBtnBox"</span><span class="token operator">></span><span class="token operator">&lt;</span>/div<span class="token operator">></span>        <span class="token operator">&lt;</span>h4 class<span class="token operator">=</span><span class="token string">"pt-3"</span><span class="token operator">></span>css<span class="token operator">&lt;</span>/h4<span class="token operator">></span>        <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"css"</span><span class="token operator">></span><span class="token operator">&lt;</span>/div<span class="token operator">></span>    <span class="token operator">&lt;</span>/div<span class="token operator">></span>    <span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"https://code.jquery.com/jquery-3.3.1.min.js"</span><span class="token operator">></span><span class="token operator">&lt;</span>/script<span class="token operator">></span>    <span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"js/bootstrap.bundle.min.js"</span><span class="token operator">></span><span class="token operator">&lt;</span>/script<span class="token operator">></span>    <span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"js/bootstrap-colorpicker.js"</span><span class="token operator">></span><span class="token operator">&lt;</span>/script<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token variable"><span class="token variable">$(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">)</span></span> <span class="token punctuation">{</span>            <span class="token punctuation">$(</span><span class="token string">'#demo'</span><span class="token punctuation">)</span>.colorpicker<span class="token punctuation">(</span><span class="token punctuation">{</span>                <span class="token string">"color"</span><span class="token keyword">:</span> <span class="token string">"#ff0000"</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">$(</span><span class="token string">'#demo'</span><span class="token punctuation">)</span>.on<span class="token punctuation">(</span><span class="token string">'colorpickerChange'</span>, <span class="token keyword">function</span> <span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token punctuation">{</span>                initColor<span class="token punctuation">(</span>event.color<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            //初始化            initColor<span class="token punctuation">(</span><span class="token string">'#ff0000'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            //生成36种旋转滤镜颜色            <span class="token keyword">function</span> initColor<span class="token punctuation">(</span>color<span class="token punctuation">)</span> <span class="token punctuation">{</span>                color <span class="token operator">=</span> String<span class="token punctuation">(</span>color<span class="token punctuation">)</span>.indexOf<span class="token punctuation">(</span><span class="token string">'#'</span><span class="token punctuation">)</span> <span class="token operator">>=</span> 0 ? color <span class="token keyword">:</span> hexify<span class="token punctuation">(</span>String<span class="token punctuation">(</span>color<span class="token punctuation">))</span><span class="token punctuation">;</span>                var templeteStyle <span class="token operator">=</span> <span class="token string">'.ui-button-primary{border: 1px solid '</span> + color + <span class="token string">';background-color: '</span> +                    color + <span class="token string">';color: #fff;}.ui-button-primary:hover {background-color: '</span> + LightenDarkenColor<span class="token punctuation">(</span>                        color, -20<span class="token punctuation">)</span> + <span class="token string">';border-color: '</span> + LightenDarkenColor<span class="token punctuation">(</span>color, -20<span class="token punctuation">)</span> + <span class="token string">';}'</span><span class="token punctuation">;</span>                var res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">$(</span><span class="token string">'#colorPickerStyle'</span><span class="token punctuation">)</span>.length<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token variable"><span class="token variable">$(</span>document.head<span class="token variable">)</span></span>.append<span class="token punctuation">(</span><span class="token string">'&lt;style id="colorPickerStyle">'</span> + templeteStyle + <span class="token string">'&lt;/style>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                    <span class="token punctuation">$(</span><span class="token string">'#colorPickerStyle'</span><span class="token punctuation">)</span>.html<span class="token punctuation">(</span>templeteStyle<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span>var i <span class="token operator">=</span> 0, len <span class="token operator">=</span> 36<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i++<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    res.push<span class="token punctuation">(</span><span class="token string">'&lt;button class="btn ui-button-primary m-1" style="filter:hue-rotate('</span> + i +                        <span class="token string">'0deg);">其它色按钮&lt;/button>'</span><span class="token punctuation">)</span>                <span class="token punctuation">}</span>                <span class="token punctuation">$(</span><span class="token string">'#hueBtnBox'</span><span class="token punctuation">)</span>.html<span class="token punctuation">(</span>res.join<span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">))</span><span class="token punctuation">;</span>                <span class="token punctuation">$(</span><span class="token string">'#css'</span><span class="token punctuation">)</span>.html<span class="token punctuation">(</span>templeteStyle<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        //十六进制转为RGB        <span class="token keyword">function</span> hex2Rgb<span class="token punctuation">(</span>hex<span class="token punctuation">)</span> <span class="token punctuation">{</span>            var rgb <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>/^\#<span class="token punctuation">[</span>0-9A-F<span class="token punctuation">]</span><span class="token punctuation">{</span>3<span class="token punctuation">}</span>$/i.test<span class="token punctuation">(</span>hex<span class="token punctuation">))</span> <span class="token punctuation">{</span> //判断传入是否为<span class="token comment" spellcheck="true">#三位十六进制数</span>                <span class="token keyword">let</span> sixHex <span class="token operator">=</span> <span class="token string">'#'</span><span class="token punctuation">;</span>                hex.replace<span class="token punctuation">(</span>/<span class="token punctuation">[</span>0-9A-F<span class="token punctuation">]</span>/ig, <span class="token keyword">function</span> <span class="token punctuation">(</span>kw<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    sixHex +<span class="token operator">=</span> kw + kw<span class="token punctuation">;</span> //把三位16进制数转化为六位                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                hex <span class="token operator">=</span> sixHex<span class="token punctuation">;</span> //保存回hex            <span class="token punctuation">}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>/^<span class="token comment" spellcheck="true">#[0-9A-F]{6}$/i.test(hex)) { //判断传入是否为#六位十六进制数</span>                hex.replace<span class="token punctuation">(</span>/<span class="token punctuation">[</span>0-9A-F<span class="token punctuation">]</span><span class="token punctuation">{</span>2<span class="token punctuation">}</span>/ig, <span class="token keyword">function</span> <span class="token punctuation">(</span>kw<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    rgb.push<span class="token punctuation">(</span>eval<span class="token punctuation">(</span><span class="token string">'0x'</span> + kw<span class="token punctuation">))</span><span class="token punctuation">;</span> //十六进制转化为十进制并存如数组                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> `rgb<span class="token punctuation">(</span>$<span class="token punctuation">{</span>rgb.join<span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token variable"><span class="token variable">`</span><span class="token punctuation">;</span> //输出RGB格式颜色            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                console.log<span class="token punctuation">(</span><span class="token variable">`</span></span>Input <span class="token variable">${hex}</span> is wrong<span class="token operator">!</span>`<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token string">'rgb(0,0,0)'</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        //rgb转换十六进制        <span class="token keyword">function</span> hexify<span class="token punctuation">(</span>color<span class="token punctuation">)</span> <span class="token punctuation">{</span>            var values <span class="token operator">=</span> color                .replace<span class="token punctuation">(</span>/rgba?\<span class="token punctuation">(</span>/, <span class="token string">''</span><span class="token punctuation">)</span>                .replace<span class="token punctuation">(</span>/\<span class="token punctuation">)</span>/, <span class="token string">''</span><span class="token punctuation">)</span>                .replace<span class="token punctuation">(</span>/<span class="token punctuation">[</span>\s+<span class="token punctuation">]</span>/g, <span class="token string">''</span><span class="token punctuation">)</span>                .split<span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            var a <span class="token operator">=</span> parseFloat<span class="token punctuation">(</span>values<span class="token punctuation">[</span>3<span class="token punctuation">]</span> <span class="token operator">||</span> 1<span class="token punctuation">)</span>,                r <span class="token operator">=</span> Math.floor<span class="token punctuation">(</span>a * parseInt<span class="token punctuation">(</span>values<span class="token punctuation">[</span>0<span class="token punctuation">]</span><span class="token punctuation">)</span> + <span class="token punctuation">(</span>1 - a<span class="token punctuation">)</span> * 255<span class="token punctuation">)</span>,                g <span class="token operator">=</span> Math.floor<span class="token punctuation">(</span>a * parseInt<span class="token punctuation">(</span>values<span class="token punctuation">[</span>1<span class="token punctuation">]</span><span class="token punctuation">)</span> + <span class="token punctuation">(</span>1 - a<span class="token punctuation">)</span> * 255<span class="token punctuation">)</span>,                b <span class="token operator">=</span> Math.floor<span class="token punctuation">(</span>a * parseInt<span class="token punctuation">(</span>values<span class="token punctuation">[</span>2<span class="token punctuation">]</span><span class="token punctuation">)</span> + <span class="token punctuation">(</span>1 - a<span class="token punctuation">)</span> * 255<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token string">"#"</span> +                <span class="token punctuation">(</span><span class="token string">"0"</span> + r.toString<span class="token punctuation">(</span>16<span class="token punctuation">))</span>.slice<span class="token punctuation">(</span>-2<span class="token punctuation">)</span> +                <span class="token punctuation">(</span><span class="token string">"0"</span> + g.toString<span class="token punctuation">(</span>16<span class="token punctuation">))</span>.slice<span class="token punctuation">(</span>-2<span class="token punctuation">)</span> +                <span class="token punctuation">(</span><span class="token string">"0"</span> + b.toString<span class="token punctuation">(</span>16<span class="token punctuation">))</span>.slice<span class="token punctuation">(</span>-2<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        //转换颜色变亮、变暗        <span class="token keyword">function</span> LightenDarkenColor<span class="token punctuation">(</span>col, amt<span class="token punctuation">)</span> <span class="token punctuation">{</span>            var usePound <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>col<span class="token punctuation">[</span>0<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">"#"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                col <span class="token operator">=</span> col.slice<span class="token punctuation">(</span>1<span class="token punctuation">)</span><span class="token punctuation">;</span>                usePound <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            var num <span class="token operator">=</span> parseInt<span class="token punctuation">(</span>col, 16<span class="token punctuation">)</span><span class="token punctuation">;</span>            var r <span class="token operator">=</span> <span class="token punctuation">(</span>num <span class="token operator">>></span> 16<span class="token punctuation">)</span> + amt<span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>r <span class="token operator">></span> 255<span class="token punctuation">)</span> r <span class="token operator">=</span> 255<span class="token punctuation">;</span>            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>r <span class="token operator">&lt;</span> 0<span class="token punctuation">)</span> r <span class="token operator">=</span> 0<span class="token punctuation">;</span>            var b <span class="token operator">=</span> <span class="token punctuation">((</span>num <span class="token operator">>></span> 8<span class="token punctuation">)</span> <span class="token operator">&amp;</span> 0x00FF<span class="token punctuation">)</span> + amt<span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>b <span class="token operator">></span> 255<span class="token punctuation">)</span> b <span class="token operator">=</span> 255<span class="token punctuation">;</span>            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>b <span class="token operator">&lt;</span> 0<span class="token punctuation">)</span> b <span class="token operator">=</span> 0<span class="token punctuation">;</span>            var g <span class="token operator">=</span> <span class="token punctuation">(</span>num <span class="token operator">&amp;</span> 0x0000FF<span class="token punctuation">)</span> + amt<span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>g <span class="token operator">></span> 255<span class="token punctuation">)</span> g <span class="token operator">=</span> 255<span class="token punctuation">;</span>            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>g <span class="token operator">&lt;</span> 0<span class="token punctuation">)</span> g <span class="token operator">=</span> 0<span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token punctuation">(</span>usePound ? <span class="token string">"#"</span> <span class="token keyword">:</span> <span class="token string">""</span><span class="token punctuation">)</span> + <span class="token punctuation">(</span>g <span class="token operator">|</span> <span class="token punctuation">(</span>b <span class="token operator">&lt;&lt;</span> 8<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span>r <span class="token operator">&lt;&lt;</span> 16<span class="token punctuation">))</span>.toString<span class="token punctuation">(</span>16<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token operator">&lt;</span>/script<span class="token operator">></span><span class="token operator">&lt;</span>/body<span class="token operator">></span></code></pre><p>示例：<a href="/pages/色调旋转滤镜按钮在线生成/index.html">请点这里</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> jquery </tag>
            
            <tag> bootstrap </tag>
            
            <tag> css3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>百度分享-设置缩略图及标题</title>
      <link href="/2019/03/14/bai-du-fen-xiang-she-zhi-suo-lue-tu-ji-biao-ti/"/>
      <url>/2019/03/14/bai-du-fen-xiang-she-zhi-suo-lue-tu-ji-biao-ti/</url>
      
        <content type="html"><![CDATA[<h4 id="一不小心走进你的锅…"><a href="#一不小心走进你的锅…" class="headerlink" title="一不小心走进你的锅…"></a><strong>一不小心走进你的锅…</strong></h4><p>当你工作中用到  <a href="http://share.baidu.com/code" target="_blank" rel="noopener">百度分享</a>，<br>百度官方提供了两种方式，如图：<br><img src="/images/share.jpg" alt="avatar"><br>一定会毫不犹豫点进百度分享官网，<br>按其提示的两种方式选择一种来用，那么问题来了…,当你真的把网页分享出去时，你可能提出类似这种问题：<br><a href="http://tieba.baidu.com/p/5657545534" target="_blank" rel="noopener">…无法正常显示分享缩略图和介绍?</a>。<br>说到这里吐出一口老血！<br>直接讲重点：<br>1.按照官方<code>自由选择版</code>，获取到代码后。黏贴到需要分享的网页的js里。下面这是展开的样子：</p><pre class=" language-bash"><code class="language-bash">window._bd_share_config <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token string">"common"</span><span class="token keyword">:</span> <span class="token punctuation">{</span>        <span class="token string">"bdSnsKey"</span><span class="token keyword">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>,        <span class="token string">"bdText"</span><span class="token keyword">:</span> <span class="token string">""</span>, //标题        <span class="token string">"bdDesc"</span><span class="token keyword">:</span> <span class="token string">""</span>, //官方解释：“分享的摘要”，此处就是附带分享发出去的文字，你可以尝试加上自行体会<span class="token punctuation">..</span>.        <span class="token string">"bdMini"</span><span class="token keyword">:</span> <span class="token string">"2"</span>,        <span class="token string">"bdMiniList"</span><span class="token keyword">:</span> false,        <span class="token string">"bdPic"</span><span class="token keyword">:</span> <span class="token string">""</span>, //缩略图        <span class="token string">"bdStyle"</span><span class="token keyword">:</span> <span class="token string">"0"</span>,        <span class="token string">"bdSize"</span><span class="token keyword">:</span> <span class="token string">"16"</span>    <span class="token punctuation">}</span>,    <span class="token string">"slide"</span><span class="token keyword">:</span> <span class="token punctuation">{</span>        <span class="token string">"type"</span><span class="token keyword">:</span> <span class="token string">"slide"</span>,        <span class="token string">"bdImg"</span><span class="token keyword">:</span> <span class="token string">"1"</span>,        <span class="token string">"bdPos"</span><span class="token keyword">:</span> <span class="token string">"right"</span>,        <span class="token string">"bdTop"</span><span class="token keyword">:</span> <span class="token string">"157.5"</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span>with<span class="token punctuation">(</span>document<span class="token punctuation">)</span> 0<span class="token punctuation">[</span><span class="token punctuation">(</span>getElementsByTagName<span class="token punctuation">(</span><span class="token string">'head'</span><span class="token punctuation">)</span><span class="token punctuation">[</span>0<span class="token punctuation">]</span> <span class="token operator">||</span> body<span class="token punctuation">)</span>.appendChild<span class="token punctuation">(</span>createElement<span class="token punctuation">(</span><span class="token string">'script'</span><span class="token punctuation">))</span>.src <span class="token operator">=</span> <span class="token string">'http://bdimg.share.baidu.com/static/api/js/share.js?v=89860593.js?cdnversion='</span> + ~<span class="token punctuation">(</span>-new Date<span class="token punctuation">(</span><span class="token punctuation">)</span> / 36e5<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span></code></pre><p>2.打开官方<code>专业开发版</code>文档。关于各个参数的解释文档里该跟你说的都说了，说到这里本该结束了。但我还是多加一句，官方不想跟你说的没说…。<br>比如：当你分享出去自己的网页，再分享出去一个百度百科。具体的坑请自行尝试。</p><p>示例：<a href="https://codepen.io/xmwarrior/pen/eYmEvyB" target="_blank" rel="noopener">请点这里</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>position-sticky</title>
      <link href="/2019/03/14/position-sticky/"/>
      <url>/2019/03/14/position-sticky/</url>
      
        <content type="html"><![CDATA[<h2 id="position-sticky简介"><a href="#position-sticky简介" class="headerlink" title="position:sticky简介"></a>position:sticky简介</h2><p>单词sticky的中文意思是“粘性的”，position:sticky表现也符合这个粘性的表现。<br>基本上，可以看出是position:relative和position:fixed的结合体——当元素在屏幕内，表现为relative，就要滚出显示器屏幕的时候，表现为fixed。<br>你可以点击 <a href="https://codepen.io/xmwarrior/pen/rNazyYW" target="_blank" rel="noopener">此处</a> 感受一下。</p><p>不过应用此属性需要注意html布局配合，以下是css样式及html结构，具体体会你将在使用时，切身体会到：</p><h3 id="css"><a href="#css" class="headerlink" title="css"></a><strong>css</strong></h3><pre class=" language-bash"><code class="language-bash">h4 <span class="token punctuation">{</span>    position: sticky<span class="token punctuation">;</span>    z-index: 1<span class="token punctuation">;</span>    top: 0<span class="token punctuation">;</span><span class="token punctuation">}</span>div <span class="token punctuation">{</span>    position: relative<span class="token punctuation">;</span>    background-color: <span class="token comment" spellcheck="true">#7FDBFF;</span><span class="token punctuation">}</span>span <span class="token punctuation">{</span>    display: block<span class="token punctuation">;</span>    position: sticky<span class="token punctuation">;</span>    bottom: 50%<span class="token punctuation">;</span>    z-index: -1<span class="token punctuation">;</span>    background: <span class="token comment" spellcheck="true">#2ECC40;</span><span class="token punctuation">}</span></code></pre><h3 id="html"><a href="#html" class="headerlink" title="html"></a><strong>html</strong></h3><pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span>ul<span class="token operator">></span>    <span class="token operator">&lt;</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span>h4<span class="token operator">></span>我是标题1<span class="token operator">&lt;</span>/h4<span class="token operator">></span>        <span class="token operator">&lt;</span>div<span class="token operator">></span>            <span class="token operator">&lt;</span>p<span class="token operator">></span>我是内容<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token operator">&lt;</span>/p<span class="token operator">></span>            <span class="token operator">&lt;</span>p<span class="token operator">></span>我是内容<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token operator">&lt;</span>/p<span class="token operator">></span>            <span class="token operator">&lt;</span>p<span class="token operator">></span>我是内容<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token operator">&lt;</span>/p<span class="token operator">></span>            <span class="token operator">&lt;</span>p<span class="token operator">></span>我是内容<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token operator">&lt;</span>/p<span class="token operator">></span>            <span class="token operator">&lt;</span>p<span class="token operator">></span>我是内容<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token operator">&lt;</span>/p<span class="token operator">></span>            <span class="token operator">&lt;</span>p<span class="token operator">></span>我是内容<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token operator">&lt;</span>/p<span class="token operator">></span>            <span class="token operator">&lt;</span>p<span class="token operator">></span>我是内容<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token operator">&lt;</span>/p<span class="token operator">></span>        <span class="token operator">&lt;</span>/div<span class="token operator">></span>        <span class="token operator">&lt;</span>span<span class="token operator">></span>我是footer<span class="token operator">&lt;</span>/span<span class="token operator">></span>    <span class="token operator">&lt;</span>/li<span class="token operator">></span><span class="token operator">&lt;</span>/ul<span class="token operator">></span></code></pre><p>示例：<a href="https://codepen.io/xmwarrior/pen/rNazyYW" target="_blank" rel="noopener">请点这里</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
            <tag> css3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css变量</title>
      <link href="/2019/03/13/css-bian-liang/"/>
      <url>/2019/03/13/css-bian-liang/</url>
      
        <content type="html"><![CDATA[<h4 id="CSS变量var-语法"><a href="#CSS变量var-语法" class="headerlink" title="CSS变量var()语法"></a><strong>CSS变量var()语法</strong></h4><p>CSS中原生的变量定义语法是：<code>--*</code>，<br>变量使用语法是：<code>var(--*)</code>，<br>其中*表示我们的变量名称。<br>下面是bootstrap使用的<code>:root</code>定义：</p><pre class=" language-bash"><code class="language-bash">:root <span class="token punctuation">{</span>    --blue: <span class="token comment" spellcheck="true">#007bff;</span>    --indigo: <span class="token comment" spellcheck="true">#6610f2;</span>    --purple: <span class="token comment" spellcheck="true">#6f42c1;</span>    --pink: <span class="token comment" spellcheck="true">#e83e8c;</span>    --red: <span class="token comment" spellcheck="true">#dc3545;</span>    --orange: <span class="token comment" spellcheck="true">#fd7e14;</span>    --yellow: <span class="token comment" spellcheck="true">#ffc107;</span>    --green: <span class="token comment" spellcheck="true">#28a745;</span>    --teal: <span class="token comment" spellcheck="true">#20c997;</span>    --cyan: <span class="token comment" spellcheck="true">#17a2b8;</span>    --white: <span class="token comment" spellcheck="true">#fff;</span>    --gray: <span class="token comment" spellcheck="true">#6c757d;</span>    --gray-dark: <span class="token comment" spellcheck="true">#343a40;</span>    --primary: <span class="token comment" spellcheck="true">#007bff;</span>    --secondary: <span class="token comment" spellcheck="true">#6c757d;</span>    --success: <span class="token comment" spellcheck="true">#28a745;</span>    --info: <span class="token comment" spellcheck="true">#17a2b8;</span>    --warning: <span class="token comment" spellcheck="true">#ffc107;</span>    --danger: <span class="token comment" spellcheck="true">#dc3545;</span>    --light: <span class="token comment" spellcheck="true">#f8f9fa;</span>    --dark: <span class="token comment" spellcheck="true">#343a40;</span>    --breakpoint-xs: 0<span class="token punctuation">;</span>    --breakpoint-sm: 576px<span class="token punctuation">;</span>    --breakpoint-md: 768px<span class="token punctuation">;</span>    --breakpoint-lg: 992px<span class="token punctuation">;</span>    --breakpoint-xl: 1200px<span class="token punctuation">;</span>    --font-family-sans-serif: -apple-system,BlinkMacSystemFont,<span class="token string">"Segoe UI"</span>,Roboto,<span class="token string">"Helvetica Neue"</span>,Arial,sans-serif,<span class="token string">"Apple Color Emoji"</span>,<span class="token string">"Segoe UI Emoji"</span>,<span class="token string">"Segoe UI Symbol"</span><span class="token punctuation">;</span>    --font-family-monospace: SFMono-Regular,Menlo,Monaco,Consolas,<span class="token string">"Liberation Mono"</span>,<span class="token string">"Courier New"</span>,monospace<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>相信用不了多久，你就可以不考虑此用法的兼容性。CSS中原生的变量的应用场景你可以自己探索，在我看来，此不失为一种定制一套皮肤风格的好办法。示例里顺便试了下document.scrollingElement,如有兴趣请自行F2查看。</p><p>示例：<a href="https://codepen.io/xmwarrior/pen/zYxdZNo" target="_blank" rel="noopener">请点这里</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于CSS3 column多栏布局实现水平滑页翻页交互</title>
      <link href="/2019/03/12/ji-yu-css3column-duo-lan-bu-ju-shi-xian-shui-ping-hua-ye-fan-ye-jiao-hu/"/>
      <url>/2019/03/12/ji-yu-css3column-duo-lan-bu-ju-shi-xian-shui-ping-hua-ye-fan-ye-jiao-hu/</url>
      
        <content type="html"><![CDATA[<p>今天看大神张鑫旭的文章，有一篇  <a href="https://www.zhangxinxu.com/wordpress/2017/02/css3-multiple-column-layout-read-horizontal/" target="_blank" rel="noopener">基于CSS3 column多栏布局实现水平滑页翻页交互</a>，<br>为熟悉column多栏布局写法，模仿 <a href="https://m.qidian.com" target="_blank" rel="noopener">起点中文网</a> 封装了个jquery拓展方法。如下：</p><h4 id="css"><a href="#css" class="headerlink" title="css"></a><strong>css</strong></h4><pre class=" language-XML"><code class="language-XML">html,body {    width: 100%;    height: 100%;    overflow: hidden;    background: #C4B399;}html,body,ul,li {    padding: 0;    margin: 0;}ul {    -webkit-columns: calc(100vw - 32px) 1;    -webkit-column-gap: 16px;    columns: calc(100vw - 32px) 1;    column-gap: 16px;    overflow: visible;    height: 100%;    transition: all 0.2s;}ul li {    list-style: none;    padding: 1em;    margin: 1em;    -webkit-column-break-inside: avoid;    page-break-inside: avoid;    background: #FFFFFF;    break-inside: avoid;}</code></pre><h4 id="html"><a href="#html" class="headerlink" title="html"></a><strong>html</strong></h4><pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span>ul<span class="token operator">></span><span class="token operator">&lt;</span>/ul<span class="token operator">></span><span class="token operator">&lt;</span>div style<span class="token operator">=</span><span class="token string">"display: flex;justify-content: space-between;position: absolute;bottom: 0;width: 100%;"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>button<span class="token operator">></span>前一页<span class="token operator">&lt;</span>/button<span class="token operator">></span>    <span class="token operator">&lt;</span>button<span class="token operator">></span>后一页<span class="token operator">&lt;</span>/button<span class="token operator">></span><span class="token operator">&lt;</span>/div<span class="token operator">></span></code></pre><h4 id="js"><a href="#js" class="headerlink" title="js"></a><strong>js</strong></h4><p>依赖：jquery.js</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">(</span>function <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    $.extend<span class="token punctuation">(</span><span class="token punctuation">{</span>        pageColumns: <span class="token punctuation">{</span>            init: <span class="token keyword">function</span> <span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token punctuation">{</span>                var that <span class="token operator">=</span> this<span class="token punctuation">;</span>                options <span class="token operator">=</span> options <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>                //默认参数                that.el <span class="token operator">=</span> options.el <span class="token operator">||</span> <span class="token punctuation">$(</span><span class="token string">'ul'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                that.prevBtn <span class="token operator">=</span> options.prevBtn <span class="token operator">||</span> <span class="token punctuation">$(</span><span class="token string">'button'</span><span class="token punctuation">)</span>.eq<span class="token punctuation">(</span>0<span class="token punctuation">)</span><span class="token punctuation">;</span>                that.nextBtn <span class="token operator">=</span> options.nextBtn <span class="token operator">||</span> <span class="token punctuation">$(</span><span class="token string">'button'</span><span class="token punctuation">)</span>.eq<span class="token punctuation">(</span>1<span class="token punctuation">)</span><span class="token punctuation">;</span>                that.columnGap <span class="token operator">=</span> options.columnGap <span class="token operator">||</span> 16<span class="token punctuation">;</span>                that.currentPage <span class="token operator">=</span> options.currentPage <span class="token operator">||</span> 0<span class="token punctuation">;</span>                that.sectionIndex <span class="token operator">=</span> options.sectionIndex <span class="token operator">||</span> 0<span class="token punctuation">;</span>                that.direction <span class="token operator">=</span> options.direction <span class="token operator">||</span> 1<span class="token punctuation">;</span>                that.totalWidth <span class="token operator">=</span> that.el<span class="token punctuation">[</span>0<span class="token punctuation">]</span>.scrollWidth<span class="token punctuation">;</span>                that.pageWidth <span class="token operator">=</span> that.el.outerWidth<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                that.page <span class="token operator">=</span> that.totalWidth / <span class="token punctuation">(</span>that.pageWidth + that.columnGap * 2<span class="token punctuation">)</span><span class="token punctuation">;</span>                //前一页                that.prevBtn.on<span class="token punctuation">(</span><span class="token string">'click'</span>, <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>that.currentPage<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        that.currentPage--<span class="token punctuation">;</span>                        that.el.css<span class="token punctuation">(</span><span class="token string">'transform'</span>, <span class="token string">'translateX(-'</span> + <span class="token punctuation">(</span>that.currentPage * <span class="token punctuation">(</span>that.pageWidth + that.columnGap<span class="token punctuation">))</span> + <span class="token string">'px)'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">return</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    that.direction <span class="token operator">=</span> 0<span class="token punctuation">;</span>                    that.sectionIndex--<span class="token punctuation">;</span>                    that.filContent<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    that.slidePosition<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                //后一页                that.nextBtn.on<span class="token punctuation">(</span><span class="token string">'click'</span>, <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>that.currentPage <span class="token operator">&lt;</span> that.page - 1<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        that.currentPage++<span class="token punctuation">;</span>                        that.el.css<span class="token punctuation">(</span><span class="token string">'transform'</span>, <span class="token string">'translateX(-'</span> + <span class="token punctuation">(</span>that.currentPage * <span class="token punctuation">(</span>that.pageWidth + that.columnGap<span class="token punctuation">))</span> + <span class="token string">'px)'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">return</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    that.direction <span class="token operator">=</span> 1<span class="token punctuation">;</span>                    that.sectionIndex++<span class="token punctuation">;</span>                    that.filContent<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    that.slidePosition<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                //初始化                that.filContent<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                that.slidePosition<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>,            filContent: <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                var templete <span class="token operator">=</span> <span class="token string">'很长很长的内容......'</span><span class="token punctuation">;</span>                var repeatText <span class="token operator">=</span> <span class="token string">'&lt;li>'</span> + templete.repeat<span class="token punctuation">(</span>3<span class="token punctuation">)</span> + <span class="token string">'&lt;/li>'</span><span class="token punctuation">;</span>                var title <span class="token operator">=</span> <span class="token string">'&lt;li>第'</span> + this.sectionIndex + <span class="token string">'章&lt;/li>'</span><span class="token punctuation">;</span>                this.el.html<span class="token punctuation">(</span>title + repeatText.repeat<span class="token punctuation">(</span>30<span class="token punctuation">))</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>,            slidePosition: <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                var that <span class="token operator">=</span> this<span class="token punctuation">;</span>                that.el.css<span class="token punctuation">(</span><span class="token string">'transition'</span>, <span class="token string">'unset'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                that.totalWidth <span class="token operator">=</span> that.el<span class="token punctuation">[</span>0<span class="token punctuation">]</span>.scrollWidth<span class="token punctuation">;</span>                that.page <span class="token operator">=</span> that.totalWidth / <span class="token punctuation">(</span>that.pageWidth + that.columnGap * 2<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>that.direction<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    that.currentPage <span class="token operator">=</span> 0<span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                    that.currentPage <span class="token operator">=</span> Math.ceil<span class="token punctuation">(</span>that.page - 1<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                that.el.css<span class="token punctuation">(</span><span class="token string">'transform'</span>, <span class="token string">'translateX(-'</span> + <span class="token punctuation">(</span>that.currentPage * <span class="token punctuation">(</span>that.pageWidth + that.columnGap<span class="token punctuation">))</span> + <span class="token string">'px)'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                setTimeout<span class="token punctuation">(</span>function <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    that.el.css<span class="token punctuation">(</span><span class="token string">'transition'</span>, <span class="token string">'all 0.2s'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>, 200<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>示例：<a href="https://codepen.io/xmwarrior/pen/ZEYJerp" target="_blank" rel="noopener">请点这里</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> jquery </tag>
            
            <tag> css3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>相邻算法</title>
      <link href="/2019/03/11/xiang-lin-suan-fa/"/>
      <url>/2019/03/11/xiang-lin-suan-fa/</url>
      
        <content type="html"><![CDATA[<p>参照“猫眼电影”购票选座规则：</p><pre class=" language-bash"><code class="language-bash">/** 影院选座验证* param <span class="token punctuation">{</span>Array<span class="token punctuation">}</span> arr* param <span class="token punctuation">{</span>Object<span class="token punctuation">}</span> options.ok验证成功回调函数，options.cancel验证失败回调函数* <span class="token keyword">return</span> <span class="token punctuation">{</span>Boolean<span class="token punctuation">}</span> 验证成功返回true,失败返回false*/<span class="token keyword">function</span> getAdjacentItem<span class="token punctuation">(</span>arr, options<span class="token punctuation">)</span> <span class="token punctuation">{</span>    var arrLength <span class="token operator">=</span> arr.length<span class="token punctuation">;</span>    var nextItems <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>arrLength<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>arrLength <span class="token operator">==</span><span class="token operator">=</span> 1<span class="token punctuation">)</span> <span class="token punctuation">{</span>        options.ok <span class="token operator">&amp;&amp;</span> options.ok<span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    arr.sort<span class="token punctuation">(</span>function <span class="token punctuation">(</span>a, b<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>a.y <span class="token operator">==</span><span class="token operator">=</span> b.y <span class="token operator">&amp;&amp;</span> Math.abs<span class="token punctuation">(</span>a.x - b.x<span class="token punctuation">)</span> <span class="token operator">==</span><span class="token operator">=</span> 1<span class="token punctuation">)</span> <span class="token punctuation">{</span>            nextItems.push<span class="token punctuation">(</span><span class="token punctuation">{</span>                a: a,                b: b            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> a.y - b.y<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>arrLength % 2<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>Math.floor<span class="token punctuation">(</span>arrLength / 2<span class="token punctuation">)</span> <span class="token operator">==</span><span class="token operator">=</span> nextItems.length<span class="token punctuation">)</span> <span class="token punctuation">{</span>            options.ok <span class="token operator">&amp;&amp;</span> options.ok<span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>arrLength / 2 <span class="token operator">==</span><span class="token operator">=</span> nextItems.length<span class="token punctuation">)</span> <span class="token punctuation">{</span>            options.ok <span class="token operator">&amp;&amp;</span> options.ok<span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    options.cancel <span class="token operator">&amp;&amp;</span> options.cancel<span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>示例：<a href="https://codepen.io/xmwarrior/pen/MWYvpZb" target="_blank" rel="noopener">请点这里</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网页防扒</title>
      <link href="/2019/03/06/wang-ye-fang-ba/"/>
      <url>/2019/03/06/wang-ye-fang-ba/</url>
      
        <content type="html"><![CDATA[<p>所谓防火防盗防大佬，虽然我们提倡开源，但是有时也会用到“网页防扒”，在<a href="https://www.sojson.com" target="_blank" rel="noopener">https://www.sojson.com</a> 被挡了一会感觉很蓝瘦，顺便研究了下如何“防扒”，代码如下：</p><pre class=" language-bash"><code class="language-bash">document.onkeydown<span class="token operator">=</span>function<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    var e<span class="token operator">=</span>window.event<span class="token operator">||</span>arguments<span class="token punctuation">[</span>0<span class="token punctuation">]</span><span class="token punctuation">;</span>    if<span class="token punctuation">(</span>e.keyCode<span class="token operator">==</span>123<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>else <span class="token keyword">if</span><span class="token variable"><span class="token punctuation">((</span>e.ctrlKey<span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>e.shiftKey<span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>e.keyCode<span class="token operator">==</span><span class="token number">73</span><span class="token punctuation">))</span></span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span>document.oncontextmenu<span class="token operator">=</span>function<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bootstrap-Modal组件封装</title>
      <link href="/2019/02/26/bootstrap-modal-zu-jian-feng-zhuang/"/>
      <url>/2019/02/26/bootstrap-modal-zu-jian-feng-zhuang/</url>
      
        <content type="html"><![CDATA[<p>bootstrap-Modal组件封装：</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">(</span>function<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    $.extend<span class="token punctuation">(</span><span class="token punctuation">{</span>        xmDialog: <span class="token punctuation">{</span>        init: function<span class="token punctuation">(</span>option<span class="token punctuation">)</span> <span class="token punctuation">{</span>            var that <span class="token operator">=</span> this<span class="token punctuation">;</span>            var base <span class="token operator">=</span> <span class="token punctuation">{</span>                el: <span class="token string">'#xmCustomModal'</span>,                classes: option.classes <span class="token operator">||</span> <span class="token string">'modal-sm'</span>,                zIndex:option.zIndex<span class="token operator">||</span>10000,                styles: option.styles <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>,//临时没用到                modalHeader: <span class="token punctuation">{</span>                    title: option.title <span class="token operator">||</span> <span class="token string">''</span>,                    styles: option.headerStyles<span class="token operator">||</span><span class="token punctuation">{</span><span class="token punctuation">}</span>                <span class="token punctuation">}</span>,                modalBody: <span class="token punctuation">{</span>                    content: option.content <span class="token operator">||</span> <span class="token string">''</span>,                    styles: option.bodyStyles <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>,                    loading: <span class="token string">'&lt;div id="spinLoading" class="bg-white w-100 h-100 position-absolute row align-items-center justify-content-center m-0 spin-loading" style="top:0;left:0;">&lt;div class="loader">&lt;div class="loader-inner line-spin-fade-loader">&lt;div>&lt;/div>&lt;div>&lt;/div>&lt;div>&lt;/div>&lt;div>&lt;/div>&lt;div>&lt;/div>&lt;div>&lt;/div>&lt;div>&lt;/div>&lt;div>&lt;/div>&lt;/div>&lt;/div>&lt;/div>'</span>,                <span class="token punctuation">}</span>,                modalFooter: <span class="token punctuation">{</span>                    show: typeof option.showFooter <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">'boolean'</span> ? option.showFooter <span class="token keyword">:</span> true,                    styles: <span class="token punctuation">{</span>                        <span class="token string">'justify-content'</span><span class="token keyword">:</span> option.footerAlign<span class="token operator">||</span><span class="token string">'center'</span>                    <span class="token punctuation">}</span>,                    type: option.type <span class="token operator">||</span> <span class="token string">'confirm'</span>,                    buttons: <span class="token punctuation">{</span>                        <span class="token string">'confirm'</span><span class="token keyword">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>                            type: <span class="token string">'ok'</span>,                            classes: <span class="token string">'btn-primary'</span>,                            text: option.okText <span class="token operator">||</span> <span class="token string">'确认'</span>,                            fn: function<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                option.ok ? option.ok<span class="token punctuation">(</span>that<span class="token punctuation">)</span> <span class="token keyword">:</span> that.<span class="token variable">$el</span>.modal<span class="token punctuation">(</span><span class="token string">'hide'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                        <span class="token punctuation">}</span>, <span class="token punctuation">{</span>                            type: <span class="token string">'cancel'</span>,                            classes: <span class="token string">'btn-secondary'</span>,                            text: <span class="token string">'取消'</span>,                            fn: function<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                option.cancel ? option.cancel<span class="token punctuation">(</span>that<span class="token punctuation">)</span> <span class="token keyword">:</span> that.<span class="token variable">$el</span>.modal<span class="token punctuation">(</span><span class="token string">'hide'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                        <span class="token punctuation">}</span><span class="token punctuation">]</span>,                        <span class="token string">'tip'</span><span class="token keyword">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>                            type: <span class="token string">'tip'</span>,                            classes: <span class="token string">'btn-info'</span>,                            text: <span class="token string">'我知道了'</span>,                            fn: function<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                option.confirm ? option.confirm<span class="token punctuation">(</span>that<span class="token punctuation">)</span> <span class="token keyword">:</span> that.<span class="token variable">$el</span>.modal<span class="token punctuation">(</span><span class="token string">'hide'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                        <span class="token punctuation">}</span><span class="token punctuation">]</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>,                formatStyle: function<span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    if<span class="token punctuation">(</span><span class="token operator">!</span>obj <span class="token operator">||</span> $.isEmptyObject<span class="token punctuation">(</span>obj<span class="token punctuation">))</span> <span class="token punctuation">{</span>                        <span class="token keyword">return</span> <span class="token string">''</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                        var res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                        for<span class="token punctuation">(</span>var key <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>                            res.push<span class="token punctuation">(</span>key + <span class="token string">':'</span> + obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">}</span>                        <span class="token keyword">return</span> res.join<span class="token punctuation">(</span><span class="token string">';'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>,                shown: function<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    option.shown ? option.shown<span class="token punctuation">(</span>that<span class="token punctuation">)</span> <span class="token keyword">:</span> that.hideLoading<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>,                hidden: function<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    option.hidden <span class="token operator">&amp;&amp;</span> option.hidden<span class="token punctuation">(</span>that<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">;</span>            if<span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable"><span class="token variable">$(</span>base.el<span class="token variable">)</span></span>.length<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token punctuation">$(</span><span class="token string">'body'</span><span class="token punctuation">)</span>.append<span class="token punctuation">(</span><span class="token string">'&lt;div id="'</span> + base.el.substring<span class="token punctuation">(</span>1<span class="token punctuation">)</span> + <span class="token string">'" class="modal fade" style="z-index:10000;" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true" data-backdrop="static">&lt;/div>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            that.<span class="token variable">$el</span> <span class="token operator">=</span> <span class="token variable"><span class="token variable">$(</span>base.el<span class="token variable">)</span></span><span class="token punctuation">;</span>            var templete <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            if<span class="token punctuation">(</span>base.style<span class="token punctuation">)</span> <span class="token punctuation">{</span>                that.<span class="token variable">$el</span>.attr<span class="token punctuation">(</span><span class="token string">'style'</span>, base.style<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            templete.push<span class="token punctuation">(</span><span class="token string">'&lt;div class="modal-dialog modal-dialog-centered modal-dialog-scrollable '</span> + base.classes + <span class="token string">'" role="document" style="'</span> + base.formatStyle<span class="token punctuation">(</span>base.styles<span class="token punctuation">)</span> + <span class="token string">'">'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            templete.push<span class="token punctuation">(</span><span class="token string">'    &lt;div class="modal-content">'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            templete.push<span class="token punctuation">(</span><span class="token string">'        &lt;div class="modal-header border-0 py-2" style="'</span> + base.formatStyle<span class="token punctuation">(</span>base.modalHeader.styles<span class="token punctuation">)</span> + <span class="token string">'">'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            templete.push<span class="token punctuation">(</span><span class="token string">'            &lt;h5 class="modal-title pr-3 text-nowrap overflow-hidden" style="text-overflow:ellipsis;">'</span> + base.modalHeader.title + <span class="token string">'&lt;/h5>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            templete.push<span class="token punctuation">(</span><span class="token string">'            &lt;button type="button" class="close" style="margin:-0.5rem -1rem;padding:0.5rem 0.75rem;" data-dismiss="modal" aria-label="Close">'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            templete.push<span class="token punctuation">(</span><span class="token string">'                &lt;span aria-hidden="true">&amp;times;&lt;/span>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            templete.push<span class="token punctuation">(</span><span class="token string">'            &lt;/button>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            templete.push<span class="token punctuation">(</span><span class="token string">'        &lt;/div>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            templete.push<span class="token punctuation">(</span><span class="token string">'        &lt;div class="modalBody modal-body relative" style="'</span> + base.formatStyle<span class="token punctuation">(</span>base.modalBody.styles<span class="token punctuation">)</span> + <span class="token string">'">'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            templete.push<span class="token punctuation">(</span><span class="token string">'            &lt;!--提示内容-->'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            templete.push<span class="token punctuation">(</span>base.modalBody.content + base.modalBody.loading<span class="token punctuation">)</span><span class="token punctuation">;</span>            templete.push<span class="token punctuation">(</span><span class="token string">'        &lt;/div>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            if<span class="token punctuation">(</span>base.modalFooter.show<span class="token punctuation">)</span> <span class="token punctuation">{</span>                templete.push<span class="token punctuation">(</span><span class="token string">'    &lt;div class="modal-footer border-0" style="'</span> + base.formatStyle<span class="token punctuation">(</span>base.modalFooter.styles<span class="token punctuation">)</span> + <span class="token string">'">'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                base.modalFooter.buttons<span class="token punctuation">[</span>base.modalFooter.type<span class="token punctuation">]</span>.forEach<span class="token punctuation">(</span>function<span class="token punctuation">(</span>item, index<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    $<span class="token punctuation">[</span><span class="token string">'xmCustomModal'</span> + index<span class="token punctuation">]</span> <span class="token operator">=</span> item.fn<span class="token punctuation">;</span>                    templete.push<span class="token punctuation">(</span><span class="token string">'    &lt;button type="button" class="btn '</span> + item.classes + <span class="token string">' px-4" onclick="'</span> + <span class="token string">'$.xmCustomModal'</span> + index + <span class="token string">'();">'</span> + item.text + <span class="token string">'&lt;/button>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                templete.push<span class="token punctuation">(</span><span class="token string">'    &lt;/div>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            templete.push<span class="token punctuation">(</span><span class="token string">'    &lt;/div>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            templete.push<span class="token punctuation">(</span><span class="token string">'&lt;/div>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            that.<span class="token variable">$el</span>.html<span class="token punctuation">(</span>templete.join<span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">))</span><span class="token punctuation">;</span>            that.<span class="token variable">$el</span>.off<span class="token punctuation">(</span><span class="token string">'hidden.bs.modal'</span><span class="token punctuation">)</span>.on<span class="token punctuation">(</span><span class="token string">'hidden.bs.modal'</span>, function<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                base.hidden <span class="token operator">&amp;&amp;</span> base.hidden<span class="token punctuation">(</span>this<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            that.<span class="token variable">$el</span>.off<span class="token punctuation">(</span><span class="token string">'shown.bs.modal'</span><span class="token punctuation">)</span>.on<span class="token punctuation">(</span><span class="token string">'shown.bs.modal'</span>, function<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                base.shown <span class="token operator">&amp;&amp;</span> base.shown<span class="token punctuation">(</span>that<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            that.<span class="token variable">$el</span>.modal<span class="token punctuation">(</span><span class="token string">'show'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> this<span class="token punctuation">;</span>        <span class="token punctuation">}</span>,        hideLoading: function<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token punctuation">$(</span><span class="token string">'#spinLoading'</span><span class="token punctuation">)</span>.hide<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> this<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>示例：<a href="https://codepen.io/xmwarrior/pen/xxbLqEd" target="_blank" rel="noopener">请点这里</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jquery </tag>
            
            <tag> bootstrap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>title美化提示框</title>
      <link href="/2019/02/25/title-mei-hua-ti-shi-kuang/"/>
      <url>/2019/02/25/title-mei-hua-ti-shi-kuang/</url>
      
        <content type="html"><![CDATA[<pre class=" language-xml"><code class="language-xml"><span class="token doctype">&lt;!DOCTYPE HTML></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>renderer<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>webkit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge,chrome<span class="token punctuation">=</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width,initial-scale<span class="token punctuation">=</span>1.0,maximum-scale<span class="token punctuation">=</span>1.0,user-scalable<span class="token punctuation">=</span>yes<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>美化title属性，使title成为提示框<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/jquery.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">            <span class="token selector"><span class="token class">.tipsy-tooltip</span> </span><span class="token punctuation">{</span>                <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">12</span>px<span class="token punctuation">;</span>                <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token entity" title="\5b8b">\5b8b</span><span class="token entity" title="\4f53">\4f53</span><span class="token punctuation">;</span>                <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">1.5</span><span class="token punctuation">;</span>                <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>                <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">5</span>px<span class="token punctuation">;</span>                <span class="token property">z-index</span><span class="token punctuation">:</span> <span class="token number">100003</span><span class="token punctuation">;</span>                <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">1</span>            <span class="token punctuation">}</span>            <span class="token selector"><span class="token class">.tipsy-arrow</span> </span><span class="token punctuation">{</span>                <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>                <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>                <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>                <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>                <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">6</span>px dashed <span class="token hexcode">#FFA500</span><span class="token punctuation">;</span>                <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>                <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">20%</span><span class="token punctuation">;</span>                <span class="token property">margin-left</span><span class="token punctuation">:</span> -<span class="token number">5</span>px<span class="token punctuation">;</span>                <span class="token property">border-bottom-style</span><span class="token punctuation">:</span> solid<span class="token punctuation">;</span>                <span class="token property">border-top</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>                <span class="token property">border-left-color</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>                <span class="token property">border-right-color</span><span class="token punctuation">:</span> transparent            <span class="token punctuation">}</span>            <span class="token selector"><span class="token class">.tipsy-arrow-n</span> </span><span class="token punctuation">{</span>                <span class="token property">border-bottom-color</span><span class="token punctuation">:</span> <span class="token hexcode">#FFA500</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token selector"><span class="token class">.tipsy-inner</span> </span><span class="token punctuation">{</span>                <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#FFA500</span><span class="token punctuation">;</span>                <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#fff</span><span class="token punctuation">;</span>                <span class="token property">max-width</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>                <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">5</span>px <span class="token number">8</span>px <span class="token number">4</span>px <span class="token number">8</span>px<span class="token punctuation">;</span>                <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>                <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">3</span>px            <span class="token punctuation">}</span>        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>提示：利用title属性制作的提示框效果，不是真正的提示弹出框<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>我是提示文字<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>提示文字                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">10</span>px <span class="token number">0</span> <span class="token number">0</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>-子元素<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>&lt;p<span class="token punctuation">></span>我是提示文字1&lt;/p<span class="token punctuation">></span>&lt;p<span class="token punctuation">></span>我是提示文字2&lt;/p<span class="token punctuation">></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>提示文字可换行<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">                <span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    $<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token punctuation">{</span>                        sweetTitles<span class="token punctuation">:</span> <span class="token punctuation">{</span>                            x<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span>                            y<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">,</span>                            tipElements<span class="token punctuation">:</span> <span class="token string">"a,span,img,div"</span><span class="token punctuation">,</span>                            noTitle<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>                            isTarget<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>                            init<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                <span class="token keyword">var</span> that <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>                                <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>tipElements<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                    <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mouseover</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                        <span class="token keyword">if</span><span class="token punctuation">(</span>that<span class="token punctuation">.</span>isTarget <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">$</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                            <span class="token keyword">return</span><span class="token punctuation">;</span>                                        <span class="token punctuation">}</span>                                        <span class="token keyword">if</span><span class="token punctuation">(</span>that<span class="token punctuation">.</span>noTitle<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                            isTitle <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                                        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                            isTitle <span class="token operator">=</span> $<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>title<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token string">''</span><span class="token punctuation">;</span>                                        <span class="token punctuation">}</span>                                        <span class="token keyword">if</span><span class="token punctuation">(</span>isTitle<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                            <span class="token keyword">this</span><span class="token punctuation">.</span>myTitle <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>title<span class="token punctuation">;</span>                                            <span class="token keyword">this</span><span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>                                            <span class="token keyword">var</span> tooltip <span class="token operator">=</span> <span class="token string">"&lt;div class='tipsy-tooltip'>&lt;div class='tipsy-arrow tipsy-arrow-n'>&lt;/div>&lt;div class='tipsy-inner'>"</span> <span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>myTitle <span class="token operator">+</span><span class="token string">"&lt;/div>&lt;/div>"</span><span class="token punctuation">;</span>                                            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'body'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>tooltip<span class="token punctuation">)</span><span class="token punctuation">;</span>                                            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.tipsy-tooltip'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token punctuation">{</span>                                                <span class="token string">"top"</span><span class="token punctuation">:</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>pageY <span class="token operator">+</span> <span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"px"</span><span class="token punctuation">,</span>                                                <span class="token string">"left"</span><span class="token punctuation">:</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>pageX <span class="token operator">-</span> <span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"px"</span>                                            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token string">'fast'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                        <span class="token punctuation">}</span>                                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mouseout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>myTitle <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                            <span class="token keyword">this</span><span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>myTitle<span class="token punctuation">;</span>                                            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.tipsy-tooltip'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                        <span class="token punctuation">}</span>                                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mousemove</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.tipsy-tooltip'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token punctuation">{</span>                                            <span class="token string">"top"</span><span class="token punctuation">:</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>pageY <span class="token operator">+</span> <span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"px"</span><span class="token punctuation">,</span>                                            <span class="token string">"left"</span><span class="token punctuation">:</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>pageX <span class="token operator">-</span> <span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"px"</span>                                        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                        <span class="token punctuation">}</span>                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//调用</span>                $<span class="token punctuation">.</span>sweetTitles<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>示例：<a href="https://codepen.io/xmwarrior/pen/RwNZpjY" target="_blank" rel="noopener">请点这里</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jquery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js运算精度_decimal插件</title>
      <link href="/2019/02/19/js-yun-suan-jing-du-decimal-cha-jian/"/>
      <url>/2019/02/19/js-yun-suan-jing-du-decimal-cha-jian/</url>
      
        <content type="html"><![CDATA[<p>收藏备用：</p><pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span><span class="token operator">!</span>DOCTYPE html<span class="token operator">></span><span class="token operator">&lt;</span>html<span class="token operator">></span>    <span class="token operator">&lt;</span>head<span class="token operator">></span>        <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>title<span class="token operator">></span>解决JS运算和精度问题-decimal.js<span class="token operator">&lt;</span>/title<span class="token operator">></span>        <span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"../js/decimal.min.js"</span> type<span class="token operator">=</span><span class="token string">"text/javascript"</span> charset<span class="token operator">=</span><span class="token string">"utf-8"</span><span class="token operator">></span><span class="token operator">&lt;</span>/script<span class="token operator">></span>    <span class="token operator">&lt;</span>/head<span class="token operator">></span>    <span class="token operator">&lt;</span>body<span class="token operator">></span>        <span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span><span class="token operator">></span>            /*示例*/            var dc<span class="token operator">=</span>function <span class="token punctuation">(</span>r<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> new Decimal<span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            //加法 add            var a <span class="token operator">=</span> dc<span class="token punctuation">(</span>0.1<span class="token punctuation">)</span>.add<span class="token punctuation">(</span>dc<span class="token punctuation">(</span>0.2<span class="token punctuation">))</span><span class="token punctuation">;</span>            //减法 sub            var b <span class="token operator">=</span> dc<span class="token punctuation">(</span>0.3<span class="token punctuation">)</span>.sub<span class="token punctuation">(</span>dc<span class="token punctuation">(</span>0.1<span class="token punctuation">))</span><span class="token punctuation">;</span>            //乘法 mul            var c <span class="token operator">=</span> dc<span class="token punctuation">(</span>37.5<span class="token punctuation">)</span>.mul<span class="token punctuation">(</span>dc<span class="token punctuation">(</span>5.5<span class="token punctuation">))</span><span class="token punctuation">;</span>            //除法 div            var d <span class="token operator">=</span> dc<span class="token punctuation">(</span>10<span class="token punctuation">)</span>.div<span class="token punctuation">(</span>dc<span class="token punctuation">(</span>3<span class="token punctuation">))</span><span class="token punctuation">;</span>            console.log<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>            console.log<span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>            console.log<span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>            console.log<span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">&lt;</span>/script<span class="token operator">></span>    <span class="token operator">&lt;</span>/body<span class="token operator">></span><span class="token operator">&lt;</span>/html<span class="token operator">></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>input-range自定义</title>
      <link href="/2019/02/01/input-range-zi-ding-yi/"/>
      <url>/2019/02/01/input-range-zi-ding-yi/</url>
      
        <content type="html"><![CDATA[<p>input-range自定义样式</p><pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span><span class="token operator">!</span>DOCTYPE html<span class="token operator">></span><span class="token operator">&lt;</span>html lang<span class="token operator">=</span><span class="token string">"zh"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>head<span class="token operator">></span>        <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">"UTF-8"</span> /<span class="token operator">></span>        <span class="token operator">&lt;</span>meta name<span class="token operator">=</span><span class="token string">"viewport"</span> content<span class="token operator">=</span><span class="token string">"width=device-width, initial-scale=1.0"</span> /<span class="token operator">></span>        <span class="token operator">&lt;</span>meta http-equiv<span class="token operator">=</span><span class="token string">"X-UA-Compatible"</span> content<span class="token operator">=</span><span class="token string">"ie=edge"</span> /<span class="token operator">></span>        <span class="token operator">&lt;</span>title<span class="token operator">></span>Document<span class="token operator">&lt;</span>/title<span class="token operator">></span>        <span class="token operator">&lt;</span>style type<span class="token operator">=</span><span class="token string">"text/css"</span><span class="token operator">></span>            /*去除默认样式*/            input<span class="token punctuation">[</span>type<span class="token operator">=</span>range<span class="token punctuation">]</span> <span class="token punctuation">{</span>                -webkit-appearance: none<span class="token punctuation">;</span>                width: 300px<span class="token punctuation">;</span>                background: -webkit-linear-gradient<span class="token punctuation">(</span><span class="token comment" spellcheck="true">#059CFA, #059CFA) no-repeat;</span>                background-size: 0% 100%<span class="token punctuation">;</span>                border-radius: 10px<span class="token punctuation">;</span>                /*这个属性设置使填充进度条时的图形为圆角*/            <span class="token punctuation">}</span>            input<span class="token punctuation">[</span>type<span class="token operator">=</span>range<span class="token punctuation">]</span>::-webkit-slider-thumb <span class="token punctuation">{</span>                -webkit-appearance: none<span class="token punctuation">;</span>                /*隐藏滑块*/            <span class="token punctuation">}</span>            /*轨道自定义样式*/            input<span class="token punctuation">[</span>type<span class="token operator">=</span>range<span class="token punctuation">]</span>::-webkit-slider-runnable-track <span class="token punctuation">{</span>                height: 15px<span class="token punctuation">;</span>                border-radius: 10px<span class="token punctuation">;</span>                /*将轨道设为圆角的*/                box-shadow: 0 1px 1px <span class="token comment" spellcheck="true">#def3f8, inset 0 .125em .125em #0d1112;</span>                /*轨道内置阴影效果*/            <span class="token punctuation">}</span>            input<span class="token punctuation">[</span>type<span class="token operator">=</span>range<span class="token punctuation">]</span>:focus <span class="token punctuation">{</span>                outline: none<span class="token punctuation">;</span>                /*原始的控件获取到焦点时，会显示包裹整个控件的边框，所以还需要把边框取消。*/            <span class="token punctuation">}</span>            /*滑块自定义样式*/            input<span class="token punctuation">[</span>type<span class="token operator">=</span>range<span class="token punctuation">]</span>::-webkit-slider-thumb <span class="token punctuation">{</span>                -webkit-appearance: none<span class="token punctuation">;</span>                height: 25px<span class="token punctuation">;</span>                width: 25px<span class="token punctuation">;</span>                margin-top: -5px<span class="token punctuation">;</span>                /*使滑块超出轨道部分的偏移量相等*/                background: <span class="token comment" spellcheck="true">#ffffff;</span>                border-radius: 50%<span class="token punctuation">;</span>                /*外观设置为圆形*/                border: solid 0.125em rgba<span class="token punctuation">(</span>205, 224, 230, 0.5<span class="token punctuation">)</span><span class="token punctuation">;</span>                /*设置边框*/                box-shadow: 0 .125em .125em <span class="token comment" spellcheck="true">#3b4547;</span>                /*添加底部阴影*/            <span class="token punctuation">}</span>        <span class="token operator">&lt;</span>/style<span class="token operator">></span>    <span class="token operator">&lt;</span>/head<span class="token operator">></span>    <span class="token operator">&lt;</span>body<span class="token operator">></span>        <span class="token operator">&lt;</span>input id<span class="token operator">=</span><span class="token string">"snrPollInterval"</span> type<span class="token operator">=</span><span class="token string">"range"</span> value<span class="token operator">=</span><span class="token string">"10"</span> min<span class="token operator">=</span><span class="token string">"1"</span> max<span class="token operator">=</span><span class="token string">"30"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"js/jquery-2.1.0.js"</span> type<span class="token operator">=</span><span class="token string">"text/javascript"</span> charset<span class="token operator">=</span><span class="token string">"utf-8"</span><span class="token operator">></span><span class="token operator">&lt;</span>/script<span class="token operator">></span>        <span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span><span class="token operator">></span>            //滑动时的样式            $.fn.RangeSlider <span class="token operator">=</span> function<span class="token punctuation">(</span>cfg<span class="token punctuation">)</span> <span class="token punctuation">{</span>                this.sliderCfg <span class="token operator">=</span> <span class="token punctuation">{</span>                    min: cfg <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>isNaN<span class="token punctuation">(</span>parseFloat<span class="token punctuation">(</span>cfg.min<span class="token punctuation">))</span> ? Number<span class="token punctuation">(</span>cfg.min<span class="token punctuation">)</span> <span class="token keyword">:</span> null,                    max: cfg <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>isNaN<span class="token punctuation">(</span>parseFloat<span class="token punctuation">(</span>cfg.max<span class="token punctuation">))</span> ? Number<span class="token punctuation">(</span>cfg.max<span class="token punctuation">)</span> <span class="token keyword">:</span> null,                    step: cfg <span class="token operator">&amp;&amp;</span> Number<span class="token punctuation">(</span>cfg.step<span class="token punctuation">)</span> ? cfg.step <span class="token keyword">:</span> 1,                    callback: cfg <span class="token operator">&amp;&amp;</span> cfg.callback ? cfg.callback <span class="token keyword">:</span> null                <span class="token punctuation">}</span><span class="token punctuation">;</span>                var <span class="token variable">$input</span> <span class="token operator">=</span> <span class="token variable"><span class="token variable">$(</span>this<span class="token variable">)</span></span><span class="token punctuation">;</span>                var min <span class="token operator">=</span> this.sliderCfg.min<span class="token punctuation">;</span>                var max <span class="token operator">=</span> this.sliderCfg.max<span class="token punctuation">;</span>                var step <span class="token operator">=</span> this.sliderCfg.step<span class="token punctuation">;</span>                var callback <span class="token operator">=</span> this.sliderCfg.callback<span class="token punctuation">;</span>                <span class="token variable">$input</span>.attr<span class="token punctuation">(</span><span class="token string">'min'</span>, min<span class="token punctuation">)</span>.attr<span class="token punctuation">(</span><span class="token string">'max'</span>, max<span class="token punctuation">)</span>.attr<span class="token punctuation">(</span><span class="token string">'step'</span>, step<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token variable">$input</span>.on<span class="token punctuation">(</span><span class="token string">"input"</span>, function<span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token variable">$input</span>.attr<span class="token punctuation">(</span><span class="token string">'value'</span>, this.value<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token variable">$input</span>.css<span class="token punctuation">(</span><span class="token string">'background'</span>, <span class="token string">'linear-gradient(to right, #059CFA, #ebeff4 '</span> + this.value + <span class="token string">'%, #ebeff4)'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    if<span class="token punctuation">(</span>$.isFunction<span class="token punctuation">(</span>callback<span class="token punctuation">))</span> <span class="token punctuation">{</span>                        callback<span class="token punctuation">(</span>this<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token variable">$input</span>.trigger<span class="token punctuation">(</span><span class="token string">'input'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">;</span>            <span class="token punctuation">$(</span><span class="token string">'#snrPollInterval'</span><span class="token punctuation">)</span>.RangeSlider<span class="token punctuation">(</span><span class="token punctuation">{</span>                min: 0,                max: 100,                step: 1,                callback: <span class="token string">''</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">&lt;</span>/script<span class="token operator">></span>    <span class="token operator">&lt;</span>/body<span class="token operator">></span><span class="token operator">&lt;</span>/html<span class="token operator">></span></code></pre><p>示例：<a href="https://codepen.io/xmwarrior/pen/dyPzvNJ" target="_blank" rel="noopener">请点这里</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jquery </tag>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>canvas转换svg合成图片</title>
      <link href="/2019/02/01/canvas-zhuan-huan-svg-he-cheng-tu-pian/"/>
      <url>/2019/02/01/canvas-zhuan-huan-svg-he-cheng-tu-pian/</url>
      
        <content type="html"><![CDATA[<p>此函数应用场景为：百度地图生成自定义标志</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">(</span>function <span class="token punctuation">(</span>$, document<span class="token punctuation">)</span> <span class="token punctuation">{</span>    $.extend<span class="token punctuation">(</span><span class="token punctuation">{</span>        //16进制颜色转换为rgba颜色        colorRgb: <span class="token keyword">function</span> <span class="token punctuation">(</span>str, opacity<span class="token punctuation">)</span> <span class="token punctuation">{</span>            var reg <span class="token operator">=</span> /^<span class="token comment" spellcheck="true">#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/;</span>            var sColor <span class="token operator">=</span> str.toLowerCase<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>sColor <span class="token operator">&amp;&amp;</span> reg.test<span class="token punctuation">(</span>sColor<span class="token punctuation">))</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>sColor.length <span class="token operator">==</span><span class="token operator">=</span> 4<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    var sColorNew <span class="token operator">=</span> <span class="token string">"#"</span><span class="token punctuation">;</span>                    <span class="token keyword">for</span> <span class="token punctuation">(</span>var i <span class="token operator">=</span> 1<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> 4<span class="token punctuation">;</span> i++<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        sColorNew +<span class="token operator">=</span> sColor.slice<span class="token punctuation">(</span>i, i + 1<span class="token punctuation">)</span>.concat<span class="token punctuation">(</span>sColor.slice<span class="token punctuation">(</span>i, i + 1<span class="token punctuation">))</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    sColor <span class="token operator">=</span> sColorNew<span class="token punctuation">;</span>                <span class="token punctuation">}</span>                //处理六位的颜色值                  var sColorChange <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span>var i <span class="token operator">=</span> 1<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> 7<span class="token punctuation">;</span> i +<span class="token operator">=</span> 2<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    sColorChange.push<span class="token punctuation">(</span>parseInt<span class="token punctuation">(</span><span class="token string">"0x"</span> + sColor.slice<span class="token punctuation">(</span>i, i + 2<span class="token punctuation">))</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">return</span> <span class="token string">"rgba("</span> + sColorChange.join<span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span> + <span class="token string">","</span> + opacity<span class="token punctuation">;</span> //透明度            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> sColor<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>,        svgToPng: <span class="token keyword">function</span> <span class="token punctuation">(</span>opts<span class="token punctuation">)</span> <span class="token punctuation">{</span>            var options <span class="token operator">=</span> <span class="token punctuation">{</span>                color: opts.color <span class="token operator">||</span> <span class="token string">'#ff0000'</span>,                opacity: opts.opacity <span class="token operator">||</span> 0.3,                txt: opts.txt <span class="token operator">||</span> <span class="token string">'生'</span>,                width: opts.width <span class="token operator">||</span> 30,                height: opts.height <span class="token operator">||</span> 30,                fn: opts.fn <span class="token operator">||</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    console.log<span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">;</span>            var svgArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            svgArr.push<span class="token punctuation">(</span><span class="token string">'&lt;svg version="1.1" id="图层_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="'</span> + options.width + <span class="token string">'" height="'</span> + options.height + <span class="token string">'" viewBox="0 0 48 48" enable-background="new 0 0 48 48" xml:space="preserve">'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            svgArr.push<span class="token punctuation">(</span><span class="token string">'    &lt;path fill="'</span> + $.colorRgb<span class="token punctuation">(</span>options.color, options.opacity<span class="token punctuation">)</span> + <span class="token string">'" d="M45.301,24.094c0,11.741-9.519,21.26-21.26,21.26c-11.741,0-21.26-9.519-21.26-21.26 c0-11.741,9.519-21.259,21.26-21.259C35.782,2.834,45.301,12.353,45.301,24.094z" />'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            svgArr.push<span class="token punctuation">(</span><span class="token string">'    &lt;path fill="'</span> + options.color + <span class="token string">'" d="M8.45,24.096c0,8.608,6.98,15.588,15.59,15.588c8.611,0,15.59-6.98,15.59-15.588 c0-8.612-6.979-15.592-15.59-15.592C15.43,8.504,8.45,15.484,8.45,24.096z" />'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            svgArr.push<span class="token punctuation">(</span><span class="token string">'&lt;/svg>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            var svgXml <span class="token operator">=</span> svgArr.join<span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            var img <span class="token operator">=</span> new Image<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            img.crossOrigin <span class="token operator">=</span> <span class="token string">'Anonymous'</span><span class="token punctuation">;</span>            //给图片对象写入base64编码的svg流            img.src <span class="token operator">=</span> <span class="token string">'data:image/svg+xml;base64,'</span> + window.btoa<span class="token punctuation">(</span>unescape<span class="token punctuation">(</span>encodeURIComponent<span class="token punctuation">(</span>svgXml<span class="token punctuation">))</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            img.onload <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                var canvas <span class="token operator">=</span> document.createElement<span class="token punctuation">(</span><span class="token string">'canvas'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> //准备空画布                var context <span class="token operator">=</span> canvas.getContext<span class="token punctuation">(</span><span class="token string">'2d'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                canvas.width <span class="token operator">=</span> options.width<span class="token punctuation">;</span>                canvas.height <span class="token operator">=</span> options.height<span class="token punctuation">;</span>                context.drawImage<span class="token punctuation">(</span>img, 0, 0<span class="token punctuation">)</span><span class="token punctuation">;</span>                context.fillStyle <span class="token operator">=</span> <span class="token string">'#fff'</span><span class="token punctuation">;</span>                context.font <span class="token operator">=</span> <span class="token string">"bold 13px '微软雅黑','宋体'"</span><span class="token punctuation">;</span>                context.textBaseline <span class="token operator">=</span> <span class="token string">'middle'</span><span class="token punctuation">;</span>                context.fillText<span class="token punctuation">(</span>options.txt, <span class="token punctuation">(</span>options.width - 13<span class="token punctuation">)</span> / 2, <span class="token punctuation">(</span>options.height / 2<span class="token punctuation">))</span><span class="token punctuation">;</span>                var imagePng <span class="token operator">=</span> canvas.toDataURL<span class="token punctuation">(</span><span class="token string">'image/png'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                options.fn <span class="token operator">&amp;&amp;</span> options.fn<span class="token punctuation">(</span>imagePng<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>jQuery, document<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>示例：<a href="https://codepen.io/xmwarrior/pen/ExavWNZ" target="_blank" rel="noopener">请点这里</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> jquery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端实现懒加载</title>
      <link href="/2018/12/05/qian-duan-shi-xian-lan-jia-zai/"/>
      <url>/2018/12/05/qian-duan-shi-xian-lan-jia-zai/</url>
      
        <content type="html"><![CDATA[<pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span><span class="token operator">!</span>DOCTYPE html<span class="token operator">></span><span class="token operator">&lt;</span>html lang<span class="token operator">=</span><span class="token string">"zh"</span><span class="token operator">></span><span class="token operator">&lt;</span>head<span class="token operator">></span>    <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">"UTF-8"</span> /<span class="token operator">></span>    <span class="token operator">&lt;</span>meta name<span class="token operator">=</span><span class="token string">"viewport"</span> content<span class="token operator">=</span><span class="token string">"width=device-width, initial-scale=1.0"</span> /<span class="token operator">></span>    <span class="token operator">&lt;</span>meta http-equiv<span class="token operator">=</span><span class="token string">"X-UA-Compatible"</span> content<span class="token operator">=</span><span class="token string">"ie=edge"</span> /<span class="token operator">></span>    <span class="token operator">&lt;</span>title<span class="token operator">></span>Document<span class="token operator">&lt;</span>/title<span class="token operator">></span>    <span class="token operator">&lt;</span>link rel<span class="token operator">=</span><span class="token string">"stylesheet"</span> type<span class="token operator">=</span><span class="token string">"text/css"</span> href<span class="token operator">=</span><span class="token string">"css/bootstrap.min.css"</span> /<span class="token operator">></span>    <span class="token operator">&lt;</span>style type<span class="token operator">=</span><span class="token string">"text/css"</span><span class="token operator">></span>        .page-scroll-container<span class="token operator">></span>div <span class="token punctuation">{</span>            position: relative<span class="token punctuation">;</span>            margin-bottom: 20px        <span class="token punctuation">}</span>        .page-scroll-container a <span class="token punctuation">{</span>            overflow: hidden<span class="token punctuation">;</span>            display: block        <span class="token punctuation">}</span>        .mask <span class="token punctuation">{</span>            background-color: rgba<span class="token punctuation">(</span>0, 0, 0, 0.6<span class="token punctuation">)</span><span class="token punctuation">;</span>            position: absolute<span class="token punctuation">;</span>            top: 0<span class="token punctuation">;</span>            left: 0<span class="token punctuation">;</span>            width: 100%<span class="token punctuation">;</span>            height: 100%<span class="token punctuation">;</span>            opacity: 0<span class="token punctuation">;</span>            filter: alpha<span class="token punctuation">(</span>opacity<span class="token operator">=</span>0<span class="token punctuation">)</span><span class="token punctuation">;</span>            transition: all .5s<span class="token punctuation">;</span>            -webkit-transition: all .5s<span class="token punctuation">;</span>            -moz-transition: all .5s<span class="token punctuation">;</span>            -o-transition: all .5s<span class="token punctuation">;</span>            -ms-transition: all .5s<span class="token punctuation">;</span>            text-align: center<span class="token punctuation">;</span>            color: <span class="token comment" spellcheck="true">#ffffff</span>        <span class="token punctuation">}</span>        .mask h4 <span class="token punctuation">{</span>            transform: translateY<span class="token punctuation">(</span>10px<span class="token punctuation">)</span><span class="token punctuation">;</span>            opacity: 0.5<span class="token punctuation">;</span>            transition-duration: 0.8s<span class="token punctuation">;</span>            transition-delay: .2s<span class="token punctuation">;</span>            margin-top: 28%<span class="token punctuation">;</span>            font-size: 36px<span class="token punctuation">;</span>            line-height: 42px        <span class="token punctuation">}</span>        .page-scroll-container<span class="token operator">></span>div:hover .mask h4 <span class="token punctuation">{</span>            opacity: 1<span class="token punctuation">;</span>            transform: translateY<span class="token punctuation">(</span>-10px<span class="token punctuation">)</span>        <span class="token punctuation">}</span>        .mask strong <span class="token punctuation">{</span>            transform: translateY<span class="token punctuation">(</span>10px<span class="token punctuation">)</span><span class="token punctuation">;</span>            opacity: 0.8<span class="token punctuation">;</span>            transition-duration: 1s<span class="token punctuation">;</span>            transition-delay: .3s<span class="token punctuation">;</span>            display: block        <span class="token punctuation">}</span>        .page-scroll-container<span class="token operator">></span>div:hover .mask strong <span class="token punctuation">{</span>            transform: translateY<span class="token punctuation">(</span>-10px<span class="token punctuation">)</span><span class="token punctuation">;</span>            opacity: 1<span class="token punctuation">;</span>            transition-duration: opacity 1s        <span class="token punctuation">}</span>        .mask span <span class="token punctuation">{</span>            color: <span class="token comment" spellcheck="true">#fff;</span>            transform: translateY<span class="token punctuation">(</span>10px<span class="token punctuation">)</span><span class="token punctuation">;</span>            opacity: 0.5<span class="token punctuation">;</span>            transition-duration: .8s<span class="token punctuation">;</span>            transition-delay: .4s<span class="token punctuation">;</span>            display: block<span class="token punctuation">;</span>            font-size: 14px        <span class="token punctuation">}</span>        .page-scroll-container<span class="token operator">></span>div:hover span <span class="token punctuation">{</span>            opacity: 1<span class="token punctuation">;</span>            transform: translateY<span class="token punctuation">(</span>-10px<span class="token punctuation">)</span>        <span class="token punctuation">}</span>        .page-scroll-container<span class="token operator">></span>div:hover .mask <span class="token punctuation">{</span>            opacity: 1<span class="token punctuation">;</span>            filter: alpha<span class="token punctuation">(</span>opacity<span class="token operator">=</span>100<span class="token punctuation">)</span><span class="token punctuation">;</span>            transform: scale<span class="token punctuation">(</span>1<span class="token punctuation">)</span>        <span class="token punctuation">}</span>        .page-scroll-container img <span class="token punctuation">{</span>            width: 100%<span class="token punctuation">;</span>            height: 100%<span class="token punctuation">;</span>            transition: all .5s<span class="token punctuation">;</span>            -webkit-transition: all .5s<span class="token punctuation">;</span>            -moz-transition: all .5s<span class="token punctuation">;</span>            -o-transition: all .5s<span class="token punctuation">;</span>            -ms-transition: all .5s<span class="token punctuation">;</span>            overflow: hidden        <span class="token punctuation">}</span>        .page-scroll-container a:hover img <span class="token punctuation">{</span>            -webkit-transform: scale<span class="token punctuation">(</span>1.2<span class="token punctuation">)</span><span class="token punctuation">;</span>            -moz-transform: scale<span class="token punctuation">(</span>1.2<span class="token punctuation">)</span><span class="token punctuation">;</span>            -o-transform: scale<span class="token punctuation">(</span>1.2<span class="token punctuation">)</span><span class="token punctuation">;</span>            -ms-transform: scale<span class="token punctuation">(</span>1.2<span class="token punctuation">)</span><span class="token punctuation">;</span>            transform: scale<span class="token punctuation">(</span>1.2<span class="token punctuation">)</span>        <span class="token punctuation">}</span>        .more <span class="token punctuation">{</span>            width: 280px<span class="token punctuation">;</span>            height: 55px<span class="token punctuation">;</span>            line-height: 55px<span class="token punctuation">;</span>            background: <span class="token comment" spellcheck="true">#d7000f;</span>            margin: 20px auto 50px auto<span class="token punctuation">;</span>            text-align: center<span class="token punctuation">;</span>            border-radius: 26px        <span class="token punctuation">}</span>        .more a <span class="token punctuation">{</span>            color: <span class="token comment" spellcheck="true">#ffffff;</span>            font-size: 18px        <span class="token punctuation">}</span>    <span class="token operator">&lt;</span>/style<span class="token operator">></span><span class="token operator">&lt;</span>/head<span class="token operator">></span><span class="token operator">&lt;</span>body<span class="token operator">></span>    <span class="token operator">&lt;</span>div class<span class="token operator">=</span><span class="token string">"page-scroll-container row"</span><span class="token operator">></span><span class="token operator">&lt;</span>/div<span class="token operator">></span>    <span class="token operator">&lt;</span>div class<span class="token operator">=</span><span class="token string">"more"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>a id<span class="token operator">=</span><span class="token string">"itemMore"</span><span class="token operator">></span>查看更多造势案例+<span class="token operator">&lt;</span>/a<span class="token operator">></span>    <span class="token operator">&lt;</span>/div<span class="token operator">></span>    <span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"./js/jquery.min.js"</span><span class="token operator">></span><span class="token operator">&lt;</span>/script<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token punctuation">(</span>function <span class="token punctuation">(</span>$, document<span class="token punctuation">)</span> <span class="token punctuation">{</span>            /*前端实现-懒加载插件pageScroll             * param el       <span class="token punctuation">{</span>object<span class="token punctuation">}</span> jquery对象,默认： <span class="token punctuation">$(</span><span class="token string">'.page-scroll-container'</span><span class="token punctuation">)</span>             * param datas    <span class="token punctuation">{</span>array <span class="token punctuation">}</span> 数据数组,格式：<span class="token punctuation">[</span><span class="token punctuation">{</span>img:<span class="token string">''</span>,title:<span class="token string">''</span>,content:<span class="token string">''</span><span class="token punctuation">}</span>,<span class="token punctuation">..</span>.<span class="token punctuation">]</span>,默认：示例             * param pageSize <span class="token punctuation">{</span>number<span class="token punctuation">}</span> 每页显示数量,默认： 6             * param currentPage <span class="token punctuation">{</span>number<span class="token punctuation">}</span> 当前页,默认： 0             * param addButton <span class="token punctuation">{</span>object<span class="token punctuation">}</span> jquery对象,默认： <span class="token punctuation">$(</span><span class="token string">'#itemMore'</span><span class="token punctuation">)</span>             * param bottom <span class="token punctuation">{</span>number<span class="token punctuation">}</span> 距底部距离,默认： 0             * param loadingTime <span class="token punctuation">{</span>number<span class="token punctuation">}</span> 加载时间,默认： 200ms             * */            $.pageScroll <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>option<span class="token punctuation">)</span> <span class="token punctuation">{</span>                option <span class="token operator">=</span> option <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>                var defaultOption <span class="token operator">=</span> <span class="token punctuation">{</span>                    el: <span class="token punctuation">$(</span><span class="token string">'.page-scroll-container'</span><span class="token punctuation">)</span>,                    arr: option.datas <span class="token operator">||</span> JSON.parse<span class="token punctuation">((</span><span class="token string">'['</span> + new String<span class="token punctuation">(</span>                            <span class="token string">',{"img":"img/index3_1.png","title":"Brand","content":"内容"}'</span><span class="token punctuation">)</span>.repeat<span class="token punctuation">(</span>20<span class="token punctuation">)</span>                        .substring<span class="token punctuation">(</span>1<span class="token punctuation">)</span> + <span class="token string">']'</span><span class="token punctuation">))</span>,                    pagesize: option.pageSize <span class="token operator">||</span> 6,                    currentPage: option.currentPage <span class="token operator">||</span> 0,                    <span class="token variable">$loadText</span><span class="token keyword">:</span> option.addButton <span class="token operator">||</span> <span class="token punctuation">$(</span><span class="token string">'#itemMore'</span><span class="token punctuation">)</span>,                    loadTxt: <span class="token punctuation">{</span>                        more: <span class="token string">'查看更多造势案例+'</span>,                        loading: <span class="token string">'&lt;span>加载中...&lt;/span>'</span>,                        end: <span class="token string">'没有更多了'</span>                    <span class="token punctuation">}</span>,                    bottom: option.bottom <span class="token operator">||</span> 0,                    loadingTime: option.loadingTime <span class="token operator">||</span> 200,                    isloading: <span class="token boolean">false</span>                <span class="token punctuation">}</span><span class="token punctuation">;</span>                Object.defineProperty<span class="token punctuation">(</span>defaultOption, <span class="token string">"page"</span>, <span class="token punctuation">{</span>                    get: <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span>option.page<span class="token punctuation">)</span> <span class="token punctuation">{</span>                            <span class="token keyword">return</span> option.page                        <span class="token punctuation">}</span>                        <span class="token keyword">return</span> this.arr.length % this.pagesize ? <span class="token punctuation">(</span>parseInt<span class="token punctuation">(</span>this.arr.length / this                            .pagesize<span class="token punctuation">)</span> + 1<span class="token punctuation">)</span> <span class="token keyword">:</span> this.arr.length / this.pagesize<span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                defaultOption.toPage <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    var that <span class="token operator">=</span> this<span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>this.isloading<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        this.isloading <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                        var res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                        <span class="token keyword">for</span> <span class="token punctuation">(</span>var i <span class="token operator">=</span> this.currentPage * this.pagesize, len <span class="token operator">=</span> <span class="token punctuation">((</span>i + this.pagesize <span class="token operator">&lt;</span> this.arr                                .length<span class="token punctuation">)</span> ? i + this.pagesize <span class="token keyword">:</span> this.arr.length<span class="token punctuation">)</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i++<span class="token punctuation">)</span> <span class="token punctuation">{</span>                            res.push<span class="token punctuation">(</span>                                <span class="token string">'&lt;div class="imgitem col-md-4 col-sm-4 col-xs-6" style="display:none;">'</span>                                <span class="token punctuation">)</span><span class="token punctuation">;</span>                            res.push<span class="token punctuation">(</span><span class="token string">'    &lt;a href="#">'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            res.push<span class="token punctuation">(</span><span class="token string">'        &lt;img src="'</span> + this.arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span>.img + <span class="token string">'" class="img-responsive">'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            res.push<span class="token punctuation">(</span><span class="token string">'        &lt;div class="mask">'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            res.push<span class="token punctuation">(</span><span class="token string">'            &lt;h4>'</span> + this.arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span>.title + <span class="token string">'&lt;/h4>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            res.push<span class="token punctuation">(</span><span class="token string">'            &lt;strong>'</span> + this.arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span>.content + <span class="token string">'&lt;/strong>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            res.push<span class="token punctuation">(</span><span class="token string">'            &lt;span class="qwe">查看该案例详情&lt;/span>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            res.push<span class="token punctuation">(</span><span class="token string">'        &lt;/div>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            res.push<span class="token punctuation">(</span><span class="token string">'    &lt;/a>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            res.push<span class="token punctuation">(</span><span class="token string">'&lt;/div>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">}</span>                        <span class="token variable"><span class="token variable">$(</span>this.el<span class="token variable">)</span></span>.append<span class="token punctuation">(</span>res.join<span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">))</span><span class="token punctuation">;</span>                        <span class="token punctuation">$(</span><span class="token string">'.imgitem:not(:visible)'</span><span class="token punctuation">)</span>.fadeIn<span class="token punctuation">(</span>1500<span class="token punctuation">)</span><span class="token punctuation">;</span>                        this.<span class="token variable">$loadText</span>.html<span class="token punctuation">(</span>this.loadTxt.more<span class="token punctuation">)</span><span class="token punctuation">;</span>                        this.currentPage++<span class="token punctuation">;</span>                        setTimeout<span class="token punctuation">(</span>function <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                            that.isloading <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                        <span class="token punctuation">}</span>, 1000<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span><span class="token punctuation">;</span>                defaultOption.init <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    var that <span class="token operator">=</span> this<span class="token punctuation">;</span>                    this.toPage<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    //点击展开更多                    this.<span class="token variable">$loadText</span>.on<span class="token punctuation">(</span><span class="token string">'click'</span>, <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span>that.currentPage <span class="token operator">&lt;</span> that.page<span class="token punctuation">)</span> <span class="token punctuation">{</span>                            that.<span class="token variable">$loadText</span>.html<span class="token punctuation">(</span>that.loadTxt.loading<span class="token punctuation">)</span><span class="token punctuation">;</span>                            setTimeout<span class="token punctuation">(</span>function <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                that.toPage<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>, that.loadingTime<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                            that.<span class="token variable">$loadText</span>.html<span class="token punctuation">(</span>that.loadTxt.end<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">}</span>                        that.toPage<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    //页面滚动到距底部x距离时展开更多                    <span class="token variable"><span class="token variable">$(</span>window<span class="token variable">)</span></span>.on<span class="token punctuation">(</span><span class="token string">'scroll'</span>, <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        var wHeight <span class="token operator">=</span> <span class="token variable"><span class="token variable">$(</span>window<span class="token variable">)</span></span>.innerHeight<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        var dHeight <span class="token operator">=</span> <span class="token variable"><span class="token variable">$(</span>document<span class="token variable">)</span></span>.height<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        var sHeight <span class="token operator">=</span> <span class="token variable"><span class="token variable">$(</span>document<span class="token variable">)</span></span>.scrollTop<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        var bottomLength <span class="token operator">=</span> dHeight - wHeight - sHeight<span class="token punctuation">;</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span>bottomLength <span class="token operator">&lt;=</span> that.bottom<span class="token punctuation">)</span> <span class="token punctuation">{</span> //距底部高度                            <span class="token keyword">if</span> <span class="token punctuation">(</span>that.currentPage <span class="token operator">&lt;</span> that.page<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                that.<span class="token variable">$loadText</span>.html<span class="token punctuation">(</span>that.loadTxt.loading<span class="token punctuation">)</span><span class="token punctuation">;</span>                                setTimeout<span class="token punctuation">(</span>function <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                    that.toPage<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                <span class="token punctuation">}</span>, that.loadingTime<span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                that.<span class="token variable">$loadText</span>.html<span class="token punctuation">(</span>that.loadTxt.end<span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                        <span class="token punctuation">}</span>                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                defaultOption.init<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> defaultOption<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>jQuery, document<span class="token punctuation">)</span><span class="token punctuation">;</span>        //调用方式        $.pageScroll<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&lt;</span>/script<span class="token operator">></span><span class="token operator">&lt;</span>/body<span class="token operator">></span><span class="token operator">&lt;</span>/html<span class="token operator">></span></code></pre><p>示例：<a href="https://codepen.io/xmwarrior/pen/wvBqJjV" target="_blank" rel="noopener">请点这里</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jquery </tag>
            
            <tag> bootstrap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js规范</title>
      <link href="/2018/04/13/js-gui-fan/"/>
      <url>/2018/04/13/js-gui-fan/</url>
      
        <content type="html"><![CDATA[<h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><h3 id="原则"><a href="#原则" class="headerlink" title="原则"></a><strong>原则</strong></h3><p>As short as possible（如无必要，勿增注释）：尽量提高代码本身的清晰性、可读性。</p><p>As long as necessary（如有必要，尽量详尽）：合理的注释、空行排版等，可以让代码更易阅读、更具美感。</p><h3 id="单行注释"><a href="#单行注释" class="headerlink" title="单行注释"></a><strong>单行注释</strong></h3><p>必须独占一行。<code>//</code> 后跟一个空格，缩进与下一行被注释说明的代码一致。</p><h3 id="多行注释"><a href="#多行注释" class="headerlink" title="多行注释"></a><strong>多行注释</strong></h3><p>避免使用 <code>/*...*/</code> 这样的多行注释。有多行注释内容时，使用多个单行注释。</p><h3 id="函数-方法注释"><a href="#函数-方法注释" class="headerlink" title="函数/方法注释"></a><strong>函数/方法注释</strong></h3><p>函数/方法注释必须包含函数说明，有参数和返回值时必须使用注释标识。；<br>参数和返回值注释必须包含类型信息和说明；<br>当函数是内部函数，外部不可访问时，可以使用 <code>@inner</code> 标识；</p><pre class=" language-bash"><code class="language-bash">/** * 函数描述 * * @param <span class="token punctuation">{</span>string<span class="token punctuation">}</span> p1 参数1的说明 * @param <span class="token punctuation">{</span>string<span class="token punctuation">}</span> p2 参数2的说明，比较长 *     那就换行了. * @param <span class="token punctuation">{</span>number<span class="token operator">=</span><span class="token punctuation">}</span> p3 参数3的说明（可选） * @return <span class="token punctuation">{</span>Object<span class="token punctuation">}</span> 返回值描述 */<span class="token keyword">function</span> foo<span class="token punctuation">(</span>p1, p2, p3<span class="token punctuation">)</span> <span class="token punctuation">{</span>    var p3 <span class="token operator">=</span> p3 <span class="token operator">||</span> 10<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>        p1: p1,        p2: p2,        p3: p3    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="文件注释"><a href="#文件注释" class="headerlink" title="文件注释"></a><strong>文件注释</strong></h3><p>文件注释用于告诉不熟悉这段代码的读者这个文件中包含哪些东西。 应该提供文件的大体内容, 它的 <strong><code>作者</code></strong> , <strong><code>依赖关系</code></strong> 和 <strong><code>兼容性信息</code></strong> 。如下:</p><pre class=" language-bash"><code class="language-bash">/** * @fileoverview Description of file, its uses and information * about its dependencies. * @author user@meizu.com <span class="token punctuation">(</span>Firstname Lastname<span class="token punctuation">)</span> * Copyright 2009 Meizu Inc. All Rights Reserved. */</code></pre><h2 id="命名语法"><a href="#命名语法" class="headerlink" title="命名语法"></a>命名语法</h2><p>类名，使用名词。<br><code>function Engine(options) {}</code></p><p>函数名，使用动宾短语。<br><code>function getStyle(element) {}</code></p><p>boolean 类型的变量使用 is 或 has 开头。</p><pre class=" language-bash"><code class="language-bash">var isReady <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>var hasMoreCommands <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></code></pre><p>Promise 对象用动宾短语的进行时表达。</p><pre class=" language-bash"><code class="language-bash">var loadingData <span class="token operator">=</span> ajax.get<span class="token punctuation">(</span><span class="token string">'url'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>loadingData.then<span class="token punctuation">(</span>callback<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="接口命名规范"><a href="#接口命名规范" class="headerlink" title="接口命名规范"></a><strong>接口命名规范</strong></h3><p>可读性强，见名晓义；<br>尽量不与 jQuery 社区已有的习惯冲突；<br>尽量写全。不用缩写，除非是下面列表中约定的；（变量以表达清楚为目标，uglify 会完成压缩体积工作）</p><table><thead><tr><th>常用词</th><th>说明：</th></tr></thead><tbody><tr><td>options</td><td>表示选项，与 jQuery 社区保持一致，不要用 config, opts 等</td></tr><tr><td>active</td><td>表示当前，不要用 current 等</td></tr><tr><td>index</td><td>表示索引，不要用 idx 等</td></tr><tr><td>trigger</td><td>触点元素</td></tr><tr><td>triggerType</td><td>触发类型、方式</td></tr><tr><td>context</td><td>表示传入的 this 对象</td></tr><tr><td>object</td><td>推荐写全，不推荐简写为 o, obj 等</td></tr><tr><td>element</td><td>推荐写全，不推荐简写为 el, elem 等</td></tr><tr><td>length</td><td>不要写成 len, l</td></tr><tr><td>prev</td><td>previous 的缩写</td></tr><tr><td>next</td><td>next 下一个</td></tr><tr><td>constructor</td><td>不能写成 ctor</td></tr><tr><td>easing</td><td>示动画平滑函数</td></tr><tr><td>min</td><td>minimize 的缩写</td></tr><tr><td>max</td><td>maximize 的缩写</td></tr><tr><td>DOM</td><td>不要写成 dom, Dom</td></tr><tr><td>.hbs</td><td>使用 hbs 后缀表示模版</td></tr><tr><td>btn</td><td>button 的缩写</td></tr><tr><td>link</td><td>超链接</td></tr><tr><td>title</td><td>主要文本</td></tr><tr><td>img</td><td>图片路径（img标签src属性)</td></tr><tr><td>dataset</td><td>html5 data-xxx 数据接口</td></tr><tr><td>theme</td><td>主题</td></tr><tr><td>className</td><td>类名</td></tr><tr><td>classNameSpace</td><td>class 命名空间</td></tr></tbody></table><p><strong> </strong>建议jquery对象命名采用 <code>$element</code>格式**</p><h2 id="True-和-False-布尔表达式"><a href="#True-和-False-布尔表达式" class="headerlink" title="True 和 False 布尔表达式"></a>True 和 False 布尔表达式</h2><p>类型检测优先使用 typeof。对象类型检测使用 instanceof。null 或 undefined 的检测使用 == null。<br>下面的布尔表达式都返回 false:</p><ul><li>null</li><li>undefined</li><li>‘’ 空字符串</li><li>0 数字0</li><li>但小心下面的, 可都返回 true:</li><li>‘0’ 字符串0</li><li>[] 空数组</li><li>{} 空对象</li></ul><h2 id="不要在-Array-上使用-for-in-循环"><a href="#不要在-Array-上使用-for-in-循环" class="headerlink" title="不要在 Array 上使用 for-in 循环"></a>不要在 Array 上使用 for-in 循环</h2><p>for-in 循环只用于 object/map/hash 的遍历, 对 Array 用 for-in 循环有时会出错. 因为它并不是从 0 到 length - 1 进行遍历, 而是所有出现在对象及其原型链的键值。</p><h2 id="条件-三元-操作符"><a href="#条件-三元-操作符" class="headerlink" title="条件(三元)操作符 (?:)"></a>条件(三元)操作符 (?:)</h2><p>三元操作符用于替代 if 条件判断语句。</p><pre class=" language-bash"><code class="language-bash">// Not recommended<span class="token keyword">if</span> <span class="token punctuation">(</span>val <span class="token operator">!=</span> 0<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> foo<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> bar<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>// Recommended<span class="token keyword">return</span> val ? foo<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">:</span> bar<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="amp-amp-和"><a href="#amp-amp-和" class="headerlink" title="&amp;&amp; 和 ||"></a>&amp;&amp; 和 ||</h2><p>二元布尔操作符是可短路的, 只有在必要时才会计算到最后一项。</p><pre class=" language-bash"><code class="language-bash">// Not recommended<span class="token keyword">function</span> foo<span class="token punctuation">(</span>opt_win<span class="token punctuation">)</span> <span class="token punctuation">{</span>  var win<span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>opt_win<span class="token punctuation">)</span> <span class="token punctuation">{</span>    win <span class="token operator">=</span> opt_win<span class="token punctuation">;</span>  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    win <span class="token operator">=</span> window<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  // <span class="token punctuation">..</span>.<span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>node.kids<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>node.kids<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      foo<span class="token punctuation">(</span>node.kids<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span>// Recommended<span class="token keyword">function</span> foo<span class="token punctuation">(</span>opt_win<span class="token punctuation">)</span> <span class="token punctuation">{</span>  var win <span class="token operator">=</span> opt_win <span class="token operator">||</span> window<span class="token punctuation">;</span>  // <span class="token punctuation">..</span>.<span class="token punctuation">}</span>var kid <span class="token operator">=</span> node <span class="token operator">&amp;&amp;</span> node.kids <span class="token operator">&amp;&amp;</span> node.kids<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>kid<span class="token punctuation">)</span> <span class="token punctuation">{</span>  foo<span class="token punctuation">(</span>kid<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="性能优化"><a href="#性能优化" class="headerlink" title="性能优化"></a>性能优化</h2><h3 id="避免不必要的DOM操作"><a href="#避免不必要的DOM操作" class="headerlink" title="避免不必要的DOM操作"></a><strong>避免不必要的DOM操作</strong></h3><p>浏览器遍历 DOM 元素的代价是昂贵的。最简单优化 DOM 树查询的方案是，当一个元素出现多次时，将它保存在一个变量中，就避免多次查询 DOM 树了。</p><pre class=" language-bash"><code class="language-bash">// goodvar myList <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>var myListHTML <span class="token operator">=</span> document.getElementById<span class="token punctuation">(</span><span class="token string">"myList"</span><span class="token punctuation">)</span>.innerHTML<span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span>var i <span class="token operator">=</span> 0<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> 100<span class="token punctuation">;</span> i++<span class="token punctuation">)</span> <span class="token punctuation">{</span>  myList +<span class="token operator">=</span> <span class="token string">"&lt;span>"</span> + i + <span class="token string">"&lt;/span>"</span><span class="token punctuation">;</span><span class="token punctuation">}</span>myListHTML <span class="token operator">=</span> myList<span class="token punctuation">;</span>// bad<span class="token keyword">for</span> <span class="token punctuation">(</span>var i <span class="token operator">=</span> 0<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> 100<span class="token punctuation">;</span> i++<span class="token punctuation">)</span> <span class="token punctuation">{</span>  document.getElementById<span class="token punctuation">(</span><span class="token string">"myList"</span><span class="token punctuation">)</span>.innerHTML +<span class="token operator">=</span> <span class="token string">"&lt;span>"</span> + i + <span class="token string">"&lt;/span>"</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="缓存数组长度"><a href="#缓存数组长度" class="headerlink" title="缓存数组长度"></a><strong>缓存数组长度</strong></h3><p>循环无疑是和 JavaScript 性能非常相关的一部分。通过存储数组的长度，可以有效避免每次循环重新计算。<br>注: 虽然现代浏览器引擎会自动优化这个过程，但是不要忘记还有旧的浏览器。</p><pre class=" language-bash"><code class="language-bash">var arr <span class="token operator">=</span> new Array<span class="token punctuation">(</span>1000<span class="token punctuation">)</span>,    len, i<span class="token punctuation">;</span>// good<span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> 0, len <span class="token operator">=</span> arr.length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i++<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>// bad<span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> 0<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr.length<span class="token punctuation">;</span> i++<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></code></pre><h3 id="异步加载第三方内容"><a href="#异步加载第三方内容" class="headerlink" title="异步加载第三方内容"></a><strong>异步加载第三方内容</strong></h3><p>当你无法保证嵌入第三方内容比如 Youtube 视频或者一个 like/tweet 按钮可以正常工作的时候，你需要考虑用异步加载这些代码，避免阻塞整个页面加载。</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">(</span>function<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    var script,        scripts <span class="token operator">=</span> document.getElementsByTagName<span class="token punctuation">(</span><span class="token string">'script'</span><span class="token punctuation">)</span><span class="token punctuation">[</span>0<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> load<span class="token punctuation">(</span>url<span class="token punctuation">)</span> <span class="token punctuation">{</span>      script <span class="token operator">=</span> document.createElement<span class="token punctuation">(</span><span class="token string">'script'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      script.async <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>      script.src <span class="token operator">=</span> url<span class="token punctuation">;</span>      scripts.parentNode.insertBefore<span class="token punctuation">(</span>script, scripts<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    load<span class="token punctuation">(</span><span class="token string">'//apis.google.com/js/plusone.js'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    load<span class="token punctuation">(</span><span class="token string">'//platform.twitter.com/widgets.js'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    load<span class="token punctuation">(</span><span class="token string">'//s.widgetsite.com/widget.js'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">))</span><span class="token punctuation">;</span></code></pre><h3 id="避免使用-jQuery-实现动画"><a href="#避免使用-jQuery-实现动画" class="headerlink" title="避免使用 jQuery 实现动画"></a><strong>避免使用 jQuery 实现动画</strong></h3><p>禁止使用 slideUp/Down() fadeIn/fadeOut() 等方法；尽量不使用 animate() 方法；</p><p>在确保产品兼容性的前提下，能利用requestAnimationFrame方式、css3方式实现的动画，就尽量用以上两种方式代替jQuery实现。</p><p>requestAnimationFrame使用方法请参考：<a href="http://www.zhangxinxu.com/wordpress/2013/09/css3-animation-requestanimationframe-tween-%E5%8A%A8%E7%94%BB%E7%AE%97%E6%B3%95/" target="_blank" rel="noopener">CSS3动画那么强，requestAnimationFrame还有毛线用？-赵鑫旭</a></p><h3 id="备注："><a href="#备注：" class="headerlink" title="备注："></a><strong>备注：</strong></h3><ol><li>开发环境统一严格模式，所有js文件头部统一添加<code>/*use strict*/</code>;</li></ol>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css规范</title>
      <link href="/2018/04/13/css-gui-fan/"/>
      <url>/2018/04/13/css-gui-fan/</url>
      
        <content type="html"><![CDATA[<h2 id="命名"><a href="#命名" class="headerlink" title="命名"></a>命名</h2><p> id采用驼峰式命名；<br> 类名使用小写字母，以中划线分隔。</p><h2 id="正确使用-Display-的属性"><a href="#正确使用-Display-的属性" class="headerlink" title="正确使用 Display 的属性"></a>正确使用 Display 的属性</h2><p>Display 属性会影响页面的渲染，请合理使用。</p><ul><li>display: inline后不应该再使用 width、height、margin、padding 以及 float；</li><li>display: inline-block 后不应该再使用 float；</li><li>display: block 后不应该再使用 vertical-align；</li><li>display: table-* 后不应该再使用 margin 或者 float；</li></ul><h2 id="不滥用-Float"><a href="#不滥用-Float" class="headerlink" title="不滥用 Float"></a>不滥用 Float</h2><p>Float在渲染时计算量比较大，尽量减少使用。</p><h2 id="多利用硬件能力，如通过-3D-变形开启-GPU-加速"><a href="#多利用硬件能力，如通过-3D-变形开启-GPU-加速" class="headerlink" title="多利用硬件能力，如通过 3D 变形开启 GPU 加速"></a>多利用硬件能力，如通过 3D 变形开启 GPU 加速</h2><p>一般在 Chrome 中，3D或透视变换（perspective transform）CSS属性和对 opacity 进行 CSS 动画会创建新的图层，在硬件加速渲染通道的优化下，GPU 完成 3D 变形等操作后，将图层进行复合操作（Compesite Layers），从而避免触发浏览器大面积重绘和重排。<br>注：3D 变形会消耗更多的内存和功耗。<br>使用 translate3d 右移 500px 的动画流畅度要明显优于直接使用 left：</p><pre class=" language-bash"><code class="language-bash">.ball-1 <span class="token punctuation">{</span>  transition: -webkit-transform .5s ease<span class="token punctuation">;</span>  -webkit-transform: translate3d<span class="token punctuation">(</span>0, 0, 0<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>.ball-1.slidein<span class="token punctuation">{</span>  -webkit-transform: translate3d<span class="token punctuation">(</span>500px, 0, 0<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>.ball-2 <span class="token punctuation">{</span>  transition: left .5s ease<span class="token punctuation">;</span> left：0<span class="token punctuation">;</span><span class="token punctuation">}</span>.ball-2.slidein <span class="token punctuation">{</span>  left：500px<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="提升-CSS-选择器性能"><a href="#提升-CSS-选择器性能" class="headerlink" title="提升 CSS 选择器性能"></a>提升 CSS 选择器性能</h2><p>CSS 选择器对性能的影响源于浏览器匹配选择器和文档元素时所消耗的时间，所以优化选择器的原则是应尽量避免使用消耗更多匹配时间的选择器。而在这之前我们需要了解 CSS 选择器匹配的机制， 如子选择器规则：<br><code>#header &gt; a {font-weight:blod;}</code><br>我们中的大多数人都是从左到右的阅读习惯，会习惯性的设定浏览器也是从左到右的方式进行匹配规则，推测这条规则的开销并不高。<br>我们会假设浏览器以这样的方式工作：寻找 id 为 header 的元素，然后将样式规则应用到直系子元素中的 a 元素上。我们知道文档中只有一个 id 为 header 的元素，并且它只有几个 a 元素的子节点，所以这个 CSS 选择器应该相当高效。<br>事实上，却恰恰相反，CSS 选择器是从右到左进行规则匹配。了解这个机制后，例子中看似高效的选择器在实际中的匹配开销是很高的，浏览器必须遍历页面中所有的 a 元素并且确定其父元素的 id 是否为 header 。<br>如果把例子的子选择器改为后代选择器则会开销更多，在遍历页面中所有 a 元素后还需向其上级遍历直到根节点。<br><code>#header  a {font-weight:blod;}</code><br>理解了CSS选择器从右到左匹配的机制后，明白只要当前选择符的左边还有其他选择符，样式系统就会继续向左移动，直到找到和规则匹配的选择符，或者因为不匹配而退出。我们把最右边选择符称之为关键选择器。——更多详情</p><h3 id="1-避免使用通用选择器"><a href="#1-避免使用通用选择器" class="headerlink" title="1.避免使用通用选择器"></a>1.避免使用通用选择器</h3><p>浏览器匹配文档中所有的元素后分别向上逐级匹配 class 为 content 的元素，直到文档的根节点。因此其匹配开销是非常大的，所以应避免使用关键选择器是通配选择器的情况。</p><pre class=" language-bash"><code class="language-bash">/* bad */.content * <span class="token punctuation">{</span>color: red<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="2-避免使用标签或-class-选择器限制-id-选择器"><a href="#2-避免使用标签或-class-选择器限制-id-选择器" class="headerlink" title="2.避免使用标签或 class 选择器限制 id 选择器"></a>2.避免使用标签或 class 选择器限制 id 选择器</h3><pre class=" language-bash"><code class="language-bash">/* bad */button<span class="token comment" spellcheck="true">#backButton {…}</span>/* good */<span class="token comment" spellcheck="true">#newMenuIcon {…}</span></code></pre><h3 id="3-避免使用标签限制-class-选择器"><a href="#3-避免使用标签限制-class-选择器" class="headerlink" title="3. 避免使用标签限制 class 选择器"></a>3. 避免使用标签限制 class 选择器</h3><pre class=" language-bash"><code class="language-bash">/* bad */treecell.indented <span class="token punctuation">{</span>…<span class="token punctuation">}</span>/* good */.treecell-indented <span class="token punctuation">{</span>…<span class="token punctuation">}</span>/* better */.hierarchy-deep <span class="token punctuation">{</span>…<span class="token punctuation">}</span></code></pre><h3 id="4-避免使用多层标签选择器。使用-class-选择器替换，减少css查找"><a href="#4-避免使用多层标签选择器。使用-class-选择器替换，减少css查找" class="headerlink" title="4. 避免使用多层标签选择器。使用 class 选择器替换，减少css查找"></a>4. 避免使用多层标签选择器。使用 class 选择器替换，减少css查找</h3><pre class=" language-bash"><code class="language-bash">/* bad */treeitem<span class="token punctuation">[</span>mailfolder<span class="token operator">=</span><span class="token string">"true"</span><span class="token punctuation">]</span> <span class="token operator">></span> treerow <span class="token operator">></span> treecell <span class="token punctuation">{</span>…<span class="token punctuation">}</span>/* good */.treecell-mailfolder <span class="token punctuation">{</span>…<span class="token punctuation">}</span></code></pre><h3 id="5-避免使用子选择器"><a href="#5-避免使用子选择器" class="headerlink" title="5. 避免使用子选择器"></a>5. 避免使用子选择器</h3><pre class=" language-bash"><code class="language-bash">/* bad */treehead treerow treecell <span class="token punctuation">{</span>…<span class="token punctuation">}</span>/* good */treehead <span class="token operator">></span> treerow <span class="token operator">></span> treecell <span class="token punctuation">{</span>…<span class="token punctuation">}</span>/* better */.treecell-header <span class="token punctuation">{</span>…<span class="token punctuation">}</span></code></pre><h3 id="6-使用继承"><a href="#6-使用继承" class="headerlink" title="6. 使用继承"></a>6. 使用继承</h3><pre class=" language-bash"><code class="language-bash">/* bad */<span class="token comment" spellcheck="true">#bookmarkMenuItem > .menu-left { list-style-image: url(blah) }</span>/* good */<span class="token comment" spellcheck="true">#bookmarkMenuItem { list-style-image: url(blah) }</span></code></pre><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>-不允许有空的规则；<br>-元素选择器用小写字母；<br>-去掉数字中不必要的小数点和末尾的0；<br>-属性值’0’后面不要加单位；<br>-同个属性不同前缀的写法需要在垂直方向保持对齐；<br>-无前缀的标准属性应该写在有前缀的属性后面；<br>-不要在同个规则里出现重复的属性，如果重复的属性是连续的则没关系；<br>-不要在一个文件里出现两个相同的规则；<br>-用 border: 0; 代替 border: none;；<br>-选择器不要超过4层（在scss中如果超过4层应该考虑用嵌套的方式来写）；<br>-发布的代码中不要有 @import；<br>-尽量少用’*’选择器。</p><h3 id="nec-网易-的reset"><a href="#nec-网易-的reset" class="headerlink" title="nec(网易) 的reset"></a>nec(网易) 的reset</h3><pre class=" language-bash"><code class="language-bash">/* reset */html,body,h1,h2,h3,h4,h5,h6,div,dl,dt,dd,ul,ol,li,p,blockquote,pre,hr,figure,table,caption,th,td,form,fieldset,legend,input,button,textarea,menu<span class="token punctuation">{</span>margin:0<span class="token punctuation">;</span>padding:0<span class="token punctuation">;</span><span class="token punctuation">}</span>header,footer,section,article,aside,nav,hgroup,address,figure,figcaption,menu,details<span class="token punctuation">{</span>display:block<span class="token punctuation">;</span><span class="token punctuation">}</span>table<span class="token punctuation">{</span>border-collapse:collapse<span class="token punctuation">;</span>border-spacing:0<span class="token punctuation">;</span><span class="token punctuation">}</span>caption,th<span class="token punctuation">{</span>text-align:left<span class="token punctuation">;</span>font-weight:normal<span class="token punctuation">;</span><span class="token punctuation">}</span>html,body,fieldset,img,iframe,abbr<span class="token punctuation">{</span>border:0<span class="token punctuation">;</span><span class="token punctuation">}</span>i,cite,em,var,address,dfn<span class="token punctuation">{</span>font-style:normal<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">[</span>hidefocus<span class="token punctuation">]</span>,summary<span class="token punctuation">{</span>outline:0<span class="token punctuation">;</span><span class="token punctuation">}</span>li<span class="token punctuation">{</span>list-style:none<span class="token punctuation">;</span><span class="token punctuation">}</span>h1,h2,h3,h4,h5,h6,small<span class="token punctuation">{</span>font-size:100%<span class="token punctuation">;</span><span class="token punctuation">}</span>sup,sub<span class="token punctuation">{</span>font-size:83%<span class="token punctuation">;</span><span class="token punctuation">}</span>pre,code,kbd,samp<span class="token punctuation">{</span>font-family:inherit<span class="token punctuation">;</span><span class="token punctuation">}</span>q:before,q:after<span class="token punctuation">{</span>content:none<span class="token punctuation">;</span><span class="token punctuation">}</span>textarea<span class="token punctuation">{</span>overflow:auto<span class="token punctuation">;</span>resize:none<span class="token punctuation">;</span><span class="token punctuation">}</span>label,summary<span class="token punctuation">{</span>cursor:default<span class="token punctuation">;</span><span class="token punctuation">}</span>a,button<span class="token punctuation">{</span>cursor:pointer<span class="token punctuation">;</span><span class="token punctuation">}</span>h1,h2,h3,h4,h5,h6,em,strong,b<span class="token punctuation">{</span>font-weight:bold<span class="token punctuation">;</span><span class="token punctuation">}</span>del,ins,u,s,a,a:hover<span class="token punctuation">{</span>text-decoration:none<span class="token punctuation">;</span><span class="token punctuation">}</span>body,textarea,input,button,select,keygen,legend<span class="token punctuation">{</span>font:12px/1.14 arial,\5b8b\4f53<span class="token punctuation">;</span>color:<span class="token comment" spellcheck="true">#333;outline:0;}</span>body<span class="token punctuation">{</span>background:<span class="token comment" spellcheck="true">#fff;}</span>a,a:hover<span class="token punctuation">{</span>color:<span class="token comment" spellcheck="true">#333;}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>html规范</title>
      <link href="/2018/04/13/html-gui-fan/"/>
      <url>/2018/04/13/html-gui-fan/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="head"><a href="#head" class="headerlink" title="head"></a>head</h2><p>head基本内容：</p><pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span><span class="token operator">!</span>--字符编码：--<span class="token operator">></span><span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span>--页面标题：--<span class="token operator">></span><span class="token operator">&lt;</span>title<span class="token operator">></span>青岛乘正科技有限公司<span class="token operator">&lt;</span>/title<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span>--页面关键词：--<span class="token operator">></span><span class="token operator">&lt;</span>meta name<span class="token operator">=</span><span class="token string">"keywords"</span> content<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span>--页面描述内容：--<span class="token operator">></span><span class="token operator">&lt;</span>meta name<span class="token operator">=</span><span class="token string">"Description"</span> content<span class="token operator">=</span><span class="token string">"不超过150个字符"</span> /<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span>--移动端及响应式网站：--<span class="token operator">></span><span class="token operator">&lt;</span>meta name<span class="token operator">=</span><span class="token string">"viewport"</span> content<span class="token operator">=</span><span class="token string">"width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no"</span> /<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span>--favicon 图标：--<span class="token operator">></span><span class="token operator">&lt;</span>link rel<span class="token operator">=</span><span class="token string">"shortcut icon"</span> href<span class="token operator">=</span><span class="token string">"img/favicon.ico"</span> type<span class="token operator">=</span><span class="token string">"img/x-icon"</span> /<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span>--bookmark 图标：--<span class="token operator">></span><span class="token operator">&lt;</span>link rel<span class="token operator">=</span><span class="token string">"bookmark"</span> href<span class="token operator">=</span><span class="token string">"img/favicon.ico"</span> type<span class="token operator">=</span><span class="token string">"img/x-icon"</span> /<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span>--网页作者：--<span class="token operator">></span><span class="token operator">&lt;</span>meta name<span class="token operator">=</span><span class="token string">"author"</span> content<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span></code></pre><h3 id="可以选择加入的标签："><a href="#可以选择加入的标签：" class="headerlink" title="可以选择加入的标签："></a><strong><em>可以选择加入的标签</em></strong>：</h3><ul><li>1.设定网页的到期时间。一旦网页过期，必须到服务器上重新调阅。</li></ul><pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span>meta http-equiv<span class="token operator">=</span><span class="token string">"expires"</span> content<span class="token operator">=</span><span class="token string">"Wed, 26 Feb 1997 08：21：57 GMT"</span><span class="token operator">></span></code></pre><ul><li>2.禁止浏览器从本地机的缓存中调阅页面内容。</li></ul><pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span>meta http-equiv<span class="token operator">=</span><span class="token string">"Pragma"</span> content<span class="token operator">=</span><span class="token string">"no-cache"</span><span class="token operator">></span></code></pre><ul><li>3.用来防止别人在框架里调用你的页面。</li></ul><pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span>meta http-equiv<span class="token operator">=</span><span class="token string">"Window-target"</span> content<span class="token operator">=</span><span class="token string">"_top"</span><span class="token operator">></span></code></pre><ul><li>4.自动跳转(5 指时间停留 5 秒)。</li></ul><pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span>meta http-equiv<span class="token operator">=</span><span class="token string">"refresh"</span> content<span class="token operator">=</span><span class="token string">"5;url=http://www.baidu.com"</span><span class="token operator">></span></code></pre><p><strong><em>备注</em></strong><br>http缓存机制深入理解推荐文章：</p><ol><li><a href="https://www.cnblogs.com/chenqf/p/6386163.html" target="_blank" rel="noopener">彻底弄懂HTTP缓存机制及原理</a></li><li><a href="https://www.cnblogs.com/vajoy/p/5341664.html" target="_blank" rel="noopener">浅谈浏览器http的缓存机制</a></li></ol><h2 id="body"><a href="#body" class="headerlink" title="body"></a>body</h2><ul><li>1.请不要在网页中连续出现多于一个的空格，也尽量少使用全角空格（英文字符集下，全角空格会变成乱码），空白应该尽量使用 <code>text-indent</code> <code>padding</code> <code>margin</code>实现。</li><li>2.a标签无文字提示时设置title属性，img标签设置alt属性。a标签默认占位符’###’。</li></ul><pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"###"</span> title<span class="token operator">=</span><span class="token string">"给链接文字提示"</span><span class="token operator">></span><span class="token operator">&lt;</span>img src<span class="token operator">=</span><span class="token string">"图片.gif"</span> alt<span class="token operator">=</span><span class="token string">"给图片提示"</span><span class="token operator">></span><span class="token operator">&lt;</span>/a<span class="token operator">></span></code></pre><ul><li>3.尽量遵循HTML标准和语义。基本的H5语义标签。</li></ul><pre class=" language-bash"><code class="language-bash"> <span class="token variable"><span class="token variable">`</span>header<span class="token variable">`</span></span> <span class="token variable"><span class="token variable">`</span>nav<span class="token variable">`</span></span> <span class="token variable"><span class="token variable">`</span>section<span class="token variable">`</span></span> <span class="token variable"><span class="token variable">`</span>artical<span class="token variable">`</span></span> <span class="token variable"><span class="token variable">`</span>aside<span class="token variable">`</span></span> <span class="token variable"><span class="token variable">`</span>dialog<span class="token variable">`</span></span> <span class="token variable"><span class="token variable">`</span>footer<span class="token variable">`</span></span></code></pre><ul><li>4.标签属性定义推荐顺序依次为：</li></ul><pre class=" language-bash"><code class="language-bash">  <span class="token variable"><span class="token variable">`</span><span class="token function">id</span> class name data-*<span class="token variable">`</span></span></code></pre><ul><li>5.尽量避免多余的父节点、注释节点。例：</li></ul><pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span>--多余父节点--<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span>--<span class="token operator">&lt;</span>span<span class="token operator">></span>无用注释节点<span class="token operator">&lt;</span>/span<span class="token operator">></span>--<span class="token operator">></span><span class="token operator">&lt;</span>div class<span class="token operator">=</span><span class="token string">"container"</span><span class="token operator">></span><span class="token punctuation">..</span>.<span class="token operator">&lt;</span>/div<span class="token operator">></span><span class="token operator">&lt;</span>/div<span class="token operator">></span></code></pre><h3 id="补充："><a href="#补充：" class="headerlink" title="补充："></a><strong>补充</strong>：</h3><ul><li>尽量采用外链css样式，避免内部及内联样式。</li><li>script统一放至body标签内最后。（此引用js方式，无需document.ready检测）</li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>灵活的console</title>
      <link href="/2017/10/15/ling-huo-de-console/"/>
      <url>/2017/10/15/ling-huo-de-console/</url>
      
        <content type="html"><![CDATA[<pre class=" language-bash"><code class="language-bash">//打印信息。注：%s字符串，%d数字，%c添加css样式console.log<span class="token punctuation">(</span><span class="token string">'console.log'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>//打印警告console.warn<span class="token punctuation">(</span><span class="token string">'console.warn'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>//打印domconsole.dir<span class="token punctuation">(</span>document.getElementById<span class="token punctuation">(</span><span class="token string">'a3'</span><span class="token punctuation">))</span><span class="token punctuation">;</span>//打印表格console.table<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">{</span>    id: <span class="token string">'1'</span>,    name: <span class="token string">'小明'</span>,    age: <span class="token string">'18'</span>,    weight: <span class="token string">'55kg'</span><span class="token punctuation">}</span>, <span class="token punctuation">{</span>    id: <span class="token string">'1'</span>,    name: <span class="token string">'小红'</span>,    age: <span class="token string">'17'</span>,    weight: <span class="token string">'65kg'</span><span class="token punctuation">}</span><span class="token punctuation">]</span>, <span class="token punctuation">[</span><span class="token string">'name'</span>, <span class="token string">'age'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>//打印非匹配。应用场景：查找差异、ajax请求数据格式差异提示。var arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'1'</span>, <span class="token string">'2'</span>, <span class="token punctuation">{</span>    id: <span class="token string">'3'</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>arr.forEach<span class="token punctuation">(</span>function<span class="token punctuation">(</span>item, index<span class="token punctuation">)</span> <span class="token punctuation">{</span>    console.assert<span class="token punctuation">(</span>typeof item <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">'string'</span>, item<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>//打印计数。应用场景：dom绑定事件次数监测listenerAdd<span class="token punctuation">(</span>true<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> listenerAdd<span class="token punctuation">(</span>isfirst<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token operator">!</span>isfirst<span class="token operator">&amp;&amp;</span>console.countReset<span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    document.querySelector<span class="token punctuation">(</span><span class="token string">'#countAdd'</span><span class="token punctuation">)</span>.addEventListener<span class="token punctuation">(</span><span class="token string">'click'</span>, function<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        console.count<span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>//打印操作时间getRunTime<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> getRunTime<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    console.time<span class="token punctuation">(</span><span class="token string">'t'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    setTimeout<span class="token punctuation">(</span>function <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        console.timeEnd<span class="token punctuation">(</span><span class="token string">'t'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console.log<span class="token punctuation">(</span><span class="token string">'发现没有，时间t大于%c600ms'</span>, <span class="token string">'color:red'</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>, 600<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>//组合打印信息group<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> group<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    var res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    console.group<span class="token punctuation">(</span><span class="token string">'logGroup'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>var i <span class="token operator">=</span> 0, length <span class="token operator">=</span> 10<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> i++<span class="token punctuation">)</span> <span class="token punctuation">{</span>        console.log<span class="token punctuation">(</span><span class="token string">'&lt;li>'</span> + i + <span class="token string">'&lt;/li>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    console.groupEnd<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>参考文档：<br><a href="https://segmentfault.com/a/1190000018756503" target="_blank" rel="noopener">灵活使用 console 让 js 调试更简单</a><br>示例：<a href="https://codepen.io/xmwarrior/pen/abzyJGL" target="_blank" rel="noopener">请点这里</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>typora-vue-theme主题介绍</title>
      <link href="/2017/07/20/hello-world/"/>
      <url>/2017/07/20/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typora </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>入坑以来个人插件、练习整理收藏</title>
      <link href="/2017/07/20/ri-qian-zheng-li/"/>
      <url>/2017/07/20/ri-qian-zheng-li/</url>
      
        <content type="html"><![CDATA[<ul><li><p><a href="/plugins/01jquery插件/xmGantt/index.html">甘特图</a></p></li><li><p><a href="/plugins/01jquery插件/图层选择/index.html">图层选择</a></p></li><li><p><a href="/plugins/01jquery插件/大转盘/index.html">大转盘</a></p></li><li><p><a href="/plugins/01jquery插件/红包雨/index.html">红包雨</a></p></li><li><p><a href="/plugins/01jquery插件/连连看/index.html">连连看</a></p></li><li><p><a href="/plugins/01jquery插件/轮播图/index.html">轮播图</a></p></li><li><p><a href="/plugins/01jquery插件/视频播放器/index.html">视频播放器</a></p></li><li><p><a href="/plugins/01jquery插件/月签到/index.html">月签到</a></p></li><li><p><a href="/plugins/02js插件/canvas五子棋/index.html">canvas五子棋</a></p></li><li><p><a href="/plugins/02js插件/Audio播放器/index.html">Audio播放器</a></p></li><li><p><a href="/plugins/02js插件/canvas时钟/index.html">canvas时钟</a></p></li><li><p><a href="/plugins/02js插件/canvastab/index.html">canvastab</a></p></li><li><p><a href="/plugins/02js插件/canvas贪吃蛇/index.html">canvas贪吃蛇</a></p></li><li><p><a href="/plugins/02js插件/贪吃蛇_dom/index.html">贪吃蛇_Dom版</a></p></li><li><p><a href="/plugins/02js插件/canvas俄罗斯方块/index.html">canvas俄罗斯方块</a></p></li><li><p><a href="/plugins/02js插件/canvas投篮/index.html">canvas投篮</a></p></li><li><p><a href="/plugins/02js插件/jquery框架封装原理示例/index.html">jquery框架封装原理示例</a></p></li><li><p><a href="/plugins/02js插件/jsSlide_css3/index.html">jsSlide_css3</a></p></li><li><p><a href="/plugins/02js插件/jsSlide_css3&amp;toucher/index.html">jsSlide_css3toucher</a></p></li><li><p><a href="/plugins/02js插件/jsSlide_multiRow&amp;toucher/index.html">jsSlide_multiRowtoucher</a></p></li><li><p><a href="/plugins/02js插件/jsSlide_setInterval/index.html">jsSlide_setInterval</a></p></li><li><p><a href="/plugins/02js插件/jsSlide_setInterval&amp;toucher/index.html">jsSlide_setIntervaltoucher</a></p></li><li><p><a href="/plugins/02js插件/zindexSlide1/index.html">zindexSlide1</a></p></li><li><p><a href="/plugins/02js插件/zindexSlide2/index.html">zindexSlide2</a></p></li><li><p><a href="/plugins/02js插件/checkTime插件/index.html">Mobile_checkTime</a></p></li><li><p><a href="/plugins/02js插件/ajax封装/index.html">ajax封装</a></p></li><li><p><a href="/plugins/02js插件/documentReady封装/index.html">documentReady封装</a></p></li><li><p><a href="/plugins/02js插件/增删获取cookie/index.html">增删获取cookie</a></p></li><li><p><a href="/plugins/04小功能集合/canvas图片合成/index.html">canvas图片合成</a></p></li><li><p><a href="/plugins/04小功能集合/css3_3d旋转/index.html">css3_3d旋转</a></p></li><li><p><a href="/plugins/04小功能集合/css3_animation晃动/index.html">css3_animation晃动</a></p></li><li><p><a href="/plugins/04小功能集合/css3_transition旋转/index.html">css3_transition旋转</a></p></li><li><p><a href="/plugins/04小功能集合/css3_倒影/index.html">css3_倒影</a></p></li><li><p><a href="/plugins/04小功能集合/css3_下雪/index.html">css3_下雪</a></p></li><li><p><a href="/plugins/04小功能集合/div&amp;img_5px差解决方式/index.html">div&amp;img_5px差解决方式</a></p></li><li><p><a href="/plugins/04小功能集合/rem布局/index.html">rem布局</a></p></li><li><p><a href="/plugins/04小功能集合/scrollIntoView方法/index.html">scrollIntoView方法</a></p></li><li><p><a href="/plugins/04小功能集合/判断浏览器版本&amp;&amp;型号version/index.html">判断浏览器版本&amp;&amp;型号version</a></p></li><li><p><a href="/plugins/04小功能集合/网址生成二维码/index.html">网址生成二维码</a></p></li><li><p><a href="/plugins/04小功能集合/颜色转换_rgb与16进制/index.html">颜色转换_rgb与16进制</a></p></li><li><p><a href="/plugins/04小功能集合/一键复制copy/index.html">一键复制copy</a></p></li><li><p><a href="/plugins/04小功能集合/汉字自定义sort/index.html">汉字自定义sort</a></p></li><li><p><a href="/plugins/04小功能集合/禁止微信上下拉黑边/index.html">禁止微信上下拉黑边</a></p></li><li><p><a href="/plugins/04小功能集合/快速排序/index.html">快速排序</a></p></li><li><p><a href="/plugins/04小功能集合/微信跳转浏览器查看中间页/index.html">微信跳转浏览器查看中间页</a></p></li><li><p><a href="/plugins/04小功能集合/新浪接口获取地理位置&amp;服务器/index.html">新浪接口获取地理位置&amp;服务器</a></p></li><li><p><a href="/plugins/04小功能集合/页面无刷新跳转history_pushState/index.html">页面无刷新跳转history_pushState</a></p></li><li><p><a href="/plugins/04小功能集合/svg_DrawBuild/index.html">svg_逐步绘制建筑</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> css </tag>
            
            <tag> html </tag>
            
            <tag> 个人轮子整理 </tag>
            
            <tag> canvas </tag>
            
            <tag> svg </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
